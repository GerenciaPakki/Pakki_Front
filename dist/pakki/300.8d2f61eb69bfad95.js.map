{"version":3,"file":"300.8d2f61eb69bfad95.js","mappings":"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","names":["ModalModule","CommonModule","FormsModule","MaterialModule","ReactiveFormsModule","ComponentsModule","DefaultFormatter","to","value","String","parseFloat","toFixed","from","NouisliderComponent","constructor","ngZone","el","renderer","this","config","change","EventEmitter","update","slide","set","start","end","onChange","Function","prototype","cleanups","eventHandler","emitter","values","handle","unencoded","v","toValues","emitEvents","undefined","Array","isArray","run","observers","length","emit","defaultKeyHandler","e","newValue","stepSize","slider","steps","index","parseInt","target","getAttribute","sign","multiplier","step","delta","which","pageSteps","preventDefault","concat","ngOnInit","inputsConfig","JSON","parse","stringify","behaviour","connect","limit","formControl","ngModel","keyboard","onKeydown","range","min","max","tooltips","snap","animate","format","runOutsideAngular","create","nativeElement","querySelector","Object","assign","handles","slice","call","querySelectorAll","setAttribute","push","listen","focus","on","ngOnChanges","changes","setTimeout","updateOptions","ngOnDestroy","destroy","pop","map","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","childNodes","removeAttribute","ɵfac","t","ɵngcc0","ɵcmp","type","selectors","hostVars","hostBindings","rf","ctx","inputs","disabled","outputs","features","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","decls","vars","template","styles","NouisliderModule","ɵmod","ɵinj","exports","isValidPartialFormatter","entry","removeElement","parentElement","removeChild","isSet","isNumeric","a","isNaN","isFinite","addClassFor","element","className","duration","addClass","removeClass","Math","asArray","countDecimals","numStr","pieces","split","classList","test","add","remove","replace","RegExp","join","getPageOffset","doc","supportPageOffset","window","pageXOffset","isCSS1Compat","compatMode","x","documentElement","scrollLeft","body","y","pageYOffset","scrollTop","subRangeRatio","pa","pb","fromPercentage","startRange","getJ","arr","j","toStepping","xVal","xPct","toPercentage","abs","getStep","xSteps","b","closest","round","PipsMode","Range","Steps","Positions","Count","Values","PipsType","None","NoValue","LargeValue","SmallValue","Spectrum","singleStep","xNumSteps","xHighestCompleteStep","ordered","keys","forEach","sort","handleEntryPoint","handleStepPoint","getDistance","distances","getAbsoluteDistance","direction","xPct_index","start_factor","rest_factor","rest_rel_distance","range_pct","rel_range_distance","abs_distance_counter","range_counter","fromStepping","isPercentage","getDefaultStep","isDown","size","getNearbySteps","stepBefore","startValue","highestStep","thisStep","stepAfter","countStepDecimals","stepDecimals","apply","hasNoSize","convert","percentage","Error","value1","Number","i","n","ceil","defaultFormatter","cssClasses","base","origin","handleLower","handleUpper","touchArea","horizontal","vertical","background","connects","ltr","rtl","textDirectionLtr","textDirectionRtl","draggable","drag","tap","active","tooltip","pips","pipsHorizontal","pipsVertical","marker","markerHorizontal","markerVertical","markerNormal","markerLarge","markerSub","valueHorizontal","valueVertical","valueNormal","valueLarge","valueSub","INTERNAL_EVENT_NS","testStep","parsed","testKeyboardPageMultiplier","keyboardPageMultiplier","testKeyboardMultiplier","keyboardMultiplier","testKeyboardDefaultStep","keyboardDefaultStep","testRange","spectrum","testStart","testSnap","testAnimate","testAnimationDuration","animationDuration","testConnect","testOrientation","ort","testMargin","margin","testLimit","testPadding","padding","testDirection","dir","testBehaviour","indexOf","fixed","hover","unconstrained","dragAll","events","testTooltips","formatter","testHandleAttributes","handleAttributes","testAriaFormat","ariaFormat","testFormat","isValidFormatter","testKeyboardSupport","keyboardSupport","testDocumentElement","testCssPrefix","cssPrefix","testCssClasses","key","testOptions","options","tests","r","orientation","defaults","name","d","document","createElement","transformRule","style","transform","msTransform","scope","originalOptions","scope_Base","scope_Handles","scope_Connects","scope_Pips","scope_Tooltips","actions","getActions","navigator","pointerEnabled","move","msPointerEnabled","supportsPassive","getSupportsTouchActionNone","CSS","supports","getSupportsPassive","opts","defineProperty","get","addEventListener","scope_Target","scope_Spectrum","scope_Values","scope_Locations","scope_HandleNumbers","scope_ActiveHandlesCount","scope_Events","scope_Document","ownerDocument","scope_DocumentElement","scope_Body","scope_DirOffset","addNodeTo","addTarget","div","appendChild","addOrigin","handleNumber","event","eventKeydown","isSliderDisabled","isHandleDisabled","horizontalKeys","verticalKeys","largeStepKeys","edgeKeys","reverse","isLargeDown","isLargeUp","isUp","isMax","getNextStepsForHandle","setHandle","fireEvent","attributes_1","attribute","addConnect","addTooltip","firstChild","hasAttribute","removeTooltips","removeEvent","bindEvent","formattedValue","innerHTML","mapToRange","stepped","generateSpread","safeIncrement","increment","group","getGroup","mode","interval","spread","indexes","firstInRange","lastInRange","ignoreFirst","ignoreLast","prevPct","unique","array","filter","unshift","current","q","newPct","pctDifference","pctPos","realSteps","low","high","isSteps","density","addMarking","filterFunc","_a","_b","valueSizeClasses","markerSizeClasses","valueOrientationClasses","markerOrientationClasses","getClasses","source","offset","addSpread","node","removePips","baseSize","rect","getBoundingClientRect","alt","width","height","attachEvent","callback","data","method","fixEvent","pageOffset","eventTarget","touch","mouse","pointer","buttons","touches","isTouchOnTarget","checkTouch","contains","composed","composedPath","shift","targetTouches","pageX","pageY","targetTouch","find","changedTouches","clientX","clientY","points","cursor","doNotReject","hasClass","calcPoint","methods","eventName","passive","calcPointToPercentage","proposal","elem","docElem","userAgent","top","clientTop","left","clientLeft","documentLeave","nodeName","relatedTarget","eventEnd","eventMove","appVersion","buttonsProperty","movement","startCalcPoint","moveHandles","locations","handleNumbers","listeners","c","removeEventListener","setZindex","eventStart","some","children","stopPropagation","moveEvent","endEvent","outEvent","getComputedStyle","eventTap","getClosestHandle","clickedPosition","smallestDifference","handlePosition","differenceWithThisHandle","eventHover","targetEvent","scope_Self","namespacedEvent","namespace","substring","bind","tEvent","tNamespace","isInternalNamespace","eventType","checkHandlePosition","reference","lookBackward","lookForward","getValue","distance","inRuleOrder","o","upward","proposals","firstHandle","f","state","transformDirection","zIndex","exactInput","updateHandlePosition","translateRule","updateConnect","l","h","connectWidth","scaleRule","resolveToValue","valueSet","input","fireSetEvent","isInit","space_1","valueGet","location","nearbySteps","decrement","setupSlider","addSlider","addElements","connectOptions","connectBase","bindSliderEvents","handleBefore","handleAfter","eventHolders","handlesToDrag","handleNumbersToDrag","eventHolder","aria","positions","now","text","noUiSlider","getNextSteps","off","valueSetHandle","reset","valueReset","__moveHandles","optionsToUpdate","updateAble","newOptions","getPositions","getTooltips","getOrigins","initialize","api","nouislider","__spectrum","default","factory","i0","_r2","ctx_r1","Ng2DropdownButton","onMenuToggled","showCaret","toggleMenu","getPosition","i1","ACTIONS","items","select","selectedItem","click","onEscape","hide","arrowKeysHandler","keyCode","Ng2DropdownState","onItemSelected","onItemClicked","onItemDestroyed","_selectedItem","item","dispatchEvent","unselect","DropdownStateService","menuState","isVisible","toString","dropdownState","ɵprov","Ng2MenuItem","preventClose","isSelected","$event","Ng2DropdownMenu","focusFirstElement","appendToBody","arrowHandler","handleKeypress","show","position","dynamic","dc","wd","updatePosition","updateOnChange","toArray","hasOwnProperty","getMenuElement","calcPositionOffset","applyOffset","clientWidth","clientHeight","marginFromBottom","marginFromRight","windowScrollWidth","innerWidth","scrollX","innerHeight","scrollY","marginRight","setStyle","first","parentNode","dirIndex","_t","trigger","opacity","overflow","transition","keyframes","Ng2Dropdown","dynamicUpdate","onShow","onHide","subscribe","button","newSelectedItem","menu","scrollListener","ngContentSelectors","_c1","Ng2DropdownModule","_r6","ctx_r5","_r8","ctx_r7","ctx_r9","ctx_r10","ctx_r11","ctx_r8","ctx_r12","ctx_r13","ctx_r14","ctx_r15","error_r17","HighlightPipe","arg","trim","regex","s","escape","ɵpipe","pure","KEYDOWN","KEY_PRESS_ACTIONS","NEXT","PREV","DragProvider","dragging","dropping","setDraggedItem","tag","dataTransfer","setData","getDraggedItem","getData","setSender","sender","setReceiver","receiver","onTagDropped","indexDragged","indexDropped","onDragEnd","onRemoveRequested","onAddingRequested","setState","getState","tagInput","separatorKeys","separatorKeyCodes","maxItems","Infinity","placeholder","secondaryPlaceholder","validators","asyncValidators","onlyFromAutocomplete","errorMessages","theme","onTextChangeDebounce","inputId","inputClass","clearOnBlur","hideForm","addOnBlur","addOnPaste","pasteSplitPattern","blinkIfDupe","removable","editable","allowDupes","modelAsStrings","trimTags","ripple","tabIndex","disable","dragZone","onRemoving","onAdding","displayBy","identifyBy","enter","leave","dropdown","showDropdownIfEmpty","minimumTextLength","limitItemsTo","keepOpen","matchingFn","targetValue","toLowerCase","OptionsProvider","setOptions","isObject","obj","TagInputAccessor","_items","_onChangeCallback","onTouched","_onTouchedCallback","getItemValue","fromDropdown","property","getItemDisplay","getItemsWithout","ɵdir","listenerType","action","condition","TagInputForm","onSubmit","onBlur","onFocus","onKeyup","inputTextChange","tabindex","FormControl","inputText","setValue","setValidators","setAsyncValidators","form","FormGroup","firstChange","currentValue","controls","enable","isInputFocused","activeElement","getErrorMessages","messages","err","hasError","hasErrors","dirty","valid","blur","getElementPosition","onKeyDown","submit","onKeyUp","ngx_chips_c0","i2","TagRipple","borderRadius","DeleteIconComponent","vendor","isChrome","TagComponent","cdRef","onSelect","onRemove","onTagEdited","editing","rippleState","readonly","model","moving","keydown","disableEditMode","blink","toggleEditMode","activateEditMode","onBlurred","innerText","result","getDisplayValue","isRippleVisible","hasRipple","getContentEditableText","storeNewValue","detectChanges","setContentEditableText","isDeleteIconVisible","getContentEditable","exists","hasId","canAddTag","animations","TagInputDropdown","injector","TagInputComponent","_autocompleteItems","maxItemsReached","getFormValue","hasMinimumText","calculatePosition","getMatchingItems","hasItems","shouldShow","shouldHide","autocompleteObservable","getItemsFromObservable","setItems","requestAdding","_this","createTagModel","catch","resetItems","setLoadingState","pipe","populateItems","autocompleteItems","ngAfterViewInit","KEEP_OPEN","onTextChange","asObservable","distinctUntilChanged","debounceTime","inputForm","onWindowBlur","formValue","dupesAllowed","hasValue","tags","isLoading","TemplateRef","i1$1","encapsulation","CUSTOM_ACCESSOR","dragProvider","super","_this2","onAdd","onPaste","onValidationError","At","keyup","inputTextValue","errors","appendTag","createTag","val","isTagValid","fromAutocomplete","dupe","findDupe","assertions","Boolean","onPasteCallback","isIE","clipboardData","requests","setInputValue","resetInput","Promise","all","then","tabindexAttr","setUpKeypressListeners","setupSeparatorKeysListener","setUpInputKeydownListeners","setUpTextChangeSubscriber","setUpOnBlurSubscriber","setUpOnPasteListener","statusChanges$","statusChanges","filter$1","status","isProgressBarVisible$","console","warn","setAnimationMetadata","resolve","subscribeFn","removeItem","first$1","giveupFocus","reject","addItem","selectItem","selectedTag","fireEvents","listener","handleKeydown","shiftKey","moveToTag","isFirstTag","isLastTag","onFormSubmit","_this3","emitEvent","getControl","applyFocus","displayAutocomplete","hasCustomTemplate","templates","onDragStarted","zone","onDragOver","isDropping","isReceiver","onTagBlurred","changedElement","trackBy","updateEditedTag","isLast","isFirst","getTagIndex","getTagAtIndex","last","findIndex","display","appendItem","statusUpdate","hasKeyCode","hasKey","valueChanges","debounceTime$1","isFromAutocomplete","id","animationMetadata","params","optionsProvider","TagInputModule","static","COMPOSITION_BUFFER_MODE","useValue","imports","error","info","args","asyncGeneratorStep","_next"],"sourceRoot":"webpack:///","sources":["./src/app/modals/modal.module.ts","./node_modules/ng2-nouislider/__ivy_ngcc__/ng2-nouislider.js","./node_modules/nouislider/dist/nouislider.js","./node_modules/ng2-material-dropdown/fesm2020/ng2-material-dropdown.mjs","./node_modules/ngx-chips/fesm2020/ngx-chips.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../app.module';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { DatosEnvioComponent } from './datos-envio/datos-envio.component';\r\nimport { QrbancolombiaComponent } from './qrbancolombia/qrbancolombia.component';\r\nimport { DataphoneComponent } from './dataphone/dataphone.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DatosEnvioComponent,\r\n    QrbancolombiaComponent,\r\n    DataphoneComponent,\r\n  ],\r\n  exports: [DatosEnvioComponent, QrbancolombiaComponent, DataphoneComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule,\r\n  ],\r\n})\r\nexport class ModalModule {}\r\n","import { create } from 'nouislider';\nimport { Component, ElementRef, EventEmitter, Input, NgModule, NgZone, Output, Renderer2, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nclass DefaultFormatter {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    to(value) {\n        // formatting with http://stackoverflow.com/a/26463364/478584\n        return String(parseFloat(parseFloat(String(value)).toFixed(2)));\n    }\n    ;\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    from(value) {\n        return parseFloat(value);\n    }\n}\nclass NouisliderComponent {\n    /**\n     * @param {?} ngZone\n     * @param {?} el\n     * @param {?} renderer\n     */\n    constructor(ngZone, el, renderer) {\n        this.ngZone = ngZone;\n        this.el = el;\n        this.renderer = renderer;\n        this.config = {};\n        this.change = new EventEmitter(true);\n        this.update = new EventEmitter(true);\n        this.slide = new EventEmitter(true);\n        this.set = new EventEmitter(true);\n        this.start = new EventEmitter(true);\n        this.end = new EventEmitter(true);\n        this.onChange = Function.prototype;\n        this.cleanups = [];\n        this.eventHandler = (emitter, values, handle, unencoded) => {\n            let /** @type {?} */ v = this.toValues(values);\n            let /** @type {?} */ emitEvents = false;\n            if (this.value === undefined) {\n                this.value = v;\n                return;\n            }\n            if (Array.isArray(v) && this.value[handle] != v[handle]) {\n                emitEvents = true;\n            }\n            if (!Array.isArray(v) && this.value != v) {\n                emitEvents = true;\n            }\n            if (emitEvents) {\n                this.ngZone.run(() => {\n                    if (emitter.observers.length > 0) {\n                        emitter.emit(v);\n                    }\n                    this.onChange(v);\n                });\n            }\n            if (Array.isArray(v)) {\n                this.value[handle] = v[handle];\n            }\n            else {\n                this.value = v;\n            }\n        };\n        this.defaultKeyHandler = (e) => {\n            let /** @type {?} */ stepSize = this.slider.steps();\n            let /** @type {?} */ index = parseInt(((e.target)).getAttribute('data-handle'));\n            let /** @type {?} */ sign = 1;\n            let /** @type {?} */ multiplier = 1;\n            let /** @type {?} */ step = 0;\n            let /** @type {?} */ delta = 0;\n            switch (e.which) {\n                case 34:// PageDown\n                    multiplier = this.config.pageSteps;\n                case 40: // ArrowDown\n                case 37:// ArrowLeft\n                    sign = -1;\n                    step = stepSize[index][0];\n                    e.preventDefault();\n                    break;\n                case 33:// PageUp\n                    multiplier = this.config.pageSteps;\n                case 38: // ArrowUp\n                case 39:// ArrowRight\n                    step = stepSize[index][1];\n                    e.preventDefault();\n                    break;\n                default:\n                    break;\n            }\n            delta = sign * multiplier * step;\n            let /** @type {?} */ newValue;\n            if (Array.isArray(this.value)) {\n                newValue = [].concat(this.value);\n                newValue[index] = newValue[index] + delta;\n            }\n            else {\n                newValue = this.value + delta;\n            }\n            this.slider.set(newValue);\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        let /** @type {?} */ inputsConfig = JSON.parse(JSON.stringify({\n            behaviour: this.behaviour,\n            connect: this.connect,\n            limit: this.limit,\n            start: this.formControl !== undefined ? this.formControl.value : this.ngModel,\n            step: this.step,\n            pageSteps: this.pageSteps,\n            keyboard: this.keyboard,\n            onKeydown: this.onKeydown,\n            range: this.range || this.config.range || { min: this.min, max: this.max },\n            tooltips: this.tooltips,\n            snap: this.snap,\n            animate: this.animate,\n        }));\n        inputsConfig.tooltips = this.tooltips || this.config.tooltips;\n        inputsConfig.format = this.format || this.config.format || new DefaultFormatter();\n        this.ngZone.runOutsideAngular(() => {\n            this.slider = create(this.el.nativeElement.querySelector('div'), Object.assign(this.config, inputsConfig));\n        });\n        this.handles = [].slice.call(this.el.nativeElement.querySelectorAll('.noUi-handle'));\n        if (this.config.keyboard) {\n            if (this.config.pageSteps === undefined) {\n                this.config.pageSteps = 10;\n            }\n            for (const /** @type {?} */ handle of this.handles) {\n                handle.setAttribute('tabindex', 0);\n                const /** @type {?} */ onKeydown = this.config.onKeydown || this.defaultKeyHandler;\n                this.ngZone.runOutsideAngular(() => {\n                    this.cleanups.push(this.renderer.listen(handle, 'keydown', onKeydown), this.renderer.listen(handle, 'click', () => {\n                        handle.focus();\n                    }));\n                });\n            }\n        }\n        this.slider.on('set', (values, handle, unencoded) => {\n            this.eventHandler(this.set, values, handle, unencoded);\n        });\n        this.slider.on('update', (values, handle, unencoded) => {\n            if (this.update.observers.length > 0) {\n                this.ngZone.run(() => {\n                    this.update.emit(this.toValues(values));\n                });\n            }\n        });\n        this.slider.on('change', (values, handle, unencoded) => {\n            if (this.change.observers.length > 0) {\n                this.ngZone.run(() => {\n                    this.change.emit(this.toValues(values));\n                });\n            }\n        });\n        this.slider.on('slide', (values, handle, unencoded) => {\n            this.eventHandler(this.slide, values, handle, unencoded);\n        });\n        this.slider.on('start', (values, handle, unencoded) => {\n            if (this.start.observers.length > 0) {\n                this.ngZone.run(() => {\n                    this.start.emit(this.toValues(values));\n                });\n            }\n        });\n        this.slider.on('end', (values, handle, unencoded) => {\n            if (this.end.observers.length > 0) {\n                this.ngZone.run(() => {\n                    this.end.emit(this.toValues(values));\n                });\n            }\n        });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this.slider && (changes.min || changes.max || changes.step || changes.range)) {\n            this.ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.slider.updateOptions({\n                        range: Object.assign({}, {\n                            min: this.min,\n                            max: this.max\n                        }, this.range || {}),\n                        step: this.step\n                    });\n                });\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.slider.destroy();\n        while (this.cleanups.length) {\n            this.cleanups.pop()();\n        }\n    }\n    /**\n     * @param {?} values\n     * @return {?}\n     */\n    toValues(values) {\n        let /** @type {?} */ v = values.map(this.config.format.from);\n        return (v.length == 1 ? v[0] : v);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.slider) {\n            this.ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.slider.set(value);\n                });\n            });\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        isDisabled\n            ? this.renderer.setAttribute(this.el.nativeElement.childNodes[0], 'disabled', 'true')\n            : this.renderer.removeAttribute(this.el.nativeElement.childNodes[0], 'disabled');\n    }\n}\nNouisliderComponent.ɵfac = function NouisliderComponent_Factory(t) { return new (t || NouisliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNouisliderComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NouisliderComponent, selectors: [[\"nouislider\"]], hostVars: 2, hostBindings: function NouisliderComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng2-nouislider\", true);\n    } }, inputs: { config: \"config\", disabled: \"disabled\", behaviour: \"behaviour\", connect: \"connect\", limit: \"limit\", min: \"min\", max: \"max\", snap: \"snap\", animate: \"animate\", range: \"range\", step: \"step\", format: \"format\", pageSteps: \"pageSteps\", ngModel: \"ngModel\", keyboard: \"keyboard\", onKeydown: \"onKeydown\", formControl: \"formControl\", tooltips: \"tooltips\" }, outputs: { change: \"change\", update: \"update\", slide: \"slide\", set: \"set\", start: \"start\", end: \"end\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NouisliderComponent),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, template: function NouisliderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled ? true : undefined);\n    } }, styles: [\"[_nghost-%COMP%] {\\n      display: block;\\n      margin-top: 1rem;\\n      margin-bottom: 1rem;\\n    }\"] });\n/**\n * @nocollapse\n */\nNouisliderComponent.ctorParameters = () => [\n    { type: NgZone, },\n    { type: ElementRef, },\n    { type: Renderer2, },\n];\nNouisliderComponent.propDecorators = {\n    'disabled': [{ type: Input },],\n    'behaviour': [{ type: Input },],\n    'connect': [{ type: Input },],\n    'limit': [{ type: Input },],\n    'min': [{ type: Input },],\n    'max': [{ type: Input },],\n    'snap': [{ type: Input },],\n    'animate': [{ type: Input },],\n    'range': [{ type: Input },],\n    'step': [{ type: Input },],\n    'format': [{ type: Input },],\n    'pageSteps': [{ type: Input },],\n    'config': [{ type: Input },],\n    'ngModel': [{ type: Input },],\n    'keyboard': [{ type: Input },],\n    'onKeydown': [{ type: Input },],\n    'formControl': [{ type: Input },],\n    'tooltips': [{ type: Input },],\n    'change': [{ type: Output },],\n    'update': [{ type: Output },],\n    'slide': [{ type: Output },],\n    'set': [{ type: Output },],\n    'start': [{ type: Output },],\n    'end': [{ type: Output },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NouisliderComponent, [{\n        type: Component,\n        args: [{ selector: 'nouislider', host: {\n                    '[class.ng2-nouislider]': 'true'\n                }, template: '<div [attr.disabled]=\"disabled ? true : undefined\"></div>', providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NouisliderComponent),\n                        multi: true\n                    }\n                ], styles: [\"\\n    :host {\\n      display: block;\\n      margin-top: 1rem;\\n      margin-bottom: 1rem;\\n    }\\n  \"] }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { config: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], update: [{\n            type: Output\n        }], slide: [{\n            type: Output\n        }], set: [{\n            type: Output\n        }], start: [{\n            type: Output\n        }], end: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], behaviour: [{\n            type: Input\n        }], connect: [{\n            type: Input\n        }], limit: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], snap: [{\n            type: Input\n        }], animate: [{\n            type: Input\n        }], range: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], pageSteps: [{\n            type: Input\n        }], ngModel: [{\n            type: Input\n        }], keyboard: [{\n            type: Input\n        }], onKeydown: [{\n            type: Input\n        }], formControl: [{\n            type: Input\n        }], tooltips: [{\n            type: Input\n        }] }); })();\n\nclass NouisliderModule {\n}\nNouisliderModule.ɵfac = function NouisliderModule_Factory(t) { return new (t || NouisliderModule)(); };\nNouisliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NouisliderModule });\nNouisliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nNouisliderModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NouisliderModule, [{\n        type: NgModule,\n        args: [{\n                exports: [NouisliderComponent],\n                declarations: [NouisliderComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NouisliderModule, { declarations: [NouisliderComponent], exports: [NouisliderComponent] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultFormatter, NouisliderComponent, NouisliderModule };\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.noUiSlider = {}));\n})(this, (function (exports) { 'use strict';\n\n    exports.PipsMode = void 0;\n    (function (PipsMode) {\n        PipsMode[\"Range\"] = \"range\";\n        PipsMode[\"Steps\"] = \"steps\";\n        PipsMode[\"Positions\"] = \"positions\";\n        PipsMode[\"Count\"] = \"count\";\n        PipsMode[\"Values\"] = \"values\";\n    })(exports.PipsMode || (exports.PipsMode = {}));\n    exports.PipsType = void 0;\n    (function (PipsType) {\n        PipsType[PipsType[\"None\"] = -1] = \"None\";\n        PipsType[PipsType[\"NoValue\"] = 0] = \"NoValue\";\n        PipsType[PipsType[\"LargeValue\"] = 1] = \"LargeValue\";\n        PipsType[PipsType[\"SmallValue\"] = 2] = \"SmallValue\";\n    })(exports.PipsType || (exports.PipsType = {}));\n    //region Helper Methods\n    function isValidFormatter(entry) {\n        return isValidPartialFormatter(entry) && typeof entry.from === \"function\";\n    }\n    function isValidPartialFormatter(entry) {\n        // partial formatters only need a to function and not a from function\n        return typeof entry === \"object\" && typeof entry.to === \"function\";\n    }\n    function removeElement(el) {\n        el.parentElement.removeChild(el);\n    }\n    function isSet(value) {\n        return value !== null && value !== undefined;\n    }\n    // Bindable version\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    // Removes duplicates from an array.\n    function unique(array) {\n        return array.filter(function (a) {\n            return !this[a] ? (this[a] = true) : false;\n        }, {});\n    }\n    // Round a value to the closest 'to'.\n    function closest(value, to) {\n        return Math.round(value / to) * to;\n    }\n    // Current position of an element relative to the document.\n    function offset(elem, orientation) {\n        var rect = elem.getBoundingClientRect();\n        var doc = elem.ownerDocument;\n        var docElem = doc.documentElement;\n        var pageOffset = getPageOffset(doc);\n        // getBoundingClientRect contains left scroll in Chrome on Android.\n        // I haven't found a feature detection that proves this. Worst case\n        // scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\n        if (/webkit.*Chrome.*Mobile/i.test(navigator.userAgent)) {\n            pageOffset.x = 0;\n        }\n        return orientation ? rect.top + pageOffset.y - docElem.clientTop : rect.left + pageOffset.x - docElem.clientLeft;\n    }\n    // Checks whether a value is numerical.\n    function isNumeric(a) {\n        return typeof a === \"number\" && !isNaN(a) && isFinite(a);\n    }\n    // Sets a class and removes it after [duration] ms.\n    function addClassFor(element, className, duration) {\n        if (duration > 0) {\n            addClass(element, className);\n            setTimeout(function () {\n                removeClass(element, className);\n            }, duration);\n        }\n    }\n    // Limits a value to 0 - 100\n    function limit(a) {\n        return Math.max(Math.min(a, 100), 0);\n    }\n    // Wraps a variable as an array, if it isn't one yet.\n    // Note that an input array is returned by reference!\n    function asArray(a) {\n        return Array.isArray(a) ? a : [a];\n    }\n    // Counts decimals\n    function countDecimals(numStr) {\n        numStr = String(numStr);\n        var pieces = numStr.split(\".\");\n        return pieces.length > 1 ? pieces[1].length : 0;\n    }\n    // http://youmightnotneedjquery.com/#add_class\n    function addClass(el, className) {\n        if (el.classList && !/\\s/.test(className)) {\n            el.classList.add(className);\n        }\n        else {\n            el.className += \" \" + className;\n        }\n    }\n    // http://youmightnotneedjquery.com/#remove_class\n    function removeClass(el, className) {\n        if (el.classList && !/\\s/.test(className)) {\n            el.classList.remove(className);\n        }\n        else {\n            el.className = el.className.replace(new RegExp(\"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\", \"gi\"), \" \");\n        }\n    }\n    // https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\n    function hasClass(el, className) {\n        return el.classList ? el.classList.contains(className) : new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\n    function getPageOffset(doc) {\n        var supportPageOffset = window.pageXOffset !== undefined;\n        var isCSS1Compat = (doc.compatMode || \"\") === \"CSS1Compat\";\n        var x = supportPageOffset\n            ? window.pageXOffset\n            : isCSS1Compat\n                ? doc.documentElement.scrollLeft\n                : doc.body.scrollLeft;\n        var y = supportPageOffset\n            ? window.pageYOffset\n            : isCSS1Compat\n                ? doc.documentElement.scrollTop\n                : doc.body.scrollTop;\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    // we provide a function to compute constants instead\n    // of accessing window.* as soon as the module needs it\n    // so that we do not compute anything if not needed\n    function getActions() {\n        // Determine the events to bind. IE11 implements pointerEvents without\n        // a prefix, which breaks compatibility with the IE10 implementation.\n        return window.navigator.pointerEnabled\n            ? {\n                start: \"pointerdown\",\n                move: \"pointermove\",\n                end: \"pointerup\",\n            }\n            : window.navigator.msPointerEnabled\n                ? {\n                    start: \"MSPointerDown\",\n                    move: \"MSPointerMove\",\n                    end: \"MSPointerUp\",\n                }\n                : {\n                    start: \"mousedown touchstart\",\n                    move: \"mousemove touchmove\",\n                    end: \"mouseup touchend\",\n                };\n    }\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // Issue #785\n    function getSupportsPassive() {\n        var supportsPassive = false;\n        /* eslint-disable */\n        try {\n            var opts = Object.defineProperty({}, \"passive\", {\n                get: function () {\n                    supportsPassive = true;\n                },\n            });\n            // @ts-ignore\n            window.addEventListener(\"test\", null, opts);\n        }\n        catch (e) { }\n        /* eslint-enable */\n        return supportsPassive;\n    }\n    function getSupportsTouchActionNone() {\n        return window.CSS && CSS.supports && CSS.supports(\"touch-action\", \"none\");\n    }\n    //endregion\n    //region Range Calculation\n    // Determine the size of a sub-range in relation to a full range.\n    function subRangeRatio(pa, pb) {\n        return 100 / (pb - pa);\n    }\n    // (percentage) How many percent is this value of this range?\n    function fromPercentage(range, value, startRange) {\n        return (value * 100) / (range[startRange + 1] - range[startRange]);\n    }\n    // (percentage) Where is this value on this range?\n    function toPercentage(range, value) {\n        return fromPercentage(range, range[0] < 0 ? value + Math.abs(range[0]) : value - range[0], 0);\n    }\n    // (value) How much is this percentage on this range?\n    function isPercentage(range, value) {\n        return (value * (range[1] - range[0])) / 100 + range[0];\n    }\n    function getJ(value, arr) {\n        var j = 1;\n        while (value >= arr[j]) {\n            j += 1;\n        }\n        return j;\n    }\n    // (percentage) Input a value, find where, on a scale of 0-100, it applies.\n    function toStepping(xVal, xPct, value) {\n        if (value >= xVal.slice(-1)[0]) {\n            return 100;\n        }\n        var j = getJ(value, xVal);\n        var va = xVal[j - 1];\n        var vb = xVal[j];\n        var pa = xPct[j - 1];\n        var pb = xPct[j];\n        return pa + toPercentage([va, vb], value) / subRangeRatio(pa, pb);\n    }\n    // (value) Input a percentage, find where it is on the specified range.\n    function fromStepping(xVal, xPct, value) {\n        // There is no range group that fits 100\n        if (value >= 100) {\n            return xVal.slice(-1)[0];\n        }\n        var j = getJ(value, xPct);\n        var va = xVal[j - 1];\n        var vb = xVal[j];\n        var pa = xPct[j - 1];\n        var pb = xPct[j];\n        return isPercentage([va, vb], (value - pa) * subRangeRatio(pa, pb));\n    }\n    // (percentage) Get the step that applies at a certain value.\n    function getStep(xPct, xSteps, snap, value) {\n        if (value === 100) {\n            return value;\n        }\n        var j = getJ(value, xPct);\n        var a = xPct[j - 1];\n        var b = xPct[j];\n        // If 'snap' is set, steps are used as fixed points on the slider.\n        if (snap) {\n            // Find the closest position, a or b.\n            if (value - a > (b - a) / 2) {\n                return b;\n            }\n            return a;\n        }\n        if (!xSteps[j - 1]) {\n            return value;\n        }\n        return xPct[j - 1] + closest(value - xPct[j - 1], xSteps[j - 1]);\n    }\n    //endregion\n    //region Spectrum\n    var Spectrum = /** @class */ (function () {\n        function Spectrum(entry, snap, singleStep) {\n            this.xPct = [];\n            this.xVal = [];\n            this.xSteps = [];\n            this.xNumSteps = [];\n            this.xHighestCompleteStep = [];\n            this.xSteps = [singleStep || false];\n            this.xNumSteps = [false];\n            this.snap = snap;\n            var index;\n            var ordered = [];\n            // Map the object keys to an array.\n            Object.keys(entry).forEach(function (index) {\n                ordered.push([asArray(entry[index]), index]);\n            });\n            // Sort all entries by value (numeric sort).\n            ordered.sort(function (a, b) {\n                return a[0][0] - b[0][0];\n            });\n            // Convert all entries to subranges.\n            for (index = 0; index < ordered.length; index++) {\n                this.handleEntryPoint(ordered[index][1], ordered[index][0]);\n            }\n            // Store the actual step values.\n            // xSteps is sorted in the same order as xPct and xVal.\n            this.xNumSteps = this.xSteps.slice(0);\n            // Convert all numeric steps to the percentage of the subrange they represent.\n            for (index = 0; index < this.xNumSteps.length; index++) {\n                this.handleStepPoint(index, this.xNumSteps[index]);\n            }\n        }\n        Spectrum.prototype.getDistance = function (value) {\n            var distances = [];\n            for (var index = 0; index < this.xNumSteps.length - 1; index++) {\n                distances[index] = fromPercentage(this.xVal, value, index);\n            }\n            return distances;\n        };\n        // Calculate the percentual distance over the whole scale of ranges.\n        // direction: 0 = backwards / 1 = forwards\n        Spectrum.prototype.getAbsoluteDistance = function (value, distances, direction) {\n            var xPct_index = 0;\n            // Calculate range where to start calculation\n            if (value < this.xPct[this.xPct.length - 1]) {\n                while (value > this.xPct[xPct_index + 1]) {\n                    xPct_index++;\n                }\n            }\n            else if (value === this.xPct[this.xPct.length - 1]) {\n                xPct_index = this.xPct.length - 2;\n            }\n            // If looking backwards and the value is exactly at a range separator then look one range further\n            if (!direction && value === this.xPct[xPct_index + 1]) {\n                xPct_index++;\n            }\n            if (distances === null) {\n                distances = [];\n            }\n            var start_factor;\n            var rest_factor = 1;\n            var rest_rel_distance = distances[xPct_index];\n            var range_pct = 0;\n            var rel_range_distance = 0;\n            var abs_distance_counter = 0;\n            var range_counter = 0;\n            // Calculate what part of the start range the value is\n            if (direction) {\n                start_factor = (value - this.xPct[xPct_index]) / (this.xPct[xPct_index + 1] - this.xPct[xPct_index]);\n            }\n            else {\n                start_factor = (this.xPct[xPct_index + 1] - value) / (this.xPct[xPct_index + 1] - this.xPct[xPct_index]);\n            }\n            // Do until the complete distance across ranges is calculated\n            while (rest_rel_distance > 0) {\n                // Calculate the percentage of total range\n                range_pct = this.xPct[xPct_index + 1 + range_counter] - this.xPct[xPct_index + range_counter];\n                // Detect if the margin, padding or limit is larger then the current range and calculate\n                if (distances[xPct_index + range_counter] * rest_factor + 100 - start_factor * 100 > 100) {\n                    // If larger then take the percentual distance of the whole range\n                    rel_range_distance = range_pct * start_factor;\n                    // Rest factor of relative percentual distance still to be calculated\n                    rest_factor = (rest_rel_distance - 100 * start_factor) / distances[xPct_index + range_counter];\n                    // Set start factor to 1 as for next range it does not apply.\n                    start_factor = 1;\n                }\n                else {\n                    // If smaller or equal then take the percentual distance of the calculate percentual part of that range\n                    rel_range_distance = ((distances[xPct_index + range_counter] * range_pct) / 100) * rest_factor;\n                    // No rest left as the rest fits in current range\n                    rest_factor = 0;\n                }\n                if (direction) {\n                    abs_distance_counter = abs_distance_counter - rel_range_distance;\n                    // Limit range to first range when distance becomes outside of minimum range\n                    if (this.xPct.length + range_counter >= 1) {\n                        range_counter--;\n                    }\n                }\n                else {\n                    abs_distance_counter = abs_distance_counter + rel_range_distance;\n                    // Limit range to last range when distance becomes outside of maximum range\n                    if (this.xPct.length - range_counter >= 1) {\n                        range_counter++;\n                    }\n                }\n                // Rest of relative percentual distance still to be calculated\n                rest_rel_distance = distances[xPct_index + range_counter] * rest_factor;\n            }\n            return value + abs_distance_counter;\n        };\n        Spectrum.prototype.toStepping = function (value) {\n            value = toStepping(this.xVal, this.xPct, value);\n            return value;\n        };\n        Spectrum.prototype.fromStepping = function (value) {\n            return fromStepping(this.xVal, this.xPct, value);\n        };\n        Spectrum.prototype.getStep = function (value) {\n            value = getStep(this.xPct, this.xSteps, this.snap, value);\n            return value;\n        };\n        Spectrum.prototype.getDefaultStep = function (value, isDown, size) {\n            var j = getJ(value, this.xPct);\n            // When at the top or stepping down, look at the previous sub-range\n            if (value === 100 || (isDown && value === this.xPct[j - 1])) {\n                j = Math.max(j - 1, 1);\n            }\n            return (this.xVal[j] - this.xVal[j - 1]) / size;\n        };\n        Spectrum.prototype.getNearbySteps = function (value) {\n            var j = getJ(value, this.xPct);\n            return {\n                stepBefore: {\n                    startValue: this.xVal[j - 2],\n                    step: this.xNumSteps[j - 2],\n                    highestStep: this.xHighestCompleteStep[j - 2],\n                },\n                thisStep: {\n                    startValue: this.xVal[j - 1],\n                    step: this.xNumSteps[j - 1],\n                    highestStep: this.xHighestCompleteStep[j - 1],\n                },\n                stepAfter: {\n                    startValue: this.xVal[j],\n                    step: this.xNumSteps[j],\n                    highestStep: this.xHighestCompleteStep[j],\n                },\n            };\n        };\n        Spectrum.prototype.countStepDecimals = function () {\n            var stepDecimals = this.xNumSteps.map(countDecimals);\n            return Math.max.apply(null, stepDecimals);\n        };\n        Spectrum.prototype.hasNoSize = function () {\n            return this.xVal[0] === this.xVal[this.xVal.length - 1];\n        };\n        // Outside testing\n        Spectrum.prototype.convert = function (value) {\n            return this.getStep(this.toStepping(value));\n        };\n        Spectrum.prototype.handleEntryPoint = function (index, value) {\n            var percentage;\n            // Covert min/max syntax to 0 and 100.\n            if (index === \"min\") {\n                percentage = 0;\n            }\n            else if (index === \"max\") {\n                percentage = 100;\n            }\n            else {\n                percentage = parseFloat(index);\n            }\n            // Check for correct input.\n            if (!isNumeric(percentage) || !isNumeric(value[0])) {\n                throw new Error(\"noUiSlider: 'range' value isn't numeric.\");\n            }\n            // Store values.\n            this.xPct.push(percentage);\n            this.xVal.push(value[0]);\n            var value1 = Number(value[1]);\n            // NaN will evaluate to false too, but to keep\n            // logging clear, set step explicitly. Make sure\n            // not to override the 'step' setting with false.\n            if (!percentage) {\n                if (!isNaN(value1)) {\n                    this.xSteps[0] = value1;\n                }\n            }\n            else {\n                this.xSteps.push(isNaN(value1) ? false : value1);\n            }\n            this.xHighestCompleteStep.push(0);\n        };\n        Spectrum.prototype.handleStepPoint = function (i, n) {\n            // Ignore 'false' stepping.\n            if (!n) {\n                return;\n            }\n            // Step over zero-length ranges (#948);\n            if (this.xVal[i] === this.xVal[i + 1]) {\n                this.xSteps[i] = this.xHighestCompleteStep[i] = this.xVal[i];\n                return;\n            }\n            // Factor to range ratio\n            this.xSteps[i] =\n                fromPercentage([this.xVal[i], this.xVal[i + 1]], n, 0) / subRangeRatio(this.xPct[i], this.xPct[i + 1]);\n            var totalSteps = (this.xVal[i + 1] - this.xVal[i]) / this.xNumSteps[i];\n            var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);\n            var step = this.xVal[i] + this.xNumSteps[i] * highestStep;\n            this.xHighestCompleteStep[i] = step;\n        };\n        return Spectrum;\n    }());\n    //endregion\n    //region Options\n    /*\tEvery input option is tested and parsed. This will prevent\n        endless validation in internal methods. These tests are\n        structured with an item for every option available. An\n        option can be marked as required by setting the 'r' flag.\n        The testing function is provided with three arguments:\n            - The provided value for the option;\n            - A reference to the options object;\n            - The name for the option;\n\n        The testing function returns false when an error is detected,\n        or true when everything is OK. It can also modify the option\n        object, to make sure all values can be correctly looped elsewhere. */\n    //region Defaults\n    var defaultFormatter = {\n        to: function (value) {\n            return value === undefined ? \"\" : value.toFixed(2);\n        },\n        from: Number,\n    };\n    var cssClasses = {\n        target: \"target\",\n        base: \"base\",\n        origin: \"origin\",\n        handle: \"handle\",\n        handleLower: \"handle-lower\",\n        handleUpper: \"handle-upper\",\n        touchArea: \"touch-area\",\n        horizontal: \"horizontal\",\n        vertical: \"vertical\",\n        background: \"background\",\n        connect: \"connect\",\n        connects: \"connects\",\n        ltr: \"ltr\",\n        rtl: \"rtl\",\n        textDirectionLtr: \"txt-dir-ltr\",\n        textDirectionRtl: \"txt-dir-rtl\",\n        draggable: \"draggable\",\n        drag: \"state-drag\",\n        tap: \"state-tap\",\n        active: \"active\",\n        tooltip: \"tooltip\",\n        pips: \"pips\",\n        pipsHorizontal: \"pips-horizontal\",\n        pipsVertical: \"pips-vertical\",\n        marker: \"marker\",\n        markerHorizontal: \"marker-horizontal\",\n        markerVertical: \"marker-vertical\",\n        markerNormal: \"marker-normal\",\n        markerLarge: \"marker-large\",\n        markerSub: \"marker-sub\",\n        value: \"value\",\n        valueHorizontal: \"value-horizontal\",\n        valueVertical: \"value-vertical\",\n        valueNormal: \"value-normal\",\n        valueLarge: \"value-large\",\n        valueSub: \"value-sub\",\n    };\n    // Namespaces of internal event listeners\n    var INTERNAL_EVENT_NS = {\n        tooltips: \".__tooltips\",\n        aria: \".__aria\",\n    };\n    //endregion\n    function testStep(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'step' is not numeric.\");\n        }\n        // The step option can still be used to set stepping\n        // for linear sliders. Overwritten if set in 'range'.\n        parsed.singleStep = entry;\n    }\n    function testKeyboardPageMultiplier(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'keyboardPageMultiplier' is not numeric.\");\n        }\n        parsed.keyboardPageMultiplier = entry;\n    }\n    function testKeyboardMultiplier(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'keyboardMultiplier' is not numeric.\");\n        }\n        parsed.keyboardMultiplier = entry;\n    }\n    function testKeyboardDefaultStep(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'keyboardDefaultStep' is not numeric.\");\n        }\n        parsed.keyboardDefaultStep = entry;\n    }\n    function testRange(parsed, entry) {\n        // Filter incorrect input.\n        if (typeof entry !== \"object\" || Array.isArray(entry)) {\n            throw new Error(\"noUiSlider: 'range' is not an object.\");\n        }\n        // Catch missing start or end.\n        if (entry.min === undefined || entry.max === undefined) {\n            throw new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\n        }\n        parsed.spectrum = new Spectrum(entry, parsed.snap || false, parsed.singleStep);\n    }\n    function testStart(parsed, entry) {\n        entry = asArray(entry);\n        // Validate input. Values aren't tested, as the public .val method\n        // will always provide a valid location.\n        if (!Array.isArray(entry) || !entry.length) {\n            throw new Error(\"noUiSlider: 'start' option is incorrect.\");\n        }\n        // Store the number of handles.\n        parsed.handles = entry.length;\n        // When the slider is initialized, the .val method will\n        // be called with the start options.\n        parsed.start = entry;\n    }\n    function testSnap(parsed, entry) {\n        if (typeof entry !== \"boolean\") {\n            throw new Error(\"noUiSlider: 'snap' option must be a boolean.\");\n        }\n        // Enforce 100% stepping within subranges.\n        parsed.snap = entry;\n    }\n    function testAnimate(parsed, entry) {\n        if (typeof entry !== \"boolean\") {\n            throw new Error(\"noUiSlider: 'animate' option must be a boolean.\");\n        }\n        // Enforce 100% stepping within subranges.\n        parsed.animate = entry;\n    }\n    function testAnimationDuration(parsed, entry) {\n        if (typeof entry !== \"number\") {\n            throw new Error(\"noUiSlider: 'animationDuration' option must be a number.\");\n        }\n        parsed.animationDuration = entry;\n    }\n    function testConnect(parsed, entry) {\n        var connect = [false];\n        var i;\n        // Map legacy options\n        if (entry === \"lower\") {\n            entry = [true, false];\n        }\n        else if (entry === \"upper\") {\n            entry = [false, true];\n        }\n        // Handle boolean options\n        if (entry === true || entry === false) {\n            for (i = 1; i < parsed.handles; i++) {\n                connect.push(entry);\n            }\n            connect.push(false);\n        }\n        // Reject invalid input\n        else if (!Array.isArray(entry) || !entry.length || entry.length !== parsed.handles + 1) {\n            throw new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\n        }\n        else {\n            connect = entry;\n        }\n        parsed.connect = connect;\n    }\n    function testOrientation(parsed, entry) {\n        // Set orientation to an a numerical value for easy\n        // array selection.\n        switch (entry) {\n            case \"horizontal\":\n                parsed.ort = 0;\n                break;\n            case \"vertical\":\n                parsed.ort = 1;\n                break;\n            default:\n                throw new Error(\"noUiSlider: 'orientation' option is invalid.\");\n        }\n    }\n    function testMargin(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'margin' option must be numeric.\");\n        }\n        // Issue #582\n        if (entry === 0) {\n            return;\n        }\n        parsed.margin = parsed.spectrum.getDistance(entry);\n    }\n    function testLimit(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'limit' option must be numeric.\");\n        }\n        parsed.limit = parsed.spectrum.getDistance(entry);\n        if (!parsed.limit || parsed.handles < 2) {\n            throw new Error(\"noUiSlider: 'limit' option is only supported on linear sliders with 2 or more handles.\");\n        }\n    }\n    function testPadding(parsed, entry) {\n        var index;\n        if (!isNumeric(entry) && !Array.isArray(entry)) {\n            throw new Error(\"noUiSlider: 'padding' option must be numeric or array of exactly 2 numbers.\");\n        }\n        if (Array.isArray(entry) && !(entry.length === 2 || isNumeric(entry[0]) || isNumeric(entry[1]))) {\n            throw new Error(\"noUiSlider: 'padding' option must be numeric or array of exactly 2 numbers.\");\n        }\n        if (entry === 0) {\n            return;\n        }\n        if (!Array.isArray(entry)) {\n            entry = [entry, entry];\n        }\n        // 'getDistance' returns false for invalid values.\n        parsed.padding = [parsed.spectrum.getDistance(entry[0]), parsed.spectrum.getDistance(entry[1])];\n        for (index = 0; index < parsed.spectrum.xNumSteps.length - 1; index++) {\n            // last \"range\" can't contain step size as it is purely an endpoint.\n            if (parsed.padding[0][index] < 0 || parsed.padding[1][index] < 0) {\n                throw new Error(\"noUiSlider: 'padding' option must be a positive number(s).\");\n            }\n        }\n        var totalPadding = entry[0] + entry[1];\n        var firstValue = parsed.spectrum.xVal[0];\n        var lastValue = parsed.spectrum.xVal[parsed.spectrum.xVal.length - 1];\n        if (totalPadding / (lastValue - firstValue) > 1) {\n            throw new Error(\"noUiSlider: 'padding' option must not exceed 100% of the range.\");\n        }\n    }\n    function testDirection(parsed, entry) {\n        // Set direction as a numerical value for easy parsing.\n        // Invert connection for RTL sliders, so that the proper\n        // handles get the connect/background classes.\n        switch (entry) {\n            case \"ltr\":\n                parsed.dir = 0;\n                break;\n            case \"rtl\":\n                parsed.dir = 1;\n                break;\n            default:\n                throw new Error(\"noUiSlider: 'direction' option was not recognized.\");\n        }\n    }\n    function testBehaviour(parsed, entry) {\n        // Make sure the input is a string.\n        if (typeof entry !== \"string\") {\n            throw new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\n        }\n        // Check if the string contains any keywords.\n        // None are required.\n        var tap = entry.indexOf(\"tap\") >= 0;\n        var drag = entry.indexOf(\"drag\") >= 0;\n        var fixed = entry.indexOf(\"fixed\") >= 0;\n        var snap = entry.indexOf(\"snap\") >= 0;\n        var hover = entry.indexOf(\"hover\") >= 0;\n        var unconstrained = entry.indexOf(\"unconstrained\") >= 0;\n        var dragAll = entry.indexOf(\"drag-all\") >= 0;\n        if (fixed) {\n            if (parsed.handles !== 2) {\n                throw new Error(\"noUiSlider: 'fixed' behaviour must be used with 2 handles\");\n            }\n            // Use margin to enforce fixed state\n            testMargin(parsed, parsed.start[1] - parsed.start[0]);\n        }\n        if (unconstrained && (parsed.margin || parsed.limit)) {\n            throw new Error(\"noUiSlider: 'unconstrained' behaviour cannot be used with margin or limit\");\n        }\n        parsed.events = {\n            tap: tap || snap,\n            drag: drag,\n            dragAll: dragAll,\n            fixed: fixed,\n            snap: snap,\n            hover: hover,\n            unconstrained: unconstrained,\n        };\n    }\n    function testTooltips(parsed, entry) {\n        if (entry === false) {\n            return;\n        }\n        if (entry === true || isValidPartialFormatter(entry)) {\n            parsed.tooltips = [];\n            for (var i = 0; i < parsed.handles; i++) {\n                parsed.tooltips.push(entry);\n            }\n        }\n        else {\n            entry = asArray(entry);\n            if (entry.length !== parsed.handles) {\n                throw new Error(\"noUiSlider: must pass a formatter for all handles.\");\n            }\n            entry.forEach(function (formatter) {\n                if (typeof formatter !== \"boolean\" && !isValidPartialFormatter(formatter)) {\n                    throw new Error(\"noUiSlider: 'tooltips' must be passed a formatter or 'false'.\");\n                }\n            });\n            parsed.tooltips = entry;\n        }\n    }\n    function testHandleAttributes(parsed, entry) {\n        if (entry.length !== parsed.handles) {\n            throw new Error(\"noUiSlider: must pass a attributes for all handles.\");\n        }\n        parsed.handleAttributes = entry;\n    }\n    function testAriaFormat(parsed, entry) {\n        if (!isValidPartialFormatter(entry)) {\n            throw new Error(\"noUiSlider: 'ariaFormat' requires 'to' method.\");\n        }\n        parsed.ariaFormat = entry;\n    }\n    function testFormat(parsed, entry) {\n        if (!isValidFormatter(entry)) {\n            throw new Error(\"noUiSlider: 'format' requires 'to' and 'from' methods.\");\n        }\n        parsed.format = entry;\n    }\n    function testKeyboardSupport(parsed, entry) {\n        if (typeof entry !== \"boolean\") {\n            throw new Error(\"noUiSlider: 'keyboardSupport' option must be a boolean.\");\n        }\n        parsed.keyboardSupport = entry;\n    }\n    function testDocumentElement(parsed, entry) {\n        // This is an advanced option. Passed values are used without validation.\n        parsed.documentElement = entry;\n    }\n    function testCssPrefix(parsed, entry) {\n        if (typeof entry !== \"string\" && entry !== false) {\n            throw new Error(\"noUiSlider: 'cssPrefix' must be a string or `false`.\");\n        }\n        parsed.cssPrefix = entry;\n    }\n    function testCssClasses(parsed, entry) {\n        if (typeof entry !== \"object\") {\n            throw new Error(\"noUiSlider: 'cssClasses' must be an object.\");\n        }\n        if (typeof parsed.cssPrefix === \"string\") {\n            parsed.cssClasses = {};\n            Object.keys(entry).forEach(function (key) {\n                parsed.cssClasses[key] = parsed.cssPrefix + entry[key];\n            });\n        }\n        else {\n            parsed.cssClasses = entry;\n        }\n    }\n    // Test all developer settings and parse to assumption-safe values.\n    function testOptions(options) {\n        // To prove a fix for #537, freeze options here.\n        // If the object is modified, an error will be thrown.\n        // Object.freeze(options);\n        var parsed = {\n            margin: null,\n            limit: null,\n            padding: null,\n            animate: true,\n            animationDuration: 300,\n            ariaFormat: defaultFormatter,\n            format: defaultFormatter,\n        };\n        // Tests are executed in the order they are presented here.\n        var tests = {\n            step: { r: false, t: testStep },\n            keyboardPageMultiplier: { r: false, t: testKeyboardPageMultiplier },\n            keyboardMultiplier: { r: false, t: testKeyboardMultiplier },\n            keyboardDefaultStep: { r: false, t: testKeyboardDefaultStep },\n            start: { r: true, t: testStart },\n            connect: { r: true, t: testConnect },\n            direction: { r: true, t: testDirection },\n            snap: { r: false, t: testSnap },\n            animate: { r: false, t: testAnimate },\n            animationDuration: { r: false, t: testAnimationDuration },\n            range: { r: true, t: testRange },\n            orientation: { r: false, t: testOrientation },\n            margin: { r: false, t: testMargin },\n            limit: { r: false, t: testLimit },\n            padding: { r: false, t: testPadding },\n            behaviour: { r: true, t: testBehaviour },\n            ariaFormat: { r: false, t: testAriaFormat },\n            format: { r: false, t: testFormat },\n            tooltips: { r: false, t: testTooltips },\n            keyboardSupport: { r: true, t: testKeyboardSupport },\n            documentElement: { r: false, t: testDocumentElement },\n            cssPrefix: { r: true, t: testCssPrefix },\n            cssClasses: { r: true, t: testCssClasses },\n            handleAttributes: { r: false, t: testHandleAttributes },\n        };\n        var defaults = {\n            connect: false,\n            direction: \"ltr\",\n            behaviour: \"tap\",\n            orientation: \"horizontal\",\n            keyboardSupport: true,\n            cssPrefix: \"noUi-\",\n            cssClasses: cssClasses,\n            keyboardPageMultiplier: 5,\n            keyboardMultiplier: 1,\n            keyboardDefaultStep: 10,\n        };\n        // AriaFormat defaults to regular format, if any.\n        if (options.format && !options.ariaFormat) {\n            options.ariaFormat = options.format;\n        }\n        // Run all options through a testing mechanism to ensure correct\n        // input. It should be noted that options might get modified to\n        // be handled properly. E.g. wrapping integers in arrays.\n        Object.keys(tests).forEach(function (name) {\n            // If the option isn't set, but it is required, throw an error.\n            if (!isSet(options[name]) && defaults[name] === undefined) {\n                if (tests[name].r) {\n                    throw new Error(\"noUiSlider: '\" + name + \"' is required.\");\n                }\n                return;\n            }\n            tests[name].t(parsed, !isSet(options[name]) ? defaults[name] : options[name]);\n        });\n        // Forward pips options\n        parsed.pips = options.pips;\n        // All recent browsers accept unprefixed transform.\n        // We need -ms- for IE9 and -webkit- for older Android;\n        // Assume use of -webkit- if unprefixed and -ms- are not supported.\n        // https://caniuse.com/#feat=transforms2d\n        var d = document.createElement(\"div\");\n        var msPrefix = d.style.msTransform !== undefined;\n        var noPrefix = d.style.transform !== undefined;\n        parsed.transformRule = noPrefix ? \"transform\" : msPrefix ? \"msTransform\" : \"webkitTransform\";\n        // Pips don't move, so we can place them using left/top.\n        var styles = [\n            [\"left\", \"top\"],\n            [\"right\", \"bottom\"],\n        ];\n        parsed.style = styles[parsed.dir][parsed.ort];\n        return parsed;\n    }\n    //endregion\n    function scope(target, options, originalOptions) {\n        var actions = getActions();\n        var supportsTouchActionNone = getSupportsTouchActionNone();\n        var supportsPassive = supportsTouchActionNone && getSupportsPassive();\n        // All variables local to 'scope' are prefixed with 'scope_'\n        // Slider DOM Nodes\n        var scope_Target = target;\n        var scope_Base;\n        var scope_Handles;\n        var scope_Connects;\n        var scope_Pips;\n        var scope_Tooltips;\n        // Slider state values\n        var scope_Spectrum = options.spectrum;\n        var scope_Values = [];\n        var scope_Locations = [];\n        var scope_HandleNumbers = [];\n        var scope_ActiveHandlesCount = 0;\n        var scope_Events = {};\n        // Document Nodes\n        var scope_Document = target.ownerDocument;\n        var scope_DocumentElement = options.documentElement || scope_Document.documentElement;\n        var scope_Body = scope_Document.body;\n        // For horizontal sliders in standard ltr documents,\n        // make .noUi-origin overflow to the left so the document doesn't scroll.\n        var scope_DirOffset = scope_Document.dir === \"rtl\" || options.ort === 1 ? 0 : 100;\n        // Creates a node, adds it to target, returns the new node.\n        function addNodeTo(addTarget, className) {\n            var div = scope_Document.createElement(\"div\");\n            if (className) {\n                addClass(div, className);\n            }\n            addTarget.appendChild(div);\n            return div;\n        }\n        // Append a origin to the base\n        function addOrigin(base, handleNumber) {\n            var origin = addNodeTo(base, options.cssClasses.origin);\n            var handle = addNodeTo(origin, options.cssClasses.handle);\n            addNodeTo(handle, options.cssClasses.touchArea);\n            handle.setAttribute(\"data-handle\", String(handleNumber));\n            if (options.keyboardSupport) {\n                // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\n                // 0 = focusable and reachable\n                handle.setAttribute(\"tabindex\", \"0\");\n                handle.addEventListener(\"keydown\", function (event) {\n                    return eventKeydown(event, handleNumber);\n                });\n            }\n            if (options.handleAttributes !== undefined) {\n                var attributes_1 = options.handleAttributes[handleNumber];\n                Object.keys(attributes_1).forEach(function (attribute) {\n                    handle.setAttribute(attribute, attributes_1[attribute]);\n                });\n            }\n            handle.setAttribute(\"role\", \"slider\");\n            handle.setAttribute(\"aria-orientation\", options.ort ? \"vertical\" : \"horizontal\");\n            if (handleNumber === 0) {\n                addClass(handle, options.cssClasses.handleLower);\n            }\n            else if (handleNumber === options.handles - 1) {\n                addClass(handle, options.cssClasses.handleUpper);\n            }\n            return origin;\n        }\n        // Insert nodes for connect elements\n        function addConnect(base, add) {\n            if (!add) {\n                return false;\n            }\n            return addNodeTo(base, options.cssClasses.connect);\n        }\n        // Add handles to the slider base.\n        function addElements(connectOptions, base) {\n            var connectBase = addNodeTo(base, options.cssClasses.connects);\n            scope_Handles = [];\n            scope_Connects = [];\n            scope_Connects.push(addConnect(connectBase, connectOptions[0]));\n            // [::::O====O====O====]\n            // connectOptions = [0, 1, 1, 1]\n            for (var i = 0; i < options.handles; i++) {\n                // Keep a list of all added handles.\n                scope_Handles.push(addOrigin(base, i));\n                scope_HandleNumbers[i] = i;\n                scope_Connects.push(addConnect(connectBase, connectOptions[i + 1]));\n            }\n        }\n        // Initialize a single slider.\n        function addSlider(addTarget) {\n            // Apply classes and data to the target.\n            addClass(addTarget, options.cssClasses.target);\n            if (options.dir === 0) {\n                addClass(addTarget, options.cssClasses.ltr);\n            }\n            else {\n                addClass(addTarget, options.cssClasses.rtl);\n            }\n            if (options.ort === 0) {\n                addClass(addTarget, options.cssClasses.horizontal);\n            }\n            else {\n                addClass(addTarget, options.cssClasses.vertical);\n            }\n            var textDirection = getComputedStyle(addTarget).direction;\n            if (textDirection === \"rtl\") {\n                addClass(addTarget, options.cssClasses.textDirectionRtl);\n            }\n            else {\n                addClass(addTarget, options.cssClasses.textDirectionLtr);\n            }\n            return addNodeTo(addTarget, options.cssClasses.base);\n        }\n        function addTooltip(handle, handleNumber) {\n            if (!options.tooltips || !options.tooltips[handleNumber]) {\n                return false;\n            }\n            return addNodeTo(handle.firstChild, options.cssClasses.tooltip);\n        }\n        function isSliderDisabled() {\n            return scope_Target.hasAttribute(\"disabled\");\n        }\n        // Disable the slider dragging if any handle is disabled\n        function isHandleDisabled(handleNumber) {\n            var handleOrigin = scope_Handles[handleNumber];\n            return handleOrigin.hasAttribute(\"disabled\");\n        }\n        function removeTooltips() {\n            if (scope_Tooltips) {\n                removeEvent(\"update\" + INTERNAL_EVENT_NS.tooltips);\n                scope_Tooltips.forEach(function (tooltip) {\n                    if (tooltip) {\n                        removeElement(tooltip);\n                    }\n                });\n                scope_Tooltips = null;\n            }\n        }\n        // The tooltips option is a shorthand for using the 'update' event.\n        function tooltips() {\n            removeTooltips();\n            // Tooltips are added with options.tooltips in original order.\n            scope_Tooltips = scope_Handles.map(addTooltip);\n            bindEvent(\"update\" + INTERNAL_EVENT_NS.tooltips, function (values, handleNumber, unencoded) {\n                if (!scope_Tooltips || !options.tooltips) {\n                    return;\n                }\n                if (scope_Tooltips[handleNumber] === false) {\n                    return;\n                }\n                var formattedValue = values[handleNumber];\n                if (options.tooltips[handleNumber] !== true) {\n                    formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);\n                }\n                scope_Tooltips[handleNumber].innerHTML = formattedValue;\n            });\n        }\n        function aria() {\n            removeEvent(\"update\" + INTERNAL_EVENT_NS.aria);\n            bindEvent(\"update\" + INTERNAL_EVENT_NS.aria, function (values, handleNumber, unencoded, tap, positions) {\n                // Update Aria Values for all handles, as a change in one changes min and max values for the next.\n                scope_HandleNumbers.forEach(function (index) {\n                    var handle = scope_Handles[index];\n                    var min = checkHandlePosition(scope_Locations, index, 0, true, true, true);\n                    var max = checkHandlePosition(scope_Locations, index, 100, true, true, true);\n                    var now = positions[index];\n                    // Formatted value for display\n                    var text = String(options.ariaFormat.to(unencoded[index]));\n                    // Map to slider range values\n                    min = scope_Spectrum.fromStepping(min).toFixed(1);\n                    max = scope_Spectrum.fromStepping(max).toFixed(1);\n                    now = scope_Spectrum.fromStepping(now).toFixed(1);\n                    handle.children[0].setAttribute(\"aria-valuemin\", min);\n                    handle.children[0].setAttribute(\"aria-valuemax\", max);\n                    handle.children[0].setAttribute(\"aria-valuenow\", now);\n                    handle.children[0].setAttribute(\"aria-valuetext\", text);\n                });\n            });\n        }\n        function getGroup(pips) {\n            // Use the range.\n            if (pips.mode === exports.PipsMode.Range || pips.mode === exports.PipsMode.Steps) {\n                return scope_Spectrum.xVal;\n            }\n            if (pips.mode === exports.PipsMode.Count) {\n                if (pips.values < 2) {\n                    throw new Error(\"noUiSlider: 'values' (>= 2) required for mode 'count'.\");\n                }\n                // Divide 0 - 100 in 'count' parts.\n                var interval = pips.values - 1;\n                var spread = 100 / interval;\n                var values = [];\n                // List these parts and have them handled as 'positions'.\n                while (interval--) {\n                    values[interval] = interval * spread;\n                }\n                values.push(100);\n                return mapToRange(values, pips.stepped);\n            }\n            if (pips.mode === exports.PipsMode.Positions) {\n                // Map all percentages to on-range values.\n                return mapToRange(pips.values, pips.stepped);\n            }\n            if (pips.mode === exports.PipsMode.Values) {\n                // If the value must be stepped, it needs to be converted to a percentage first.\n                if (pips.stepped) {\n                    return pips.values.map(function (value) {\n                        // Convert to percentage, apply step, return to value.\n                        return scope_Spectrum.fromStepping(scope_Spectrum.getStep(scope_Spectrum.toStepping(value)));\n                    });\n                }\n                // Otherwise, we can simply use the values.\n                return pips.values;\n            }\n            return []; // pips.mode = never\n        }\n        function mapToRange(values, stepped) {\n            return values.map(function (value) {\n                return scope_Spectrum.fromStepping(stepped ? scope_Spectrum.getStep(value) : value);\n            });\n        }\n        function generateSpread(pips) {\n            function safeIncrement(value, increment) {\n                // Avoid floating point variance by dropping the smallest decimal places.\n                return Number((value + increment).toFixed(7));\n            }\n            var group = getGroup(pips);\n            var indexes = {};\n            var firstInRange = scope_Spectrum.xVal[0];\n            var lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length - 1];\n            var ignoreFirst = false;\n            var ignoreLast = false;\n            var prevPct = 0;\n            // Create a copy of the group, sort it and filter away all duplicates.\n            group = unique(group.slice().sort(function (a, b) {\n                return a - b;\n            }));\n            // Make sure the range starts with the first element.\n            if (group[0] !== firstInRange) {\n                group.unshift(firstInRange);\n                ignoreFirst = true;\n            }\n            // Likewise for the last one.\n            if (group[group.length - 1] !== lastInRange) {\n                group.push(lastInRange);\n                ignoreLast = true;\n            }\n            group.forEach(function (current, index) {\n                // Get the current step and the lower + upper positions.\n                var step;\n                var i;\n                var q;\n                var low = current;\n                var high = group[index + 1];\n                var newPct;\n                var pctDifference;\n                var pctPos;\n                var type;\n                var steps;\n                var realSteps;\n                var stepSize;\n                var isSteps = pips.mode === exports.PipsMode.Steps;\n                // When using 'steps' mode, use the provided steps.\n                // Otherwise, we'll step on to the next subrange.\n                if (isSteps) {\n                    step = scope_Spectrum.xNumSteps[index];\n                }\n                // Default to a 'full' step.\n                if (!step) {\n                    step = high - low;\n                }\n                // If high is undefined we are at the last subrange. Make sure it iterates once (#1088)\n                if (high === undefined) {\n                    high = low;\n                }\n                // Make sure step isn't 0, which would cause an infinite loop (#654)\n                step = Math.max(step, 0.0000001);\n                // Find all steps in the subrange.\n                for (i = low; i <= high; i = safeIncrement(i, step)) {\n                    // Get the percentage value for the current step,\n                    // calculate the size for the subrange.\n                    newPct = scope_Spectrum.toStepping(i);\n                    pctDifference = newPct - prevPct;\n                    steps = pctDifference / (pips.density || 1);\n                    realSteps = Math.round(steps);\n                    // This ratio represents the amount of percentage-space a point indicates.\n                    // For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-divided.\n                    // Round the percentage offset to an even number, then divide by two\n                    // to spread the offset on both sides of the range.\n                    stepSize = pctDifference / realSteps;\n                    // Divide all points evenly, adding the correct number to this subrange.\n                    // Run up to <= so that 100% gets a point, event if ignoreLast is set.\n                    for (q = 1; q <= realSteps; q += 1) {\n                        // The ratio between the rounded value and the actual size might be ~1% off.\n                        // Correct the percentage offset by the number of points\n                        // per subrange. density = 1 will result in 100 points on the\n                        // full range, 2 for 50, 4 for 25, etc.\n                        pctPos = prevPct + q * stepSize;\n                        indexes[pctPos.toFixed(5)] = [scope_Spectrum.fromStepping(pctPos), 0];\n                    }\n                    // Determine the point type.\n                    type = group.indexOf(i) > -1 ? exports.PipsType.LargeValue : isSteps ? exports.PipsType.SmallValue : exports.PipsType.NoValue;\n                    // Enforce the 'ignoreFirst' option by overwriting the type for 0.\n                    if (!index && ignoreFirst && i !== high) {\n                        type = 0;\n                    }\n                    if (!(i === high && ignoreLast)) {\n                        // Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\n                        indexes[newPct.toFixed(5)] = [i, type];\n                    }\n                    // Update the percentage count.\n                    prevPct = newPct;\n                }\n            });\n            return indexes;\n        }\n        function addMarking(spread, filterFunc, formatter) {\n            var _a, _b;\n            var element = scope_Document.createElement(\"div\");\n            var valueSizeClasses = (_a = {},\n                _a[exports.PipsType.None] = \"\",\n                _a[exports.PipsType.NoValue] = options.cssClasses.valueNormal,\n                _a[exports.PipsType.LargeValue] = options.cssClasses.valueLarge,\n                _a[exports.PipsType.SmallValue] = options.cssClasses.valueSub,\n                _a);\n            var markerSizeClasses = (_b = {},\n                _b[exports.PipsType.None] = \"\",\n                _b[exports.PipsType.NoValue] = options.cssClasses.markerNormal,\n                _b[exports.PipsType.LargeValue] = options.cssClasses.markerLarge,\n                _b[exports.PipsType.SmallValue] = options.cssClasses.markerSub,\n                _b);\n            var valueOrientationClasses = [options.cssClasses.valueHorizontal, options.cssClasses.valueVertical];\n            var markerOrientationClasses = [options.cssClasses.markerHorizontal, options.cssClasses.markerVertical];\n            addClass(element, options.cssClasses.pips);\n            addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);\n            function getClasses(type, source) {\n                var a = source === options.cssClasses.value;\n                var orientationClasses = a ? valueOrientationClasses : markerOrientationClasses;\n                var sizeClasses = a ? valueSizeClasses : markerSizeClasses;\n                return source + \" \" + orientationClasses[options.ort] + \" \" + sizeClasses[type];\n            }\n            function addSpread(offset, value, type) {\n                // Apply the filter function, if it is set.\n                type = filterFunc ? filterFunc(value, type) : type;\n                if (type === exports.PipsType.None) {\n                    return;\n                }\n                // Add a marker for every point\n                var node = addNodeTo(element, false);\n                node.className = getClasses(type, options.cssClasses.marker);\n                node.style[options.style] = offset + \"%\";\n                // Values are only appended for points marked '1' or '2'.\n                if (type > exports.PipsType.NoValue) {\n                    node = addNodeTo(element, false);\n                    node.className = getClasses(type, options.cssClasses.value);\n                    node.setAttribute(\"data-value\", String(value));\n                    node.style[options.style] = offset + \"%\";\n                    node.innerHTML = String(formatter.to(value));\n                }\n            }\n            // Append all points.\n            Object.keys(spread).forEach(function (offset) {\n                addSpread(offset, spread[offset][0], spread[offset][1]);\n            });\n            return element;\n        }\n        function removePips() {\n            if (scope_Pips) {\n                removeElement(scope_Pips);\n                scope_Pips = null;\n            }\n        }\n        function pips(pips) {\n            // Fix #669\n            removePips();\n            var spread = generateSpread(pips);\n            var filter = pips.filter;\n            var format = pips.format || {\n                to: function (value) {\n                    return String(Math.round(value));\n                },\n            };\n            scope_Pips = scope_Target.appendChild(addMarking(spread, filter, format));\n            return scope_Pips;\n        }\n        // Shorthand for base dimensions.\n        function baseSize() {\n            var rect = scope_Base.getBoundingClientRect();\n            var alt = (\"offset\" + [\"Width\", \"Height\"][options.ort]);\n            return options.ort === 0 ? rect.width || scope_Base[alt] : rect.height || scope_Base[alt];\n        }\n        // Handler for attaching events trough a proxy.\n        function attachEvent(events, element, callback, data) {\n            // This function can be used to 'filter' events to the slider.\n            // element is a node, not a nodeList\n            var method = function (event) {\n                var e = fixEvent(event, data.pageOffset, data.target || element);\n                // fixEvent returns false if this event has a different target\n                // when handling (multi-) touch events;\n                if (!e) {\n                    return false;\n                }\n                // doNotReject is passed by all end events to make sure released touches\n                // are not rejected, leaving the slider \"stuck\" to the cursor;\n                if (isSliderDisabled() && !data.doNotReject) {\n                    return false;\n                }\n                // Stop if an active 'tap' transition is taking place.\n                if (hasClass(scope_Target, options.cssClasses.tap) && !data.doNotReject) {\n                    return false;\n                }\n                // Ignore right or middle clicks on start #454\n                if (events === actions.start && e.buttons !== undefined && e.buttons > 1) {\n                    return false;\n                }\n                // Ignore right or middle clicks on start #454\n                if (data.hover && e.buttons) {\n                    return false;\n                }\n                // 'supportsPassive' is only true if a browser also supports touch-action: none in CSS.\n                // iOS safari does not, so it doesn't get to benefit from passive scrolling. iOS does support\n                // touch-action: manipulation, but that allows panning, which breaks\n                // sliders after zooming/on non-responsive pages.\n                // See: https://bugs.webkit.org/show_bug.cgi?id=133112\n                if (!supportsPassive) {\n                    e.preventDefault();\n                }\n                e.calcPoint = e.points[options.ort];\n                // Call the event handler with the event [ and additional data ].\n                callback(e, data);\n                return;\n            };\n            var methods = [];\n            // Bind a closure on the target for every event type.\n            events.split(\" \").forEach(function (eventName) {\n                element.addEventListener(eventName, method, supportsPassive ? { passive: true } : false);\n                methods.push([eventName, method]);\n            });\n            return methods;\n        }\n        // Provide a clean event with standardized offset values.\n        function fixEvent(e, pageOffset, eventTarget) {\n            // Filter the event to register the type, which can be\n            // touch, mouse or pointer. Offset changes need to be\n            // made on an event specific basis.\n            var touch = e.type.indexOf(\"touch\") === 0;\n            var mouse = e.type.indexOf(\"mouse\") === 0;\n            var pointer = e.type.indexOf(\"pointer\") === 0;\n            var x = 0;\n            var y = 0;\n            // IE10 implemented pointer events with a prefix;\n            if (e.type.indexOf(\"MSPointer\") === 0) {\n                pointer = true;\n            }\n            // Erroneous events seem to be passed in occasionally on iOS/iPadOS after user finishes interacting with\n            // the slider. They appear to be of type MouseEvent, yet they don't have usual properties set. Ignore\n            // events that have no touches or buttons associated with them. (#1057, #1079, #1095)\n            if (e.type === \"mousedown\" && !e.buttons && !e.touches) {\n                return false;\n            }\n            // The only thing one handle should be concerned about is the touches that originated on top of it.\n            if (touch) {\n                // Returns true if a touch originated on the target.\n                var isTouchOnTarget = function (checkTouch) {\n                    var target = checkTouch.target;\n                    return (target === eventTarget ||\n                        eventTarget.contains(target) ||\n                        (e.composed && e.composedPath().shift() === eventTarget));\n                };\n                // In the case of touchstart events, we need to make sure there is still no more than one\n                // touch on the target so we look amongst all touches.\n                if (e.type === \"touchstart\") {\n                    var targetTouches = Array.prototype.filter.call(e.touches, isTouchOnTarget);\n                    // Do not support more than one touch per handle.\n                    if (targetTouches.length > 1) {\n                        return false;\n                    }\n                    x = targetTouches[0].pageX;\n                    y = targetTouches[0].pageY;\n                }\n                else {\n                    // In the other cases, find on changedTouches is enough.\n                    var targetTouch = Array.prototype.find.call(e.changedTouches, isTouchOnTarget);\n                    // Cancel if the target touch has not moved.\n                    if (!targetTouch) {\n                        return false;\n                    }\n                    x = targetTouch.pageX;\n                    y = targetTouch.pageY;\n                }\n            }\n            pageOffset = pageOffset || getPageOffset(scope_Document);\n            if (mouse || pointer) {\n                x = e.clientX + pageOffset.x;\n                y = e.clientY + pageOffset.y;\n            }\n            e.pageOffset = pageOffset;\n            e.points = [x, y];\n            e.cursor = mouse || pointer; // Fix #435\n            return e;\n        }\n        // Translate a coordinate in the document to a percentage on the slider\n        function calcPointToPercentage(calcPoint) {\n            var location = calcPoint - offset(scope_Base, options.ort);\n            var proposal = (location * 100) / baseSize();\n            // Clamp proposal between 0% and 100%\n            // Out-of-bound coordinates may occur when .noUi-base pseudo-elements\n            // are used (e.g. contained handles feature)\n            proposal = limit(proposal);\n            return options.dir ? 100 - proposal : proposal;\n        }\n        // Find handle closest to a certain percentage on the slider\n        function getClosestHandle(clickedPosition) {\n            var smallestDifference = 100;\n            var handleNumber = false;\n            scope_Handles.forEach(function (handle, index) {\n                // Disabled handles are ignored\n                if (isHandleDisabled(index)) {\n                    return;\n                }\n                var handlePosition = scope_Locations[index];\n                var differenceWithThisHandle = Math.abs(handlePosition - clickedPosition);\n                // Initial state\n                var clickAtEdge = differenceWithThisHandle === 100 && smallestDifference === 100;\n                // Difference with this handle is smaller than the previously checked handle\n                var isCloser = differenceWithThisHandle < smallestDifference;\n                var isCloserAfter = differenceWithThisHandle <= smallestDifference && clickedPosition > handlePosition;\n                if (isCloser || isCloserAfter || clickAtEdge) {\n                    handleNumber = index;\n                    smallestDifference = differenceWithThisHandle;\n                }\n            });\n            return handleNumber;\n        }\n        // Fire 'end' when a mouse or pen leaves the document.\n        function documentLeave(event, data) {\n            if (event.type === \"mouseout\" &&\n                event.target.nodeName === \"HTML\" &&\n                event.relatedTarget === null) {\n                eventEnd(event, data);\n            }\n        }\n        // Handle movement on document for handle and range drag.\n        function eventMove(event, data) {\n            // Fix #498\n            // Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\n            // https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\n            // IE9 has .buttons and .which zero on mousemove.\n            // Firefox breaks the spec MDN defines.\n            if (navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0) {\n                return eventEnd(event, data);\n            }\n            // Check if we are moving up or down\n            var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);\n            // Convert the movement into a percentage of the slider width/height\n            var proposal = (movement * 100) / data.baseSize;\n            moveHandles(movement > 0, proposal, data.locations, data.handleNumbers, data.connect);\n        }\n        // Unbind move events on document, call callbacks.\n        function eventEnd(event, data) {\n            // The handle is no longer active, so remove the class.\n            if (data.handle) {\n                removeClass(data.handle, options.cssClasses.active);\n                scope_ActiveHandlesCount -= 1;\n            }\n            // Unbind the move and end events, which are added on 'start'.\n            data.listeners.forEach(function (c) {\n                scope_DocumentElement.removeEventListener(c[0], c[1]);\n            });\n            if (scope_ActiveHandlesCount === 0) {\n                // Remove dragging class.\n                removeClass(scope_Target, options.cssClasses.drag);\n                setZindex();\n                // Remove cursor styles and text-selection events bound to the body.\n                if (event.cursor) {\n                    scope_Body.style.cursor = \"\";\n                    scope_Body.removeEventListener(\"selectstart\", preventDefault);\n                }\n            }\n            data.handleNumbers.forEach(function (handleNumber) {\n                fireEvent(\"change\", handleNumber);\n                fireEvent(\"set\", handleNumber);\n                fireEvent(\"end\", handleNumber);\n            });\n        }\n        // Bind move events on document.\n        function eventStart(event, data) {\n            // Ignore event if any handle is disabled\n            if (data.handleNumbers.some(isHandleDisabled)) {\n                return;\n            }\n            var handle;\n            if (data.handleNumbers.length === 1) {\n                var handleOrigin = scope_Handles[data.handleNumbers[0]];\n                handle = handleOrigin.children[0];\n                scope_ActiveHandlesCount += 1;\n                // Mark the handle as 'active' so it can be styled.\n                addClass(handle, options.cssClasses.active);\n            }\n            // A drag should never propagate up to the 'tap' event.\n            event.stopPropagation();\n            // Record the event listeners.\n            var listeners = [];\n            // Attach the move and end events.\n            var moveEvent = attachEvent(actions.move, scope_DocumentElement, eventMove, {\n                // The event target has changed so we need to propagate the original one so that we keep\n                // relying on it to extract target touches.\n                target: event.target,\n                handle: handle,\n                connect: data.connect,\n                listeners: listeners,\n                startCalcPoint: event.calcPoint,\n                baseSize: baseSize(),\n                pageOffset: event.pageOffset,\n                handleNumbers: data.handleNumbers,\n                buttonsProperty: event.buttons,\n                locations: scope_Locations.slice(),\n            });\n            var endEvent = attachEvent(actions.end, scope_DocumentElement, eventEnd, {\n                target: event.target,\n                handle: handle,\n                listeners: listeners,\n                doNotReject: true,\n                handleNumbers: data.handleNumbers,\n            });\n            var outEvent = attachEvent(\"mouseout\", scope_DocumentElement, documentLeave, {\n                target: event.target,\n                handle: handle,\n                listeners: listeners,\n                doNotReject: true,\n                handleNumbers: data.handleNumbers,\n            });\n            // We want to make sure we pushed the listeners in the listener list rather than creating\n            // a new one as it has already been passed to the event handlers.\n            listeners.push.apply(listeners, moveEvent.concat(endEvent, outEvent));\n            // Text selection isn't an issue on touch devices,\n            // so adding cursor styles can be skipped.\n            if (event.cursor) {\n                // Prevent the 'I' cursor and extend the range-drag cursor.\n                scope_Body.style.cursor = getComputedStyle(event.target).cursor;\n                // Mark the target with a dragging state.\n                if (scope_Handles.length > 1) {\n                    addClass(scope_Target, options.cssClasses.drag);\n                }\n                // Prevent text selection when dragging the handles.\n                // In noUiSlider <= 9.2.0, this was handled by calling preventDefault on mouse/touch start/move,\n                // which is scroll blocking. The selectstart event is supported by FireFox starting from version 52,\n                // meaning the only holdout is iOS Safari. This doesn't matter: text selection isn't triggered there.\n                // The 'cursor' flag is false.\n                // See: http://caniuse.com/#search=selectstart\n                scope_Body.addEventListener(\"selectstart\", preventDefault, false);\n            }\n            data.handleNumbers.forEach(function (handleNumber) {\n                fireEvent(\"start\", handleNumber);\n            });\n        }\n        // Move closest handle to tapped location.\n        function eventTap(event) {\n            // The tap event shouldn't propagate up\n            event.stopPropagation();\n            var proposal = calcPointToPercentage(event.calcPoint);\n            var handleNumber = getClosestHandle(proposal);\n            // Tackle the case that all handles are 'disabled'.\n            if (handleNumber === false) {\n                return;\n            }\n            // Flag the slider as it is now in a transitional state.\n            // Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.\n            if (!options.events.snap) {\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\n            }\n            setHandle(handleNumber, proposal, true, true);\n            setZindex();\n            fireEvent(\"slide\", handleNumber, true);\n            fireEvent(\"update\", handleNumber, true);\n            if (!options.events.snap) {\n                fireEvent(\"change\", handleNumber, true);\n                fireEvent(\"set\", handleNumber, true);\n            }\n            else {\n                eventStart(event, { handleNumbers: [handleNumber] });\n            }\n        }\n        // Fires a 'hover' event for a hovered mouse/pen position.\n        function eventHover(event) {\n            var proposal = calcPointToPercentage(event.calcPoint);\n            var to = scope_Spectrum.getStep(proposal);\n            var value = scope_Spectrum.fromStepping(to);\n            Object.keys(scope_Events).forEach(function (targetEvent) {\n                if (\"hover\" === targetEvent.split(\".\")[0]) {\n                    scope_Events[targetEvent].forEach(function (callback) {\n                        callback.call(scope_Self, value);\n                    });\n                }\n            });\n        }\n        // Handles keydown on focused handles\n        // Don't move the document when pressing arrow keys on focused handles\n        function eventKeydown(event, handleNumber) {\n            if (isSliderDisabled() || isHandleDisabled(handleNumber)) {\n                return false;\n            }\n            var horizontalKeys = [\"Left\", \"Right\"];\n            var verticalKeys = [\"Down\", \"Up\"];\n            var largeStepKeys = [\"PageDown\", \"PageUp\"];\n            var edgeKeys = [\"Home\", \"End\"];\n            if (options.dir && !options.ort) {\n                // On an right-to-left slider, the left and right keys act inverted\n                horizontalKeys.reverse();\n            }\n            else if (options.ort && !options.dir) {\n                // On a top-to-bottom slider, the up and down keys act inverted\n                verticalKeys.reverse();\n                largeStepKeys.reverse();\n            }\n            // Strip \"Arrow\" for IE compatibility. https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n            var key = event.key.replace(\"Arrow\", \"\");\n            var isLargeDown = key === largeStepKeys[0];\n            var isLargeUp = key === largeStepKeys[1];\n            var isDown = key === verticalKeys[0] || key === horizontalKeys[0] || isLargeDown;\n            var isUp = key === verticalKeys[1] || key === horizontalKeys[1] || isLargeUp;\n            var isMin = key === edgeKeys[0];\n            var isMax = key === edgeKeys[1];\n            if (!isDown && !isUp && !isMin && !isMax) {\n                return true;\n            }\n            event.preventDefault();\n            var to;\n            if (isUp || isDown) {\n                var direction = isDown ? 0 : 1;\n                var steps = getNextStepsForHandle(handleNumber);\n                var step = steps[direction];\n                // At the edge of a slider, do nothing\n                if (step === null) {\n                    return false;\n                }\n                // No step set, use the default of 10% of the sub-range\n                if (step === false) {\n                    step = scope_Spectrum.getDefaultStep(scope_Locations[handleNumber], isDown, options.keyboardDefaultStep);\n                }\n                if (isLargeUp || isLargeDown) {\n                    step *= options.keyboardPageMultiplier;\n                }\n                else {\n                    step *= options.keyboardMultiplier;\n                }\n                // Step over zero-length ranges (#948);\n                step = Math.max(step, 0.0000001);\n                // Decrement for down steps\n                step = (isDown ? -1 : 1) * step;\n                to = scope_Values[handleNumber] + step;\n            }\n            else if (isMax) {\n                // End key\n                to = options.spectrum.xVal[options.spectrum.xVal.length - 1];\n            }\n            else {\n                // Home key\n                to = options.spectrum.xVal[0];\n            }\n            setHandle(handleNumber, scope_Spectrum.toStepping(to), true, true);\n            fireEvent(\"slide\", handleNumber);\n            fireEvent(\"update\", handleNumber);\n            fireEvent(\"change\", handleNumber);\n            fireEvent(\"set\", handleNumber);\n            return false;\n        }\n        // Attach events to several slider parts.\n        function bindSliderEvents(behaviour) {\n            // Attach the standard drag event to the handles.\n            if (!behaviour.fixed) {\n                scope_Handles.forEach(function (handle, index) {\n                    // These events are only bound to the visual handle\n                    // element, not the 'real' origin element.\n                    attachEvent(actions.start, handle.children[0], eventStart, {\n                        handleNumbers: [index],\n                    });\n                });\n            }\n            // Attach the tap event to the slider base.\n            if (behaviour.tap) {\n                attachEvent(actions.start, scope_Base, eventTap, {});\n            }\n            // Fire hover events\n            if (behaviour.hover) {\n                attachEvent(actions.move, scope_Base, eventHover, {\n                    hover: true,\n                });\n            }\n            // Make the range draggable.\n            if (behaviour.drag) {\n                scope_Connects.forEach(function (connect, index) {\n                    if (connect === false || index === 0 || index === scope_Connects.length - 1) {\n                        return;\n                    }\n                    var handleBefore = scope_Handles[index - 1];\n                    var handleAfter = scope_Handles[index];\n                    var eventHolders = [connect];\n                    var handlesToDrag = [handleBefore, handleAfter];\n                    var handleNumbersToDrag = [index - 1, index];\n                    addClass(connect, options.cssClasses.draggable);\n                    // When the range is fixed, the entire range can\n                    // be dragged by the handles. The handle in the first\n                    // origin will propagate the start event upward,\n                    // but it needs to be bound manually on the other.\n                    if (behaviour.fixed) {\n                        eventHolders.push(handleBefore.children[0]);\n                        eventHolders.push(handleAfter.children[0]);\n                    }\n                    if (behaviour.dragAll) {\n                        handlesToDrag = scope_Handles;\n                        handleNumbersToDrag = scope_HandleNumbers;\n                    }\n                    eventHolders.forEach(function (eventHolder) {\n                        attachEvent(actions.start, eventHolder, eventStart, {\n                            handles: handlesToDrag,\n                            handleNumbers: handleNumbersToDrag,\n                            connect: connect,\n                        });\n                    });\n                });\n            }\n        }\n        // Attach an event to this slider, possibly including a namespace\n        function bindEvent(namespacedEvent, callback) {\n            scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\n            scope_Events[namespacedEvent].push(callback);\n            // If the event bound is 'update,' fire it immediately for all handles.\n            if (namespacedEvent.split(\".\")[0] === \"update\") {\n                scope_Handles.forEach(function (a, index) {\n                    fireEvent(\"update\", index);\n                });\n            }\n        }\n        function isInternalNamespace(namespace) {\n            return namespace === INTERNAL_EVENT_NS.aria || namespace === INTERNAL_EVENT_NS.tooltips;\n        }\n        // Undo attachment of event\n        function removeEvent(namespacedEvent) {\n            var event = namespacedEvent && namespacedEvent.split(\".\")[0];\n            var namespace = event ? namespacedEvent.substring(event.length) : namespacedEvent;\n            Object.keys(scope_Events).forEach(function (bind) {\n                var tEvent = bind.split(\".\")[0];\n                var tNamespace = bind.substring(tEvent.length);\n                if ((!event || event === tEvent) && (!namespace || namespace === tNamespace)) {\n                    // only delete protected internal event if intentional\n                    if (!isInternalNamespace(tNamespace) || namespace === tNamespace) {\n                        delete scope_Events[bind];\n                    }\n                }\n            });\n        }\n        // External event handling\n        function fireEvent(eventName, handleNumber, tap) {\n            Object.keys(scope_Events).forEach(function (targetEvent) {\n                var eventType = targetEvent.split(\".\")[0];\n                if (eventName === eventType) {\n                    scope_Events[targetEvent].forEach(function (callback) {\n                        callback.call(\n                        // Use the slider public API as the scope ('this')\n                        scope_Self, \n                        // Return values as array, so arg_1[arg_2] is always valid.\n                        scope_Values.map(options.format.to), \n                        // Handle index, 0 or 1\n                        handleNumber, \n                        // Un-formatted slider values\n                        scope_Values.slice(), \n                        // Event is fired by tap, true or false\n                        tap || false, \n                        // Left offset of the handle, in relation to the slider\n                        scope_Locations.slice(), \n                        // add the slider public API to an accessible parameter when this is unavailable\n                        scope_Self);\n                    });\n                }\n            });\n        }\n        // Split out the handle positioning logic so the Move event can use it, too\n        function checkHandlePosition(reference, handleNumber, to, lookBackward, lookForward, getValue) {\n            var distance;\n            // For sliders with multiple handles, limit movement to the other handle.\n            // Apply the margin option by adding it to the handle positions.\n            if (scope_Handles.length > 1 && !options.events.unconstrained) {\n                if (lookBackward && handleNumber > 0) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber - 1], options.margin, false);\n                    to = Math.max(to, distance);\n                }\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber + 1], options.margin, true);\n                    to = Math.min(to, distance);\n                }\n            }\n            // The limit option has the opposite effect, limiting handles to a\n            // maximum distance from another. Limit must be > 0, as otherwise\n            // handles would be unmovable.\n            if (scope_Handles.length > 1 && options.limit) {\n                if (lookBackward && handleNumber > 0) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber - 1], options.limit, false);\n                    to = Math.min(to, distance);\n                }\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber + 1], options.limit, true);\n                    to = Math.max(to, distance);\n                }\n            }\n            // The padding option keeps the handles a certain distance from the\n            // edges of the slider. Padding must be > 0.\n            if (options.padding) {\n                if (handleNumber === 0) {\n                    distance = scope_Spectrum.getAbsoluteDistance(0, options.padding[0], false);\n                    to = Math.max(to, distance);\n                }\n                if (handleNumber === scope_Handles.length - 1) {\n                    distance = scope_Spectrum.getAbsoluteDistance(100, options.padding[1], true);\n                    to = Math.min(to, distance);\n                }\n            }\n            to = scope_Spectrum.getStep(to);\n            // Limit percentage to the 0 - 100 range\n            to = limit(to);\n            // Return false if handle can't move\n            if (to === reference[handleNumber] && !getValue) {\n                return false;\n            }\n            return to;\n        }\n        // Uses slider orientation to create CSS rules. a = base value;\n        function inRuleOrder(v, a) {\n            var o = options.ort;\n            return (o ? a : v) + \", \" + (o ? v : a);\n        }\n        // Moves handle(s) by a percentage\n        // (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])\n        function moveHandles(upward, proposal, locations, handleNumbers, connect) {\n            var proposals = locations.slice();\n            // Store first handle now, so we still have it in case handleNumbers is reversed\n            var firstHandle = handleNumbers[0];\n            var b = [!upward, upward];\n            var f = [upward, !upward];\n            // Copy handleNumbers so we don't change the dataset\n            handleNumbers = handleNumbers.slice();\n            // Check to see which handle is 'leading'.\n            // If that one can't move the second can't either.\n            if (upward) {\n                handleNumbers.reverse();\n            }\n            // Step 1: get the maximum percentage that any of the handles can move\n            if (handleNumbers.length > 1) {\n                handleNumbers.forEach(function (handleNumber, o) {\n                    var to = checkHandlePosition(proposals, handleNumber, proposals[handleNumber] + proposal, b[o], f[o], false);\n                    // Stop if one of the handles can't move.\n                    if (to === false) {\n                        proposal = 0;\n                    }\n                    else {\n                        proposal = to - proposals[handleNumber];\n                        proposals[handleNumber] = to;\n                    }\n                });\n            }\n            // If using one handle, check backward AND forward\n            else {\n                b = f = [true];\n            }\n            var state = false;\n            // Step 2: Try to set the handles with the found percentage\n            handleNumbers.forEach(function (handleNumber, o) {\n                state = setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o]) || state;\n            });\n            // Step 3: If a handle moved, fire events\n            if (state) {\n                handleNumbers.forEach(function (handleNumber) {\n                    fireEvent(\"update\", handleNumber);\n                    fireEvent(\"slide\", handleNumber);\n                });\n                // If target is a connect, then fire drag event\n                if (connect != undefined) {\n                    fireEvent(\"drag\", firstHandle);\n                }\n            }\n        }\n        // Takes a base value and an offset. This offset is used for the connect bar size.\n        // In the initial design for this feature, the origin element was 1% wide.\n        // Unfortunately, a rounding bug in Chrome makes it impossible to implement this feature\n        // in this manner: https://bugs.chromium.org/p/chromium/issues/detail?id=798223\n        function transformDirection(a, b) {\n            return options.dir ? 100 - a - b : a;\n        }\n        // Updates scope_Locations and scope_Values, updates visual state\n        function updateHandlePosition(handleNumber, to) {\n            // Update locations.\n            scope_Locations[handleNumber] = to;\n            // Convert the value to the slider stepping/range.\n            scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);\n            var translation = transformDirection(to, 0) - scope_DirOffset;\n            var translateRule = \"translate(\" + inRuleOrder(translation + \"%\", \"0\") + \")\";\n            scope_Handles[handleNumber].style[options.transformRule] = translateRule;\n            updateConnect(handleNumber);\n            updateConnect(handleNumber + 1);\n        }\n        // Handles before the slider middle are stacked later = higher,\n        // Handles after the middle later is lower\n        // [[7] [8] .......... | .......... [5] [4]\n        function setZindex() {\n            scope_HandleNumbers.forEach(function (handleNumber) {\n                var dir = scope_Locations[handleNumber] > 50 ? -1 : 1;\n                var zIndex = 3 + (scope_Handles.length + dir * handleNumber);\n                scope_Handles[handleNumber].style.zIndex = String(zIndex);\n            });\n        }\n        // Test suggested values and apply margin, step.\n        // if exactInput is true, don't run checkHandlePosition, then the handle can be placed in between steps (#436)\n        function setHandle(handleNumber, to, lookBackward, lookForward, exactInput) {\n            if (!exactInput) {\n                to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward, false);\n            }\n            if (to === false) {\n                return false;\n            }\n            updateHandlePosition(handleNumber, to);\n            return true;\n        }\n        // Updates style attribute for connect nodes\n        function updateConnect(index) {\n            // Skip connects set to false\n            if (!scope_Connects[index]) {\n                return;\n            }\n            var l = 0;\n            var h = 100;\n            if (index !== 0) {\n                l = scope_Locations[index - 1];\n            }\n            if (index !== scope_Connects.length - 1) {\n                h = scope_Locations[index];\n            }\n            // We use two rules:\n            // 'translate' to change the left/top offset;\n            // 'scale' to change the width of the element;\n            // As the element has a width of 100%, a translation of 100% is equal to 100% of the parent (.noUi-base)\n            var connectWidth = h - l;\n            var translateRule = \"translate(\" + inRuleOrder(transformDirection(l, connectWidth) + \"%\", \"0\") + \")\";\n            var scaleRule = \"scale(\" + inRuleOrder(connectWidth / 100, \"1\") + \")\";\n            scope_Connects[index].style[options.transformRule] =\n                translateRule + \" \" + scaleRule;\n        }\n        // Parses value passed to .set method. Returns current value if not parse-able.\n        function resolveToValue(to, handleNumber) {\n            // Setting with null indicates an 'ignore'.\n            // Inputting 'false' is invalid.\n            if (to === null || to === false || to === undefined) {\n                return scope_Locations[handleNumber];\n            }\n            // If a formatted number was passed, attempt to decode it.\n            if (typeof to === \"number\") {\n                to = String(to);\n            }\n            to = options.format.from(to);\n            if (to !== false) {\n                to = scope_Spectrum.toStepping(to);\n            }\n            // If parsing the number failed, use the current value.\n            if (to === false || isNaN(to)) {\n                return scope_Locations[handleNumber];\n            }\n            return to;\n        }\n        // Set the slider value.\n        function valueSet(input, fireSetEvent, exactInput) {\n            var values = asArray(input);\n            var isInit = scope_Locations[0] === undefined;\n            // Event fires by default\n            fireSetEvent = fireSetEvent === undefined ? true : fireSetEvent;\n            // Animation is optional.\n            // Make sure the initial values were set before using animated placement.\n            if (options.animate && !isInit) {\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\n            }\n            // First pass, without lookAhead but with lookBackward. Values are set from left to right.\n            scope_HandleNumbers.forEach(function (handleNumber) {\n                setHandle(handleNumber, resolveToValue(values[handleNumber], handleNumber), true, false, exactInput);\n            });\n            var i = scope_HandleNumbers.length === 1 ? 0 : 1;\n            // Spread handles evenly across the slider if the range has no size (min=max)\n            if (isInit && scope_Spectrum.hasNoSize()) {\n                exactInput = true;\n                scope_Locations[0] = 0;\n                if (scope_HandleNumbers.length > 1) {\n                    var space_1 = 100 / (scope_HandleNumbers.length - 1);\n                    scope_HandleNumbers.forEach(function (handleNumber) {\n                        scope_Locations[handleNumber] = handleNumber * space_1;\n                    });\n                }\n            }\n            // Secondary passes. Now that all base values are set, apply constraints.\n            // Iterate all handles to ensure constraints are applied for the entire slider (Issue #1009)\n            for (; i < scope_HandleNumbers.length; ++i) {\n                scope_HandleNumbers.forEach(function (handleNumber) {\n                    setHandle(handleNumber, scope_Locations[handleNumber], true, true, exactInput);\n                });\n            }\n            setZindex();\n            scope_HandleNumbers.forEach(function (handleNumber) {\n                fireEvent(\"update\", handleNumber);\n                // Fire the event only for handles that received a new value, as per #579\n                if (values[handleNumber] !== null && fireSetEvent) {\n                    fireEvent(\"set\", handleNumber);\n                }\n            });\n        }\n        // Reset slider to initial values\n        function valueReset(fireSetEvent) {\n            valueSet(options.start, fireSetEvent);\n        }\n        // Set value for a single handle\n        function valueSetHandle(handleNumber, value, fireSetEvent, exactInput) {\n            // Ensure numeric input\n            handleNumber = Number(handleNumber);\n            if (!(handleNumber >= 0 && handleNumber < scope_HandleNumbers.length)) {\n                throw new Error(\"noUiSlider: invalid handle number, got: \" + handleNumber);\n            }\n            // Look both backward and forward, since we don't want this handle to \"push\" other handles (#960);\n            // The exactInput argument can be used to ignore slider stepping (#436)\n            setHandle(handleNumber, resolveToValue(value, handleNumber), true, true, exactInput);\n            fireEvent(\"update\", handleNumber);\n            if (fireSetEvent) {\n                fireEvent(\"set\", handleNumber);\n            }\n        }\n        // Get the slider value.\n        function valueGet(unencoded) {\n            if (unencoded === void 0) { unencoded = false; }\n            if (unencoded) {\n                // return a copy of the raw values\n                return scope_Values.length === 1 ? scope_Values[0] : scope_Values.slice(0);\n            }\n            var values = scope_Values.map(options.format.to);\n            // If only one handle is used, return a single value.\n            if (values.length === 1) {\n                return values[0];\n            }\n            return values;\n        }\n        // Removes classes from the root and empties it.\n        function destroy() {\n            // remove protected internal listeners\n            removeEvent(INTERNAL_EVENT_NS.aria);\n            removeEvent(INTERNAL_EVENT_NS.tooltips);\n            Object.keys(options.cssClasses).forEach(function (key) {\n                removeClass(scope_Target, options.cssClasses[key]);\n            });\n            while (scope_Target.firstChild) {\n                scope_Target.removeChild(scope_Target.firstChild);\n            }\n            delete scope_Target.noUiSlider;\n        }\n        function getNextStepsForHandle(handleNumber) {\n            var location = scope_Locations[handleNumber];\n            var nearbySteps = scope_Spectrum.getNearbySteps(location);\n            var value = scope_Values[handleNumber];\n            var increment = nearbySteps.thisStep.step;\n            var decrement = null;\n            // If snapped, directly use defined step value\n            if (options.snap) {\n                return [\n                    value - nearbySteps.stepBefore.startValue || null,\n                    nearbySteps.stepAfter.startValue - value || null,\n                ];\n            }\n            // If the next value in this step moves into the next step,\n            // the increment is the start of the next step - the current value\n            if (increment !== false) {\n                if (value + increment > nearbySteps.stepAfter.startValue) {\n                    increment = nearbySteps.stepAfter.startValue - value;\n                }\n            }\n            // If the value is beyond the starting point\n            if (value > nearbySteps.thisStep.startValue) {\n                decrement = nearbySteps.thisStep.step;\n            }\n            else if (nearbySteps.stepBefore.step === false) {\n                decrement = false;\n            }\n            // If a handle is at the start of a step, it always steps back into the previous step first\n            else {\n                decrement = value - nearbySteps.stepBefore.highestStep;\n            }\n            // Now, if at the slider edges, there is no in/decrement\n            if (location === 100) {\n                increment = null;\n            }\n            else if (location === 0) {\n                decrement = null;\n            }\n            // As per #391, the comparison for the decrement step can have some rounding issues.\n            var stepDecimals = scope_Spectrum.countStepDecimals();\n            // Round per #391\n            if (increment !== null && increment !== false) {\n                increment = Number(increment.toFixed(stepDecimals));\n            }\n            if (decrement !== null && decrement !== false) {\n                decrement = Number(decrement.toFixed(stepDecimals));\n            }\n            return [decrement, increment];\n        }\n        // Get the current step size for the slider.\n        function getNextSteps() {\n            return scope_HandleNumbers.map(getNextStepsForHandle);\n        }\n        // Updatable: margin, limit, padding, step, range, animate, snap\n        function updateOptions(optionsToUpdate, fireSetEvent) {\n            // Spectrum is created using the range, snap, direction and step options.\n            // 'snap' and 'step' can be updated.\n            // If 'snap' and 'step' are not passed, they should remain unchanged.\n            var v = valueGet();\n            var updateAble = [\n                \"margin\",\n                \"limit\",\n                \"padding\",\n                \"range\",\n                \"animate\",\n                \"snap\",\n                \"step\",\n                \"format\",\n                \"pips\",\n                \"tooltips\",\n            ];\n            // Only change options that we're actually passed to update.\n            updateAble.forEach(function (name) {\n                // Check for undefined. null removes the value.\n                if (optionsToUpdate[name] !== undefined) {\n                    originalOptions[name] = optionsToUpdate[name];\n                }\n            });\n            var newOptions = testOptions(originalOptions);\n            // Load new options into the slider state\n            updateAble.forEach(function (name) {\n                if (optionsToUpdate[name] !== undefined) {\n                    options[name] = newOptions[name];\n                }\n            });\n            scope_Spectrum = newOptions.spectrum;\n            // Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)\n            options.margin = newOptions.margin;\n            options.limit = newOptions.limit;\n            options.padding = newOptions.padding;\n            // Update pips, removes existing.\n            if (options.pips) {\n                pips(options.pips);\n            }\n            else {\n                removePips();\n            }\n            // Update tooltips, removes existing.\n            if (options.tooltips) {\n                tooltips();\n            }\n            else {\n                removeTooltips();\n            }\n            // Invalidate the current positioning so valueSet forces an update.\n            scope_Locations = [];\n            valueSet(isSet(optionsToUpdate.start) ? optionsToUpdate.start : v, fireSetEvent);\n        }\n        // Initialization steps\n        function setupSlider() {\n            // Create the base element, initialize HTML and set classes.\n            // Add handles and connect elements.\n            scope_Base = addSlider(scope_Target);\n            addElements(options.connect, scope_Base);\n            // Attach user events.\n            bindSliderEvents(options.events);\n            // Use the public value method to set the start values.\n            valueSet(options.start);\n            if (options.pips) {\n                pips(options.pips);\n            }\n            if (options.tooltips) {\n                tooltips();\n            }\n            aria();\n        }\n        setupSlider();\n        var scope_Self = {\n            destroy: destroy,\n            steps: getNextSteps,\n            on: bindEvent,\n            off: removeEvent,\n            get: valueGet,\n            set: valueSet,\n            setHandle: valueSetHandle,\n            reset: valueReset,\n            // Exposed for unit testing, don't use this in your application.\n            __moveHandles: function (upward, proposal, handleNumbers) {\n                moveHandles(upward, proposal, scope_Locations, handleNumbers);\n            },\n            options: originalOptions,\n            updateOptions: updateOptions,\n            target: scope_Target,\n            removePips: removePips,\n            removeTooltips: removeTooltips,\n            getPositions: function () {\n                return scope_Locations.slice();\n            },\n            getTooltips: function () {\n                return scope_Tooltips;\n            },\n            getOrigins: function () {\n                return scope_Handles;\n            },\n            pips: pips, // Issue #594\n        };\n        return scope_Self;\n    }\n    // Run the standard initializer\n    function initialize(target, originalOptions) {\n        if (!target || !target.nodeName) {\n            throw new Error(\"noUiSlider: create requires a single element, got: \" + target);\n        }\n        // Throw an error if the slider was already initialized.\n        if (target.noUiSlider) {\n            throw new Error(\"noUiSlider: Slider was already initialized.\");\n        }\n        // Test the options and create the slider environment;\n        var options = testOptions(originalOptions);\n        var api = scope(target, options, originalOptions);\n        target.noUiSlider = api;\n        return api;\n    }\n    var nouislider = {\n        // Exposed for unit testing, don't use this in your application.\n        __spectrum: Spectrum,\n        // A reference to the default classes, allows global changes.\n        // Use the cssClasses option for changes to one slider.\n        cssClasses: cssClasses,\n        create: initialize,\n    };\n\n    exports.create = initialize;\n    exports.cssClasses = cssClasses;\n    exports[\"default\"] = nouislider;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, Injectable, ContentChildren, ContentChild, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\nclass Ng2DropdownButton {\n    constructor(element) {\n        this.element = element;\n        this.onMenuToggled = new EventEmitter();\n        this.showCaret = true;\n    }\n    /**\n     * @name toggleMenu\n     * @desc emits event to toggle menu\n     */\n    toggleMenu() {\n        this.onMenuToggled.emit(true);\n    }\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     */\n    getPosition() {\n        return this.element.nativeElement.getBoundingClientRect();\n    }\n}\nNg2DropdownButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownButton, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNg2DropdownButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2DropdownButton, selector: \"ng2-dropdown-button\", inputs: { showCaret: \"showCaret\" }, outputs: { onMenuToggled: \"onMenuToggled\" }, ngImport: i0, template: \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"\\u0421\\u043B\\u043E\\u0439_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\", styles: [\".ng2-dropdown-button{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button:hover{color:#222}.ng2-dropdown-button:active,.ng2-dropdown-button:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label{flex:1 1 95%}.ng2-dropdown-button__caret{width:12px;height:12px;display:flex;flex:1 1 6%}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active{background:rgba(0,0,0,.2)}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng2-dropdown-button', template: \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"\\u0421\\u043B\\u043E\\u0439_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\", styles: [\".ng2-dropdown-button{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button:hover{color:#222}.ng2-dropdown-button:active,.ng2-dropdown-button:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label{flex:1 1 95%}.ng2-dropdown-button__caret{width:12px;height:12px;display:flex;flex:1 1 6%}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active{background:rgba(0,0,0,.2)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { onMenuToggled: [{\n                type: Output\n            }], showCaret: [{\n                type: Input\n            }] } });\n\nconst KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40,\n    ENTER: 13,\n    ESCAPE: 27\n};\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchNext = (index, items, state) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchPrev = (index, items, state) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\nconst onBackspace = (index, items, state) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n    else {\n        state.select(items[0], true);\n    }\n};\nfunction onEscape() {\n    this.hide();\n}\n;\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\nconst onItemClicked = (index, items, state) => {\n    return state.selectedItem ? state.selectedItem.click() : undefined;\n};\nconst ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext,\n    [KEYS.ENTER]: onItemClicked,\n    [KEYS.ESCAPE]: onEscape\n};\nfunction arrowKeysHandler(event) {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n\nclass Ng2DropdownState {\n    constructor() {\n        this.onItemSelected = new EventEmitter();\n        this.onItemClicked = new EventEmitter();\n        this.onItemDestroyed = new EventEmitter();\n    }\n    /**\n     * @name selectedItem\n     * @desc getter for _selectedItem\n     */\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    /**\n     * @name selects a menu item and emits event\n     * @param item\n     */\n    select(item, dispatchEvent = true) {\n        this._selectedItem = item;\n        if (!dispatchEvent || !item) {\n            return;\n        }\n        item.focus();\n        this.onItemSelected.emit(item);\n    }\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n    unselect() {\n        this._selectedItem = undefined;\n    }\n}\n\nclass DropdownStateService {\n    constructor() {\n        this.menuState = {\n            isVisible: false,\n            toString() {\n                return this.isVisible === true ? 'visible' : 'hidden';\n            }\n        };\n        this.dropdownState = new Ng2DropdownState();\n    }\n}\nDropdownStateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownStateService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDropdownStateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownStateService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownStateService, decorators: [{\n            type: Injectable\n        }] });\n\nclass Ng2MenuItem {\n    constructor(state, element) {\n        this.state = state;\n        this.element = element;\n        /**\n         * @preventClose\n         * @desc if true, clicking on the item won't close the dropdown\n         */\n        this.preventClose = false;\n    }\n    ngOnDestroy() {\n        this.state.dropdownState.onItemDestroyed.emit(this);\n    }\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     */\n    get isSelected() {\n        return this === this.state.dropdownState.selectedItem;\n    }\n    /**\n     * @name click\n     * @desc emits select event\n     */\n    select($event) {\n        this.state.dropdownState.select(this, true);\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n    /**\n     * @name click\n     * @desc emits click event\n     */\n    click() {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n    /**\n     * @name focus\n     */\n    focus() {\n        this.element.nativeElement.children[0].focus();\n    }\n}\nNg2MenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2MenuItem, deps: [{ token: DropdownStateService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNg2MenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2MenuItem, selector: \"ng2-menu-item\", inputs: { preventClose: \"preventClose\", value: \"value\" }, ngImport: i0, template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `, isInline: true, styles: [\".ng2-menu-item{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item:focus{outline:0}.ng2-menu-item:active{background:rgba(158,158,158,.4)}:host(ng2-menu-item) ::ng-deep [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2MenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng2-menu-item', template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `, styles: [\".ng2-menu-item{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item:focus{outline:0}.ng2-menu-item:active{background:rgba(158,158,158,.4)}:host(ng2-menu-item) ::ng-deep [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: DropdownStateService }, { type: i0.ElementRef }]; }, propDecorators: { preventClose: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nclass Ng2DropdownMenu {\n    constructor(dropdownState, element, renderer) {\n        this.dropdownState = dropdownState;\n        this.element = element;\n        this.renderer = renderer;\n        /**\n         * @name width\n         */\n        this.width = 4;\n        /**\n         * @description if set to true, the first element of the dropdown will be automatically focused\n         * @name focusFirstElement\n         */\n        this.focusFirstElement = true;\n        /**\n         * @name appendToBody\n         */\n        this.appendToBody = true;\n        /**\n         * @name zIndex\n         */\n        this.zIndex = 1000;\n        this.listeners = {\n            arrowHandler: undefined,\n            handleKeypress: undefined\n        };\n    }\n    /**\n     * @name show\n     * @shows menu and selects first item\n     */\n    show(position, dynamic = true) {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        if (!this.dropdownState.menuState.isVisible) {\n            // setting handlers\n            this.listeners.handleKeypress = this.renderer.listen(dc.body, 'keydown', this.handleKeypress.bind(this));\n            this.listeners.arrowHandler = this.renderer.listen(wd, 'keydown', arrowKeysHandler);\n        }\n        // update state\n        this.dropdownState.menuState.isVisible = true;\n        if (position) {\n            this.updatePosition(position, dynamic);\n        }\n    }\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n    hide() {\n        this.dropdownState.menuState.isVisible = false;\n        // reset selected item state\n        this.dropdownState.dropdownState.unselect();\n        // call function to unlisten\n        this.listeners.arrowHandler && this.listeners.arrowHandler();\n        this.listeners.handleKeypress && this.listeners.handleKeypress();\n    }\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     * @param dynamic {boolean}\n     */\n    updatePosition(position, dynamic) {\n        this.position = position;\n        this.updateOnChange(dynamic);\n    }\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n    handleKeypress($event) {\n        const key = $event.keyCode;\n        const items = this.items.toArray();\n        const index = items.indexOf(this.dropdownState.dropdownState.selectedItem);\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n        ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n    }\n    /**\n     * @name getMenuElement\n     */\n    getMenuElement() {\n        return this.element.nativeElement.children[0];\n    }\n    /**\n     * @name calcPositionOffset\n     * @param position\n     */\n    calcPositionOffset(position) {\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (!wd || !dc || !position) {\n            return;\n        }\n        const element = this.getMenuElement();\n        const supportPageOffset = wd.pageXOffset !== undefined;\n        const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n        const x = supportPageOffset\n            ? wd.pageXOffset\n            : isCSS1Compat\n                ? dc.documentElement.scrollLeft\n                : dc.body.scrollLeft;\n        const y = supportPageOffset\n            ? wd.pageYOffset\n            : isCSS1Compat\n                ? dc.documentElement.scrollTop\n                : dc.body.scrollTop;\n        let { top, left } = this.applyOffset(`${position.top + (this.appendToBody ? y - 15 : 0)}px`, `${position.left + x - 5}px`);\n        const clientWidth = element.clientWidth;\n        const clientHeight = element.clientHeight;\n        const marginFromBottom = parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n        const marginFromRight = parseInt(left) + clientWidth;\n        const windowScrollHeight = wd.innerHeight + wd.scrollY;\n        const windowScrollWidth = wd.innerWidth + wd.scrollX;\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n        if (marginFromRight >= windowScrollWidth) {\n            const marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n        return { top, left };\n    }\n    applyOffset(top, left) {\n        if (!this.offset) {\n            return { top, left };\n        }\n        const offset = this.offset.split(' ');\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n        return { top, left };\n    }\n    ngOnInit() {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (this.appendToBody) {\n            // append menu element to the body\n            dc.body.appendChild(this.element.nativeElement);\n        }\n    }\n    updateOnChange(dynamic = true) {\n        const element = this.getMenuElement();\n        const position = this.calcPositionOffset(this.position);\n        if (position) {\n            this.renderer.setStyle(element, 'top', position.top.toString());\n            this.renderer.setStyle(element, 'left', position.left.toString());\n        }\n        // select first item unless user disabled this option\n        if (this.focusFirstElement &&\n            this.items.first &&\n            !this.dropdownState.dropdownState.selectedItem) {\n            this.dropdownState.dropdownState.select(this.items.first, false);\n        }\n    }\n    ngOnDestroy() {\n        const elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n        if (this.listeners.handleKeypress) {\n            this.listeners.handleKeypress();\n        }\n    }\n}\nNg2DropdownMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownMenu, deps: [{ token: DropdownStateService }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNg2DropdownMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2DropdownMenu, selector: \"ng2-dropdown-menu\", inputs: { width: \"width\", focusFirstElement: \"focusFirstElement\", offset: \"offset\", appendToBody: \"appendToBody\", zIndex: \"zIndex\" }, queries: [{ propertyName: \"items\", predicate: Ng2MenuItem, descendants: true }], ngImport: i0, template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `, isInline: true, styles: [\":host{display:block}.ng2-dropdown-menu{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6{width:320px}.ng2-dropdown-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}:host ::ng-deep .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n            state('hidden', style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })),\n            transition('hidden => visible', [\n                animate('250ms ease-in', style({ opacity: 1, height: '*', width: '*' }))\n            ]),\n            transition('visible => hidden', [\n                animate('350ms ease-out', style({ opacity: 0, width: 0, height: 0 }))\n            ])\n        ]),\n        trigger('opacity', [\n            transition('hidden => visible', [\n                animate('450ms ease-in', keyframes([\n                    style({ opacity: 0, offset: 0 }),\n                    style({ opacity: 1, offset: 1 })\n                ]))\n            ]),\n            transition('visible => hidden', [\n                animate('250ms ease-out', keyframes([\n                    style({ opacity: 1, offset: 0 }),\n                    style({ opacity: 0.5, offset: 0.3 }),\n                    style({ opacity: 0, offset: 1 })\n                ]))\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng2-dropdown-menu', template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `, animations: [\n                        trigger('fade', [\n                            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n                            state('hidden', style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })),\n                            transition('hidden => visible', [\n                                animate('250ms ease-in', style({ opacity: 1, height: '*', width: '*' }))\n                            ]),\n                            transition('visible => hidden', [\n                                animate('350ms ease-out', style({ opacity: 0, width: 0, height: 0 }))\n                            ])\n                        ]),\n                        trigger('opacity', [\n                            transition('hidden => visible', [\n                                animate('450ms ease-in', keyframes([\n                                    style({ opacity: 0, offset: 0 }),\n                                    style({ opacity: 1, offset: 1 })\n                                ]))\n                            ]),\n                            transition('visible => hidden', [\n                                animate('250ms ease-out', keyframes([\n                                    style({ opacity: 1, offset: 0 }),\n                                    style({ opacity: 0.5, offset: 0.3 }),\n                                    style({ opacity: 0, offset: 1 })\n                                ]))\n                            ])\n                        ])\n                    ], styles: [\":host{display:block}.ng2-dropdown-menu{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6{width:320px}.ng2-dropdown-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}:host ::ng-deep .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: DropdownStateService }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { width: [{\n                type: Input\n            }], focusFirstElement: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], appendToBody: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], items: [{\n                type: ContentChildren,\n                args: [Ng2MenuItem, { descendants: true }]\n            }] } });\n\nclass Ng2Dropdown {\n    constructor(state) {\n        this.state = state;\n        this.dynamicUpdate = true;\n        // outputs\n        this.onItemClicked = new EventEmitter();\n        this.onItemSelected = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n    }\n    ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n            if (item.preventClose) {\n                return;\n            }\n            this.hide.call(this);\n        });\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n        this.state.dropdownState.onItemSelected.subscribe(item => {\n            this.onItemSelected.emit(item);\n        });\n        this.state.dropdownState.onItemDestroyed.subscribe((item) => {\n            let newSelectedItem;\n            const items = this.menu.items.toArray();\n            if (item !== this.state.dropdownState.selectedItem) {\n                return;\n            }\n            if (this.menu.focusFirstElement) {\n                newSelectedItem =\n                    item === items[0] && items.length > 1\n                        ? items[1]\n                        : items[0];\n            }\n            this.state.dropdownState.select(newSelectedItem);\n        });\n    }\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    toggleMenu(position = this.button.getPosition()) {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    hide() {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    show(position = this.button.getPosition()) {\n        this.menu.show(position, this.dynamicUpdate);\n        this.onShow.emit(this);\n    }\n    /**\n     * @name scrollListener\n     */\n    scrollListener() {\n        if (this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition(), true);\n        }\n    }\n}\nNg2Dropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2Dropdown, deps: [{ token: DropdownStateService }], target: i0.ɵɵFactoryTarget.Component });\nNg2Dropdown.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2Dropdown, selector: \"ng2-dropdown\", inputs: { dynamicUpdate: \"dynamicUpdate\" }, outputs: { onItemClicked: \"onItemClicked\", onItemSelected: \"onItemSelected\", onShow: \"onShow\", onHide: \"onHide\" }, host: { listeners: { \"window:scroll\": \"scrollListener()\" } }, providers: [DropdownStateService], queries: [{ propertyName: \"button\", first: true, predicate: Ng2DropdownButton, descendants: true, static: true }, { propertyName: \"menu\", first: true, predicate: Ng2DropdownMenu, descendants: true, static: true }], ngImport: i0, template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2Dropdown, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ng2-dropdown',\n                    template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `,\n                    providers: [DropdownStateService]\n                }]\n        }], ctorParameters: function () { return [{ type: DropdownStateService }]; }, propDecorators: { button: [{\n                type: ContentChild,\n                args: [Ng2DropdownButton, { static: true }]\n            }], menu: [{\n                type: ContentChild,\n                args: [Ng2DropdownMenu, { static: true }]\n            }], dynamicUpdate: [{\n                type: Input\n            }], onItemClicked: [{\n                type: Output\n            }], onItemSelected: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], scrollListener: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }] } });\n\nclass Ng2DropdownModule {\n}\nNg2DropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNg2DropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, declarations: [Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu], imports: [CommonModule], exports: [Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown] });\nNg2DropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        Ng2MenuItem,\n                        Ng2DropdownButton,\n                        Ng2DropdownMenu,\n                        Ng2Dropdown\n                    ],\n                    declarations: [\n                        Ng2Dropdown,\n                        Ng2MenuItem,\n                        Ng2DropdownButton,\n                        Ng2DropdownMenu,\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DropdownStateService, Ng2Dropdown, Ng2DropdownButton, Ng2DropdownMenu, Ng2DropdownModule, Ng2MenuItem };\n","import * as i0 from '@angular/core';\nimport { Pipe, Injectable, Directive, Input, EventEmitter, Component, Output, ViewChild, HostBinding, HostListener, TemplateRef, ContentChildren, forwardRef, ContentChild, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from 'ng2-material-dropdown';\nimport { Ng2Dropdown, Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { filter as filter$1, map, first as first$1, debounceTime as debounceTime$1 } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { first, distinctUntilChanged, debounceTime, filter } from 'rxjs/operators';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\nclass HighlightPipe {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    transform(value, arg) {\n        if (!arg.trim()) {\n            return value;\n        }\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        }\n        catch (e) {\n            return value;\n        }\n    }\n}\nHighlightPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HighlightPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nHighlightPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HighlightPipe, name: \"highlight\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HighlightPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'highlight'\n                }]\n        }] });\n\n/*\n** constants and default values for <tag-input>\n */\nconst PLACEHOLDER = '+ Tag';\nconst SECONDARY_PLACEHOLDER = 'Enter a new tag';\nconst KEYDOWN = 'keydown';\nconst KEYUP = 'keyup';\nconst FOCUS = 'focus';\nconst MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\nconst ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\nconst KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    46: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\nconst DRAG_AND_DROP_KEY = 'Text';\nconst NEXT = 'NEXT';\nconst PREV = 'PREV';\n\nclass DragProvider {\n    constructor() {\n        this.state = {\n            dragging: false,\n            dropping: false,\n            index: undefined\n        };\n    }\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    setDraggedItem(event, tag) {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    getDraggedItem(event) {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data);\n            }\n            catch {\n                return;\n            }\n        }\n    }\n    /**\n     * @name setSender\n     * @param sender\n     */\n    setSender(sender) {\n        this.sender = sender;\n    }\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    setReceiver(receiver) {\n        this.receiver = receiver;\n    }\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    onTagDropped(tag, indexDragged, indexDropped) {\n        this.onDragEnd();\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n    /**\n     * @name setState\n     * @param state\n     */\n    setState(state) {\n        this.state = { ...this.state, ...state };\n    }\n    /**\n     * @name getState\n     * @param key\n     */\n    getState(key) {\n        return key ? this.state[key] : this.state;\n    }\n    /**\n     * @name onDragEnd\n     */\n    onDragEnd() {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\nDragProvider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DragProvider, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDragProvider.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DragProvider });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DragProvider, decorators: [{\n            type: Injectable\n        }] });\n\nconst defaults = {\n    tagInput: {\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: {\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(value, target) {\n    const targetValue = target[this.displayBy].toString();\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n\nclass OptionsProvider {\n    setOptions(options) {\n        OptionsProvider.defaults.tagInput = { ...defaults.tagInput, ...options.tagInput };\n        OptionsProvider.defaults.dropdown = { ...defaults.dropdown, ...options.dropdown };\n    }\n}\nOptionsProvider.defaults = defaults;\n\nfunction isObject(obj) {\n    return obj === Object(obj);\n}\nclass TagInputAccessor {\n    constructor() {\n        this._items = [];\n        /**\n         * @name displayBy\n         */\n        this.displayBy = OptionsProvider.defaults.tagInput.displayBy;\n        /**\n         * @name identifyBy\n         */\n        this.identifyBy = OptionsProvider.defaults.tagInput.identifyBy;\n    }\n    get items() {\n        return this._items;\n    }\n    set items(items) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n    onTouched() {\n        this._onTouchedCallback();\n    }\n    writeValue(items) {\n        this._items = items || [];\n    }\n    registerOnChange(fn) {\n        this._onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouchedCallback = fn;\n    }\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    getItemValue(item, fromDropdown = false) {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    getItemDisplay(item, fromDropdown = false) {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    getItemsWithout(index) {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\nTagInputAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputAccessor, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nTagInputAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputAccessor, inputs: { displayBy: \"displayBy\", identifyBy: \"identifyBy\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputAccessor, decorators: [{\n            type: Directive\n        }], propDecorators: { displayBy: [{\n                type: Input\n            }], identifyBy: [{\n                type: Input\n            }] } });\n\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nfunction listen(listenerType, action, condition = true) {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n\nclass TagInputForm {\n    constructor() {\n        /**\n         * @name onSubmit\n         */\n        this.onSubmit = new EventEmitter();\n        /**\n         * @name onBlur\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @name onFocus\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * @name onKeyup\n         */\n        this.onKeyup = new EventEmitter();\n        /**\n         * @name onKeydown\n         */\n        this.onKeydown = new EventEmitter();\n        /**\n         * @name inputTextChange\n         */\n        this.inputTextChange = new EventEmitter();\n        /**\n         * @name validators\n         */\n        this.validators = [];\n        /**\n         * @name asyncValidators\n         * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n         */\n        this.asyncValidators = [];\n        /**\n         * @name tabindex\n         * @desc pass through the specified tabindex to the input\n         */\n        this.tabindex = '';\n        /**\n         * @name disabled\n         */\n        this.disabled = false;\n        this.item = new FormControl({ value: '', disabled: this.disabled });\n    }\n    /**\n     * @name inputText\n     */\n    get inputText() {\n        return this.item.value;\n    }\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    set inputText(text) {\n        this.item.setValue(text);\n        this.inputTextChange.emit(text);\n    }\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            }\n            else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n    /**\n     * @name value\n     */\n    get value() {\n        return this.form.get('item');\n    }\n    /**\n     * @name isInputFocused\n     */\n    isInputFocused() {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    getErrorMessages(messages) {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n    /**\n     * @name hasErrors\n     */\n    hasErrors() {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n    /**\n     * @name focus\n     */\n    focus() {\n        this.input.nativeElement.focus();\n    }\n    /**\n     * @name blur\n     */\n    blur() {\n        this.input.nativeElement.blur();\n    }\n    /**\n     * @name getElementPosition\n     */\n    getElementPosition() {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    destroy() {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        }\n        else {\n            return this.onKeydown.emit($event);\n        }\n    }\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n    /**\n     * @name submit\n     */\n    submit($event) {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\nTagInputForm.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputForm, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagInputForm.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputForm, selector: \"tag-input-form\", inputs: { placeholder: \"placeholder\", validators: \"validators\", asyncValidators: \"asyncValidators\", inputId: \"inputId\", inputClass: \"inputClass\", tabindex: \"tabindex\", disabled: \"disabled\", inputText: \"inputText\" }, outputs: { onSubmit: \"onSubmit\", onBlur: \"onBlur\", onFocus: \"onFocus\", onKeyup: \"onKeyup\", onKeydown: \"onKeydown\", inputTextChange: \"inputTextChange\" }, viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<!-- form -->\\n<form (ngSubmit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\n    <input #input\\n\\n           type=\\\"text\\\"\\n           class=\\\"ng2-tag-input__text-input\\\"\\n           autocomplete=\\\"off\\\"\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\n           minlength=\\\"1\\\"\\n           formControlName=\\\"item\\\"\\n\\n           [ngClass]=\\\"inputClass\\\"\\n           [attr.id]=\\\"inputId\\\"\\n           [attr.placeholder]=\\\"placeholder\\\"\\n           [attr.aria-label]=\\\"placeholder\\\"\\n           [attr.tabindex]=\\\"tabindex\\\"\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\n\\n           (focus)=\\\"onFocus.emit($event)\\\"\\n           (blur)=\\\"onBlur.emit($event)\\\"\\n           (keydown)=\\\"onKeyDown($event)\\\"\\n           (keyup)=\\\"onKeyUp($event)\\\"\\n    />\\n</form>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}\\n\"], directives: [{ type: i1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i1.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputForm, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag-input-form', template: \"<!-- form -->\\n<form (ngSubmit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\n    <input #input\\n\\n           type=\\\"text\\\"\\n           class=\\\"ng2-tag-input__text-input\\\"\\n           autocomplete=\\\"off\\\"\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\n           minlength=\\\"1\\\"\\n           formControlName=\\\"item\\\"\\n\\n           [ngClass]=\\\"inputClass\\\"\\n           [attr.id]=\\\"inputId\\\"\\n           [attr.placeholder]=\\\"placeholder\\\"\\n           [attr.aria-label]=\\\"placeholder\\\"\\n           [attr.tabindex]=\\\"tabindex\\\"\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\n\\n           (focus)=\\\"onFocus.emit($event)\\\"\\n           (blur)=\\\"onBlur.emit($event)\\\"\\n           (keydown)=\\\"onKeyDown($event)\\\"\\n           (keyup)=\\\"onKeyUp($event)\\\"\\n    />\\n</form>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}\\n\"] }]\n        }], propDecorators: { onSubmit: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onKeyup: [{\n                type: Output\n            }], onKeydown: [{\n                type: Output\n            }], inputTextChange: [{\n                type: Output\n            }], placeholder: [{\n                type: Input\n            }], validators: [{\n                type: Input\n            }], asyncValidators: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], input: [{\n                type: ViewChild,\n                args: ['input']\n            }], inputText: [{\n                type: Input\n            }] } });\n\nclass TagRipple {\n    constructor() {\n        this.state = 'none';\n    }\n}\nTagRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagRipple, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagRipple.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagRipple, selector: \"tag-ripple\", inputs: { state: \"state\" }, ngImport: i0, template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `, isInline: true, styles: [\":host{width:100%;height:100%;left:0;overflow:hidden;position:absolute}.tag-ripple{background:rgba(0,0,0,.1);top:50%;left:50%;height:100%;transform:translate(-50%,-50%);position:absolute}\\n\"], animations: [\n        trigger('ink', [\n            state('none', style({ width: 0, opacity: 0 })),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({ opacity: 1, offset: 0, width: '30%', borderRadius: '100%' }),\n                    style({ opacity: 1, offset: 0.5, width: '50%' }),\n                    style({ opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px' })\n                ]))\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagRipple, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tag-ripple',\n                    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n                    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n                    animations: [\n                        trigger('ink', [\n                            state('none', style({ width: 0, opacity: 0 })),\n                            transition('none => clicked', [\n                                animate(300, keyframes([\n                                    style({ opacity: 1, offset: 0, width: '30%', borderRadius: '100%' }),\n                                    style({ opacity: 1, offset: 0.5, width: '50%' }),\n                                    style({ opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px' })\n                                ]))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\nclass DeleteIconComponent {\n}\nDeleteIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DeleteIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDeleteIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DeleteIconComponent, selector: \"delete-icon\", ngImport: i0, template: \"<span>\\n    <svg\\n        height=\\\"16px\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        width=\\\"16px\\\"\\n    >\\n        <path\\n            d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\n            fill=\\\"#121313\\\"\\n        />\\n    </svg>\\n</span>\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:focus) path,:host-context(tag:active) path{fill:#fff}:host-context(.dark tag:focus) path,:host-context(.dark tag:active) path{fill:#000}:host-context(.minimal tag:focus) path,:host-context(.minimal tag:active) path{fill:#000}:host-context(.bootstrap tag:focus) path,:host-context(.bootstrap tag:active) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DeleteIconComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'delete-icon', template: \"<span>\\n    <svg\\n        height=\\\"16px\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        width=\\\"16px\\\"\\n    >\\n        <path\\n            d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\n            fill=\\\"#121313\\\"\\n        />\\n    </svg>\\n</span>\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:focus) path,:host-context(tag:active) path{fill:#fff}:host-context(.dark tag:focus) path,:host-context(.dark tag:active) path{fill:#000}:host-context(.minimal tag:focus) path,:host-context(.minimal tag:active) path{fill:#000}:host-context(.bootstrap tag:focus) path,:host-context(.bootstrap tag:active) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}\\n\"] }]\n        }] });\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\nclass TagComponent {\n    constructor(element, renderer, cdRef) {\n        this.element = element;\n        this.renderer = renderer;\n        this.cdRef = cdRef;\n        /**\n         * @name disabled\n         */\n        this.disabled = false;\n        /**\n         * @name onSelect\n         */\n        this.onSelect = new EventEmitter();\n        /**\n         * @name onRemove\n         */\n        this.onRemove = new EventEmitter();\n        /**\n         * @name onBlur\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @name onKeyDown\n         */\n        this.onKeyDown = new EventEmitter();\n        /**\n         * @name onTagEdited\n         */\n        this.onTagEdited = new EventEmitter();\n        /**\n         * @name editing\n         */\n        this.editing = false;\n        /**\n         * @name rippleState\n         */\n        this.rippleState = 'none';\n    }\n    /**\n     * @name readonly {boolean}\n     */\n    get readonly() {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n    /**\n     * @name select\n     */\n    select($event) {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n        if ($event) {\n            $event.stopPropagation();\n        }\n        this.focus();\n        this.onSelect.emit(this.model);\n    }\n    /**\n     * @name remove\n     */\n    remove($event) {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n    /**\n     * @name focus\n     */\n    focus() {\n        this.element.nativeElement.focus();\n    }\n    move() {\n        this.moving = true;\n    }\n    /**\n     * @name keydown\n     * @param event\n     */\n    keydown(event) {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        }\n        else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n    /**\n     * @name blink\n     */\n    blink() {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n    /**\n     * @name toggleEditMode\n     */\n    toggleEditMode() {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    onBlurred(event) {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n        this.disableEditMode();\n        const value = event.target.innerText;\n        const result = typeof this.model === 'string'\n            ? value\n            : { ...this.model, [this.displayBy]: value };\n        this.onBlur.emit(result);\n    }\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    getDisplayValue(item) {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    get isRippleVisible() {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    disableEditMode($event) {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n        this.editing = false;\n        classList.remove('tag--editing');\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n    /**\n     * @name isDeleteIconVisible\n     */\n    isDeleteIconVisible() {\n        return (!this.readonly && !this.disabled && this.removable && !this.editing);\n    }\n    /**\n     * @name getContentEditableText\n     */\n    getContentEditableText() {\n        const input = this.getContentEditable();\n        return input ? input.innerText.trim() : '';\n    }\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    setContentEditableText(model) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n        input.innerText = value;\n    }\n    /**\n     * @name\n     */\n    activateEditMode() {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n        this.editing = true;\n    }\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    storeNewValue(input) {\n        const exists = (tag) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n        const model = typeof this.model === 'string'\n            ? input\n            : {\n                index: this.index,\n                [this.identifyBy]: hasId()\n                    ? this.model[this.identifyBy]\n                    : input,\n                [this.displayBy]: input\n            };\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        }\n        else {\n            this.setContentEditableText(this.model);\n        }\n    }\n    /**\n     * @name getContentEditable\n     */\n    getContentEditable() {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\nTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagComponent, selector: \"tag\", inputs: { model: \"model\", removable: \"removable\", editable: \"editable\", template: \"template\", displayBy: \"displayBy\", identifyBy: \"identifyBy\", index: \"index\", hasRipple: \"hasRipple\", disabled: \"disabled\", canAddTag: \"canAddTag\" }, outputs: { onSelect: \"onSelect\", onRemove: \"onRemove\", onBlur: \"onBlur\", onKeyDown: \"onKeyDown\", onTagEdited: \"onTagEdited\" }, host: { listeners: { \"keydown\": \"keydown($event)\" }, properties: { \"class.moving\": \"this.moving\" } }, viewQueries: [{ propertyName: \"ripple\", first: true, predicate: TagRipple, descendants: true }], ngImport: i0, template: \"<div (click)=\\\"select($event)\\\"\\n     (dblclick)=\\\"toggleEditMode()\\\"\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\n     (mouseup)=\\\"rippleState='none'\\\"\\n     [ngSwitch]=\\\"!!template\\\"\\n     [class.disabled]=\\\"disabled\\\"\\n     [attr.tabindex]=\\\"-1\\\"\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\n\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\n        <!-- CUSTOM TEMPLATE -->\\n        <ng-template\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\n            [ngTemplateOutlet]=\\\"template\\\">\\n        </ng-template>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\n        <!-- TAG NAME -->\\n        <div [attr.contenteditable]=\\\"editing\\\"\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\n             class=\\\"tag__text inline\\\"\\n             spellcheck=\\\"false\\\"\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\n             (blur)=\\\"onBlurred($event)\\\">\\n            {{ getDisplayValue(model) }}\\n        </div>\\n\\n        <!-- 'X' BUTTON -->\\n        <delete-icon\\n            aria-label=\\\"Remove tag\\\"\\n            role=\\\"button\\\"\\n            (click)=\\\"remove($event)\\\"\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\n        </delete-icon>\\n    </div>\\n</div>\\n\\n<tag-ripple [state]=\\\"rippleState\\\"\\n            [attr.tabindex]=\\\"-1\\\"\\n            *ngIf=\\\"isRippleVisible\\\">\\n</tag-ripple>\\n\", styles: [\":host,:host>div,:host>div:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:blink .3s normal forwards ease-in-out;animation:blink .3s normal forwards ease-in-out}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{flex-direction:row;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\\n\"], components: [{ type: DeleteIconComponent, selector: \"delete-icon\" }, { type: TagRipple, selector: \"tag-ripple\", inputs: [\"state\"] }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag', template: \"<div (click)=\\\"select($event)\\\"\\n     (dblclick)=\\\"toggleEditMode()\\\"\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\n     (mouseup)=\\\"rippleState='none'\\\"\\n     [ngSwitch]=\\\"!!template\\\"\\n     [class.disabled]=\\\"disabled\\\"\\n     [attr.tabindex]=\\\"-1\\\"\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\n\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\n        <!-- CUSTOM TEMPLATE -->\\n        <ng-template\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\n            [ngTemplateOutlet]=\\\"template\\\">\\n        </ng-template>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\n        <!-- TAG NAME -->\\n        <div [attr.contenteditable]=\\\"editing\\\"\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\n             class=\\\"tag__text inline\\\"\\n             spellcheck=\\\"false\\\"\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\n             (blur)=\\\"onBlurred($event)\\\">\\n            {{ getDisplayValue(model) }}\\n        </div>\\n\\n        <!-- 'X' BUTTON -->\\n        <delete-icon\\n            aria-label=\\\"Remove tag\\\"\\n            role=\\\"button\\\"\\n            (click)=\\\"remove($event)\\\"\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\n        </delete-icon>\\n    </div>\\n</div>\\n\\n<tag-ripple [state]=\\\"rippleState\\\"\\n            [attr.tabindex]=\\\"-1\\\"\\n            *ngIf=\\\"isRippleVisible\\\">\\n</tag-ripple>\\n\", styles: [\":host,:host>div,:host>div:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:blink .3s normal forwards ease-in-out;animation:blink .3s normal forwards ease-in-out}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{flex-direction:row;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], displayBy: [{\n                type: Input\n            }], identifyBy: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], hasRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], canAddTag: [{\n                type: Input\n            }], onSelect: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onTagEdited: [{\n                type: Output\n            }], moving: [{\n                type: HostBinding,\n                args: ['class.moving']\n            }], ripple: [{\n                type: ViewChild,\n                args: [TagRipple]\n            }], keydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n/**\n * @name animations\n */\nconst animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({ opacity: 0, offset: 0, transform: 'translate(0px, 20px)' }),\n                style({ opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)' }),\n                style({ opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)' }),\n                style({ opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)' }),\n                style({ opacity: 1, offset: 1, transform: 'translate(0px, 0px)' })\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({ opacity: 1, transform: 'translateX(0)', offset: 0 }),\n                style({ opacity: 1, transform: 'translateX(-15px)', offset: 0.7 }),\n                style({ opacity: 0, transform: 'translateX(100%)', offset: 1.0 })\n            ]))\n        ])\n    ])\n];\n\nclass TagInputDropdown {\n    constructor(injector) {\n        this.injector = injector;\n        /**\n         * @name offset\n         */\n        this.offset = defaults.dropdown.offset;\n        /**\n         * @name focusFirstElement\n         */\n        this.focusFirstElement = defaults.dropdown.focusFirstElement;\n        /**\n         * - show autocomplete dropdown if the value of input is empty\n         * @name showDropdownIfEmpty\n         */\n        this.showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n        /**\n         * - desc minimum text length in order to display the autocomplete dropdown\n         * @name minimumTextLength\n         */\n        this.minimumTextLength = defaults.dropdown.minimumTextLength;\n        /**\n         * - number of items to display in the autocomplete dropdown\n         * @name limitItemsTo\n         */\n        this.limitItemsTo = defaults.dropdown.limitItemsTo;\n        /**\n         * @name displayBy\n         */\n        this.displayBy = defaults.dropdown.displayBy;\n        /**\n         * @name identifyBy\n         */\n        this.identifyBy = defaults.dropdown.identifyBy;\n        /**\n         * @description a function a developer can use to implement custom matching for the autocomplete\n         * @name matchingFn\n         */\n        this.matchingFn = defaults.dropdown.matchingFn;\n        /**\n         * @name appendToBody\n         */\n        this.appendToBody = defaults.dropdown.appendToBody;\n        /**\n         * @name keepOpen\n         * @description option to leave dropdown open when adding a new item\n         */\n        this.keepOpen = defaults.dropdown.keepOpen;\n        /**\n         * @name dynamicUpdate\n         */\n        this.dynamicUpdate = defaults.dropdown.dynamicUpdate;\n        /**\n         * @name zIndex\n         */\n        this.zIndex = defaults.dropdown.zIndex;\n        /**\n         * list of items that match the current value of the input (for autocomplete)\n         * @name items\n         */\n        this.items = [];\n        /**\n         * @name tagInput\n         */\n        this.tagInput = this.injector.get(TagInputComponent);\n        /**\n         * @name _autocompleteItems\n         */\n        this._autocompleteItems = [];\n        /**\n         *\n         * @name show\n         */\n        this.show = () => {\n            const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n            const value = this.getFormValue();\n            const hasMinimumText = value.trim().length >= this.minimumTextLength;\n            const position = this.calculatePosition();\n            const items = this.getMatchingItems(value);\n            const hasItems = items.length > 0;\n            const isHidden = this.isVisible === false;\n            const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n            const isDisabled = this.tagInput.disable;\n            const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n            const shouldHide = this.isVisible && !hasItems;\n            if (this.autocompleteObservable && hasMinimumText) {\n                return this.getItemsFromObservable(value);\n            }\n            if ((!this.showDropdownIfEmpty && !value) ||\n                maxItemsReached ||\n                isDisabled) {\n                return this.dropdown.hide();\n            }\n            this.setItems(items);\n            if (shouldShow) {\n                this.dropdown.show(position);\n            }\n            else if (shouldHide) {\n                this.hide();\n            }\n        };\n        /**\n         * @name requestAdding\n         * @param item {Ng2MenuItem}\n         */\n        this.requestAdding = async (item) => {\n            const tag = this.createTagModel(item);\n            await this.tagInput.onAddingRequested(true, tag).catch(() => { });\n        };\n        /**\n         * @name resetItems\n         */\n        this.resetItems = () => {\n            this.items = [];\n        };\n        /**\n         * @name getItemsFromObservable\n         * @param text\n         */\n        this.getItemsFromObservable = (text) => {\n            this.setLoadingState(true);\n            const subscribeFn = (data) => {\n                // hide loading animation\n                this.setLoadingState(false)\n                    // add items\n                    .populateItems(data);\n                this.setItems(this.getMatchingItems(text));\n                if (this.items.length) {\n                    this.dropdown.show(this.calculatePosition());\n                }\n                else {\n                    this.dropdown.hide();\n                }\n            };\n            this.autocompleteObservable(text)\n                .pipe(first())\n                .subscribe(subscribeFn, () => this.setLoadingState(false));\n        };\n    }\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    set autocompleteItems(items) {\n        this._autocompleteItems = items;\n    }\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    get autocompleteItems() {\n        const items = this._autocompleteItems;\n        if (!items) {\n            return [];\n        }\n        return items.map((item) => {\n            return typeof item === 'string'\n                ? {\n                    [this.displayBy]: item,\n                    [this.identifyBy]: item\n                }\n                : item;\n        });\n    }\n    /**\n     * @name ngAfterviewInit\n     */\n    ngAfterViewInit() {\n        this.onItemClicked().subscribe((item) => {\n            this.requestAdding(item);\n        });\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n        const DEBOUNCE_TIME = 200;\n        const KEEP_OPEN = this.keepOpen;\n        this.tagInput.onTextChange\n            .asObservable()\n            .pipe(distinctUntilChanged(), debounceTime(DEBOUNCE_TIME), filter((value) => {\n            if (KEEP_OPEN === false) {\n                return value.length > 0;\n            }\n            return true;\n        }))\n            .subscribe(this.show);\n    }\n    /**\n     * @name updatePosition\n     */\n    updatePosition() {\n        const position = this.tagInput.inputForm.getElementPosition();\n        this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n    }\n    /**\n     * @name isVisible\n     */\n    get isVisible() {\n        return this.dropdown.menu.dropdownState.menuState.isVisible;\n    }\n    /**\n     * @name onHide\n     */\n    onHide() {\n        return this.dropdown.onHide;\n    }\n    /**\n     * @name onItemClicked\n     */\n    onItemClicked() {\n        return this.dropdown.onItemClicked;\n    }\n    /**\n     * @name selectedItem\n     */\n    get selectedItem() {\n        return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n    }\n    /**\n     * @name state\n     */\n    get state() {\n        return this.dropdown.menu.dropdownState;\n    }\n    /**\n     * @name hide\n     */\n    hide() {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n    /**\n     * @name scrollListener\n     */\n    scrollListener() {\n        if (!this.isVisible || !this.dynamicUpdate) {\n            return;\n        }\n        this.updatePosition();\n    }\n    /**\n     * @name onWindowBlur\n     */\n    onWindowBlur() {\n        this.dropdown.hide();\n    }\n    /**\n     * @name getFormValue\n     */\n    getFormValue() {\n        const formValue = this.tagInput.formValue;\n        return formValue ? formValue.toString().trim() : '';\n    }\n    /**\n     * @name calculatePosition\n     */\n    calculatePosition() {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n    /**\n     * @name createTagModel\n     * @param item\n     */\n    createTagModel(item) {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n    /**\n     *\n     * @param value {string}\n     */\n    getMatchingItems(value) {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n        const dupesAllowed = this.tagInput.allowDupes;\n        return this.autocompleteItems.filter((item) => {\n            const hasValue = dupesAllowed\n                ? false\n                : this.tagInput.tags.some(tag => {\n                    const identifyBy = this.tagInput.identifyBy;\n                    const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n                    return model === item[this.identifyBy];\n                });\n            return this.matchingFn(value, item) && hasValue === false;\n        });\n    }\n    /**\n     * @name setItems\n     */\n    setItems(items) {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n    /**\n     * @name populateItems\n     * @param data\n     */\n    populateItems(data) {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string'\n                ? {\n                    [this.displayBy]: item,\n                    [this.identifyBy]: item\n                }\n                : item;\n        });\n        return this;\n    }\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n    setLoadingState(state) {\n        this.tagInput.isLoading = state;\n        return this;\n    }\n}\nTagInputDropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputDropdown, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nTagInputDropdown.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputDropdown, selector: \"tag-input-dropdown\", inputs: { offset: \"offset\", focusFirstElement: \"focusFirstElement\", showDropdownIfEmpty: \"showDropdownIfEmpty\", autocompleteObservable: \"autocompleteObservable\", minimumTextLength: \"minimumTextLength\", limitItemsTo: \"limitItemsTo\", displayBy: \"displayBy\", identifyBy: \"identifyBy\", matchingFn: \"matchingFn\", appendToBody: \"appendToBody\", keepOpen: \"keepOpen\", dynamicUpdate: \"dynamicUpdate\", zIndex: \"zIndex\", autocompleteItems: \"autocompleteItems\" }, host: { listeners: { \"window:scroll\": \"scrollListener()\", \"window:blur\": \"onWindowBlur()\" } }, queries: [{ propertyName: \"templates\", predicate: TemplateRef }], viewQueries: [{ propertyName: \"dropdown\", first: true, predicate: Ng2Dropdown, descendants: true }], ngImport: i0, template: \"<ng2-dropdown [dynamicUpdate]=\\\"dynamicUpdate\\\">\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\"\\n                       [zIndex]=\\\"zIndex\\\"\\n                       [appendToBody]=\\\"appendToBody\\\"\\n                       [offset]=\\\"offset\\\">\\n        <ng2-menu-item *ngFor=\\\"let item of items; let index = index; let last = last\\\"\\n                       [value]=\\\"item\\\"\\n                       [ngSwitch]=\\\"!!templates.length\\\">\\n\\n            <span *ngSwitchCase=\\\"false\\\"\\n                  [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\n            </span>\\n\\n            <ng-template *ngSwitchDefault\\n                      [ngTemplateOutlet]=\\\"templates.first\\\"\\n                      [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\n            </ng-template>\\n        </ng2-menu-item>\\n    </ng2-dropdown-menu>\\n</ng2-dropdown>\\n\", components: [{ type: i1$1.Ng2Dropdown, selector: \"ng2-dropdown\", inputs: [\"dynamicUpdate\"], outputs: [\"onItemClicked\", \"onItemSelected\", \"onShow\", \"onHide\"] }, { type: i1$1.Ng2DropdownMenu, selector: \"ng2-dropdown-menu\", inputs: [\"width\", \"focusFirstElement\", \"offset\", \"appendToBody\", \"zIndex\"] }, { type: i1$1.Ng2MenuItem, selector: \"ng2-menu-item\", inputs: [\"preventClose\", \"value\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"highlight\": HighlightPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputDropdown, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag-input-dropdown', template: \"<ng2-dropdown [dynamicUpdate]=\\\"dynamicUpdate\\\">\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\"\\n                       [zIndex]=\\\"zIndex\\\"\\n                       [appendToBody]=\\\"appendToBody\\\"\\n                       [offset]=\\\"offset\\\">\\n        <ng2-menu-item *ngFor=\\\"let item of items; let index = index; let last = last\\\"\\n                       [value]=\\\"item\\\"\\n                       [ngSwitch]=\\\"!!templates.length\\\">\\n\\n            <span *ngSwitchCase=\\\"false\\\"\\n                  [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\n            </span>\\n\\n            <ng-template *ngSwitchDefault\\n                      [ngTemplateOutlet]=\\\"templates.first\\\"\\n                      [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\n            </ng-template>\\n        </ng2-menu-item>\\n    </ng2-dropdown-menu>\\n</ng2-dropdown>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; }, propDecorators: { dropdown: [{\n                type: ViewChild,\n                args: [Ng2Dropdown]\n            }], templates: [{\n                type: ContentChildren,\n                args: [TemplateRef]\n            }], offset: [{\n                type: Input\n            }], focusFirstElement: [{\n                type: Input\n            }], showDropdownIfEmpty: [{\n                type: Input\n            }], autocompleteObservable: [{\n                type: Input\n            }], minimumTextLength: [{\n                type: Input\n            }], limitItemsTo: [{\n                type: Input\n            }], displayBy: [{\n                type: Input\n            }], identifyBy: [{\n                type: Input\n            }], matchingFn: [{\n                type: Input\n            }], appendToBody: [{\n                type: Input\n            }], keepOpen: [{\n                type: Input\n            }], dynamicUpdate: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], autocompleteItems: [{\n                type: Input\n            }], scrollListener: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }], onWindowBlur: [{\n                type: HostListener,\n                args: ['window:blur']\n            }] } });\n\n// angular\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nclass TagInputComponent extends TagInputAccessor {\n    constructor(renderer, dragProvider) {\n        super();\n        this.renderer = renderer;\n        this.dragProvider = dragProvider;\n        /**\n         * @name separatorKeys\n         * @desc keyboard keys with which a user can separate items\n         */\n        this.separatorKeys = defaults.tagInput.separatorKeys;\n        /**\n         * @name separatorKeyCodes\n         * @desc keyboard key codes with which a user can separate items\n         */\n        this.separatorKeyCodes = defaults.tagInput.separatorKeyCodes;\n        /**\n         * @name placeholder\n         * @desc the placeholder of the input text\n         */\n        this.placeholder = defaults.tagInput.placeholder;\n        /**\n         * @name secondaryPlaceholder\n         * @desc placeholder to appear when the input is empty\n         */\n        this.secondaryPlaceholder = defaults.tagInput.secondaryPlaceholder;\n        /**\n         * @name maxItems\n         * @desc maximum number of items that can be added\n         */\n        this.maxItems = defaults.tagInput.maxItems;\n        /**\n         * @name validators\n         * @desc array of Validators that are used to validate the tag before it gets appended to the list\n         */\n        this.validators = defaults.tagInput.validators;\n        /**\n         * @name asyncValidators\n         * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n         */\n        this.asyncValidators = defaults.tagInput.asyncValidators;\n        /**\n        * - if set to true, it will only possible to add items from the autocomplete\n        * @name onlyFromAutocomplete\n        */\n        this.onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n        /**\n         * @name errorMessages\n         */\n        this.errorMessages = defaults.tagInput.errorMessages;\n        /**\n         * @name theme\n         */\n        this.theme = defaults.tagInput.theme;\n        /**\n         * @name onTextChangeDebounce\n         */\n        this.onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n        /**\n         * - custom id assigned to the input\n         * @name id\n         */\n        this.inputId = defaults.tagInput.inputId;\n        /**\n         * - custom class assigned to the input\n         */\n        this.inputClass = defaults.tagInput.inputClass;\n        /**\n         * - option to clear text input when the form is blurred\n         * @name clearOnBlur\n         */\n        this.clearOnBlur = defaults.tagInput.clearOnBlur;\n        /**\n         * - hideForm\n         * @name clearOnBlur\n         */\n        this.hideForm = defaults.tagInput.hideForm;\n        /**\n         * @name addOnBlur\n         */\n        this.addOnBlur = defaults.tagInput.addOnBlur;\n        /**\n         * @name addOnPaste\n         */\n        this.addOnPaste = defaults.tagInput.addOnPaste;\n        /**\n         * - pattern used with the native method split() to separate patterns in the string pasted\n         * @name pasteSplitPattern\n         */\n        this.pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n        /**\n         * @name blinkIfDupe\n         */\n        this.blinkIfDupe = defaults.tagInput.blinkIfDupe;\n        /**\n         * @name removable\n         */\n        this.removable = defaults.tagInput.removable;\n        /**\n         * @name editable\n         */\n        this.editable = defaults.tagInput.editable;\n        /**\n         * @name allowDupes\n         */\n        this.allowDupes = defaults.tagInput.allowDupes;\n        /**\n         * @description if set to true, the newly added tags will be added as strings, and not objects\n         * @name modelAsStrings\n         */\n        this.modelAsStrings = defaults.tagInput.modelAsStrings;\n        /**\n         * @name trimTags\n         */\n        this.trimTags = defaults.tagInput.trimTags;\n        /**\n         * @name ripple\n         */\n        this.ripple = defaults.tagInput.ripple;\n        /**\n         * @name tabindex\n         * @desc pass through the specified tabindex to the input\n         */\n        this.tabindex = defaults.tagInput.tabIndex;\n        /**\n         * @name disable\n         */\n        this.disable = defaults.tagInput.disable;\n        /**\n         * @name dragZone\n         */\n        this.dragZone = defaults.tagInput.dragZone;\n        /**\n         * @name onRemoving\n         */\n        this.onRemoving = defaults.tagInput.onRemoving;\n        /**\n         * @name onAdding\n         */\n        this.onAdding = defaults.tagInput.onAdding;\n        /**\n         * @name animationDuration\n         */\n        this.animationDuration = defaults.tagInput.animationDuration;\n        /**\n         * @name onAdd\n         * @desc event emitted when adding a new item\n         */\n        this.onAdd = new EventEmitter();\n        /**\n         * @name onRemove\n         * @desc event emitted when removing an existing item\n         */\n        this.onRemove = new EventEmitter();\n        /**\n         * @name onSelect\n         * @desc event emitted when selecting an item\n         */\n        this.onSelect = new EventEmitter();\n        /**\n         * @name onFocus\n         * @desc event emitted when the input is focused\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * @name onFocus\n         * @desc event emitted when the input is blurred\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @name onTextChange\n         * @desc event emitted when the input value changes\n         */\n        this.onTextChange = new EventEmitter();\n        /**\n         * - output triggered when text is pasted in the form\n         * @name onPaste\n         */\n        this.onPaste = new EventEmitter();\n        /**\n         * - output triggered when tag entered is not valid\n         * @name onValidationError\n         */\n        this.onValidationError = new EventEmitter();\n        /**\n         * - output triggered when tag is edited\n         * @name onTagEdited\n         */\n        this.onTagEdited = new EventEmitter();\n        /**\n         * @name isLoading\n         */\n        this.isLoading = false;\n        /**\n         * @name listeners\n         * @desc array of events that get fired using @fireEvents\n         */\n        this.listeners = {\n            [KEYDOWN]: [],\n            [KEYUP]: []\n        };\n        /**\n         * @description emitter for the 2-way data binding inputText value\n         * @name inputTextChange\n         */\n        this.inputTextChange = new EventEmitter();\n        /**\n         * @description private variable to bind get/set\n         * @name inputTextValue\n         */\n        this.inputTextValue = '';\n        this.errors = [];\n        /**\n         * @name appendTag\n         * @param tag {TagModel}\n         */\n        this.appendTag = (tag, index = this.items.length) => {\n            const items = this.items;\n            const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n            this.items = [\n                ...items.slice(0, index),\n                model,\n                ...items.slice(index, items.length)\n            ];\n        };\n        /**\n         * @name createTag\n         * @param model\n         */\n        this.createTag = (model) => {\n            const trim = (val, key) => {\n                return typeof val === 'string' ? val.trim() : val[key];\n            };\n            return {\n                ...typeof model !== 'string' ? model : {},\n                [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n                [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n            };\n        };\n        /**\n         *\n         * @param tag\n         * @param isFromAutocomplete\n         */\n        this.isTagValid = (tag, fromAutocomplete = false) => {\n            const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n            const value = this.getItemDisplay(tag).trim();\n            if (selectedItem && !fromAutocomplete || !value) {\n                return false;\n            }\n            const dupe = this.findDupe(tag, fromAutocomplete);\n            // if so, give a visual cue and return false\n            if (!this.allowDupes && dupe && this.blinkIfDupe) {\n                const model = this.tags.find(item => {\n                    return this.getItemValue(item.model) === this.getItemValue(dupe);\n                });\n                if (model) {\n                    model.blink();\n                }\n            }\n            const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n            const assertions = [\n                // 1. there must be no dupe OR dupes are allowed\n                !dupe || this.allowDupes,\n                // 2. check max items has not been reached\n                !this.maxItemsReached,\n                // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n                ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n            ];\n            return assertions.filter(Boolean).length === assertions.length;\n        };\n        /**\n         * @name onPasteCallback\n         * @param data\n         */\n        this.onPasteCallback = async (data) => {\n            const getText = () => {\n                const isIE = Boolean(window.clipboardData);\n                const clipboardData = isIE ? (window.clipboardData) : data.clipboardData;\n                const type = isIE ? 'Text' : 'text/plain';\n                return clipboardData === null ? '' : clipboardData.getData(type) || '';\n            };\n            const text = getText();\n            const requests = text\n                .split(this.pasteSplitPattern)\n                .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n            const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n            Promise.all(requests).then(() => {\n                this.onPaste.emit(text);\n                resetInput();\n            })\n                .catch(resetInput);\n        };\n    }\n    /**\n     * @name inputText\n     */\n    get inputText() {\n        return this.inputTextValue;\n    }\n    /**\n     * @name inputText\n     * @param text\n     */\n    set inputText(text) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    get tabindexAttr() {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n    /**\n     * @name ngAfterViewInit\n     */\n    ngAfterViewInit() {\n        // set up listeners\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n        const statusChanges$ = this.inputForm.form.statusChanges;\n        statusChanges$.pipe(filter$1((status) => status !== 'PENDING')).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n        this.isProgressBarVisible$ = statusChanges$.pipe(map((status) => {\n            return status === 'PENDING' || this.isLoading;\n        }));\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n    /**\n     * @name ngOnInit\n     */\n    ngOnInit() {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(MAX_ITEMS_WARNING);\n        }\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n        this.setAnimationMetadata();\n    }\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    onRemoveRequested(tag, index) {\n        return new Promise(resolve => {\n            const subscribeFn = (model) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first$1())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    onAddingRequested(fromAutocomplete, tag, index, giveupFocus) {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first$1())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    selectItem(item, emit = true) {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n        this.selectedTag = item;\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    fireEvents(eventName, $event) {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    handleKeydown(data) {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n        switch (KEY_PRESS_ACTIONS[key]) {\n            case ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n            case ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, PREV);\n                break;\n            case ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, NEXT);\n                break;\n            case ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n                    this.moveToTag(data.model, PREV);\n                }\n                else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n                    this.moveToTag(data.model, NEXT);\n                }\n                break;\n            default:\n                return;\n        }\n        // prevent default behaviour\n        event.preventDefault();\n    }\n    async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        }\n        catch {\n            return;\n        }\n    }\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    setInputValue(value, emitEvent = true) {\n        const control = this.getControl();\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n    /**\n     * @name getControl\n     */\n    getControl() {\n        return this.inputForm.value;\n    }\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    focus(applyFocus = false, displayAutocomplete = false) {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n        this.selectItem(undefined, false);\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n    /**\n     * @name blur\n     */\n    blur() {\n        this.onTouched();\n        this.onBlur.emit(this.formValue);\n    }\n    /**\n     * @name hasErrors\n     */\n    hasErrors() {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n    /**\n     * @name isInputFocused\n     */\n    isInputFocused() {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    hasCustomTemplate() {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n        return Boolean(template && template !== menuTemplate);\n    }\n    /**\n     * @name maxItemsReached\n     */\n    get maxItemsReached() {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n    /**\n     * @name formValue\n     */\n    get formValue() {\n        const form = this.inputForm.value;\n        return form ? form.value : '';\n    }\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    onDragStarted(event, tag, index) {\n        event.stopPropagation();\n        const item = { zone: this.dragZone, tag, index };\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    onDragOver(event, index) {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n        event.preventDefault();\n    }\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    onTagDropped(event, index) {\n        const item = this.dragProvider.getDraggedItem(event);\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @name isDropping\n     */\n    isDropping() {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n        return Boolean(isReceiver && isDropping);\n    }\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    onTagBlurred(changedElement, index) {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n    /**\n     * @name trackBy\n     * @param items\n     */\n    trackBy(index, item) {\n        return item[this.identifyBy];\n    }\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    updateEditedTag(tag) {\n        this.onTagEdited.emit(tag);\n    }\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    moveToTag(item, direction) {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === NEXT && isLast) ||\n            (direction === PREV && isFirst);\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n        const offset = direction === NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n        return tag.select.call(tag);\n    }\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    isFirstTag(item) {\n        return this.tags.first.model === item;\n    }\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    isLastTag(item) {\n        return this.tags.last.model === item;\n    }\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    getTagIndex(item) {\n        const tags = this.tags.toArray();\n        return tags.findIndex(tag => tag.model === item);\n    }\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    getTagAtIndex(index) {\n        const tags = this.tags.toArray();\n        return tags[index];\n    }\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    removeItem(tag, index) {\n        this.items = this.getItemsWithout(index);\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n        // focus input\n        this.focus(true, false);\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    addItem(fromAutocomplete = false, item, index, giveupFocus) {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = () => {\n                // reset control and focus input\n                this.setInputValue('');\n                if (giveupFocus) {\n                    this.focus(false, false);\n                }\n                else {\n                    // focus input\n                    this.focus(true, false);\n                }\n                resolve(display);\n            };\n            const appendItem = () => {\n                this.appendTag(tag, index);\n                // emit event\n                this.onAdd.emit(tag);\n                if (!this.dropdown) {\n                    return;\n                }\n                this.dropdown.hide();\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n                return statusUpdate$\n                    .pipe(filter$1(statusUpdate => statusUpdate !== 'PENDING'), first$1())\n                    .subscribe((statusUpdate) => {\n                    if (statusUpdate === 'VALID' && isTagValid) {\n                        appendItem();\n                        return reset();\n                    }\n                    else {\n                        reset();\n                        return onValidationError();\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    setupSeparatorKeysListener() {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n        listen.call(this, KEYDOWN, listener, useSeparatorKeys);\n    }\n    /**\n     * @name setUpKeypressListeners\n     */\n    setUpKeypressListeners() {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n        // setting up the keypress listeners\n        listen.call(this, KEYDOWN, listener);\n    }\n    /**\n     * @name setUpKeydownListeners\n     */\n    setUpInputKeydownListeners() {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n    /**\n     * @name setUpOnPasteListener\n     */\n    setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n            event.preventDefault();\n            return true;\n        });\n    }\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    setUpTextChangeSubscriber() {\n        this.inputForm.form\n            .valueChanges\n            .pipe(debounceTime$1(this.onTextChangeDebounce))\n            .subscribe((value) => {\n            this.onTextChange.emit(value.item);\n        });\n    }\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    setUpOnBlurSubscriber() {\n        const filterFn = () => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n        this.inputForm\n            .onBlur\n            .pipe(debounceTime$1(100), filter$1(filterFn))\n            .subscribe(() => {\n            const reset = () => this.setInputValue('');\n            if (this.addOnBlur) {\n                return this\n                    .onAddingRequested(false, this.formValue, undefined, true)\n                    .then(reset)\n                    .catch(reset);\n            }\n            reset();\n        });\n    }\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    findDupe(tag, isFromAutocomplete) {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n    /**\n     * @name setAnimationMetadata\n     */\n    setAnimationMetadata() {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\nTagInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputComponent, deps: [{ token: i0.Renderer2 }, { token: DragProvider }], target: i0.ɵɵFactoryTarget.Component });\nTagInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputComponent, selector: \"tag-input\", inputs: { separatorKeys: \"separatorKeys\", separatorKeyCodes: \"separatorKeyCodes\", placeholder: \"placeholder\", secondaryPlaceholder: \"secondaryPlaceholder\", maxItems: \"maxItems\", validators: \"validators\", asyncValidators: \"asyncValidators\", onlyFromAutocomplete: \"onlyFromAutocomplete\", errorMessages: \"errorMessages\", theme: \"theme\", onTextChangeDebounce: \"onTextChangeDebounce\", inputId: \"inputId\", inputClass: \"inputClass\", clearOnBlur: \"clearOnBlur\", hideForm: \"hideForm\", addOnBlur: \"addOnBlur\", addOnPaste: \"addOnPaste\", pasteSplitPattern: \"pasteSplitPattern\", blinkIfDupe: \"blinkIfDupe\", removable: \"removable\", editable: \"editable\", allowDupes: \"allowDupes\", modelAsStrings: \"modelAsStrings\", trimTags: \"trimTags\", inputText: \"inputText\", ripple: \"ripple\", tabindex: \"tabindex\", disable: \"disable\", dragZone: \"dragZone\", onRemoving: \"onRemoving\", onAdding: \"onAdding\", animationDuration: \"animationDuration\" }, outputs: { onAdd: \"onAdd\", onRemove: \"onRemove\", onSelect: \"onSelect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onTextChange: \"onTextChange\", onPaste: \"onPaste\", onValidationError: \"onValidationError\", onTagEdited: \"onTagEdited\", inputTextChange: \"inputTextChange\" }, host: { properties: { \"attr.tabindex\": \"this.tabindexAttr\" } }, providers: [CUSTOM_ACCESSOR], queries: [{ propertyName: \"dropdown\", first: true, predicate: TagInputDropdown, descendants: true }, { propertyName: \"templates\", predicate: TemplateRef }], viewQueries: [{ propertyName: \"inputForm\", first: true, predicate: TagInputForm, descendants: true }, { propertyName: \"tags\", predicate: TagComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"ng2-tag-input\\\"\\n    (click)=\\\"focus(true, false)\\\"\\n    [attr.tabindex]=\\\"-1\\\"\\n    (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\n    (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n    [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\n    [class.ng2-tag-input--disabled]=\\\"disable\\\"\\n    [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\n    [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\n    [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\"\\n>\\n\\n    <!-- TAGS -->\\n    <div class=\\\"ng2-tags-container\\\">\\n        <tag\\n            *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\n            (onSelect)=\\\"selectItem(item)\\\"\\n            (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\n            (onKeyDown)=\\\"handleKeydown($event)\\\"\\n            (onTagEdited)=\\\"updateEditedTag($event)\\\"\\n            (onBlur)=\\\"onTagBlurred($event, i)\\\"\\n            draggable=\\\"{{ editable }}\\\"\\n            (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\n            (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\n            (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n            (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\n            (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n            [canAddTag]=\\\"isTagValid\\\"\\n            [attr.tabindex]=\\\"0\\\"\\n            [disabled]=\\\"disable\\\"\\n            [@animation]=\\\"animationMetadata\\\"\\n            [hasRipple]=\\\"ripple\\\"\\n            [index]=\\\"i\\\"\\n            [removable]=\\\"removable\\\"\\n            [editable]=\\\"editable\\\"\\n            [displayBy]=\\\"displayBy\\\"\\n            [identifyBy]=\\\"identifyBy\\\"\\n            [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\n            [draggable]=\\\"dragZone\\\"\\n            [model]=\\\"item\\\"\\n        >\\n        </tag>\\n\\n        <tag-input-form\\n            (onSubmit)=\\\"onFormSubmit()\\\"\\n            (onBlur)=\\\"blur()\\\"\\n            (click)=\\\"dropdown ? dropdown.show() : undefined\\\"\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\n            [inputText]=\\\"inputText\\\"\\n            [disabled]=\\\"disable\\\"\\n            [validators]=\\\"validators\\\"\\n            [asyncValidators]=\\\"asyncValidators\\\"\\n            [hidden]=\\\"maxItemsReached\\\"\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\n            [inputClass]=\\\"inputClass\\\"\\n            [inputId]=\\\"inputId\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n        >\\n        </tag-input-form>\\n    </div>\\n\\n    <div\\n        class=\\\"progress-bar\\\"\\n        *ngIf=\\\"isProgressBarVisible$ | async\\\"\\n    ></div>\\n</div>\\n\\n<!-- ERRORS -->\\n<div\\n    *ngIf=\\\"hasErrors()\\\"\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"error-messages\\\"\\n>\\n    <p\\n        *ngFor=\\\"let error of errors\\\"\\n        class=\\\"error-message\\\"\\n    >\\n        <span>{{ error }}</span>\\n    </p>\\n</div>\\n<ng-content></ng-content>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}\\n\"], components: [{ type: TagComponent, selector: \"tag\", inputs: [\"model\", \"removable\", \"editable\", \"template\", \"displayBy\", \"identifyBy\", \"index\", \"hasRipple\", \"disabled\", \"canAddTag\"], outputs: [\"onSelect\", \"onRemove\", \"onBlur\", \"onKeyDown\", \"onTagEdited\"] }, { type: TagInputForm, selector: \"tag-input-form\", inputs: [\"placeholder\", \"validators\", \"asyncValidators\", \"inputId\", \"inputClass\", \"tabindex\", \"disabled\", \"inputText\"], outputs: [\"onSubmit\", \"onBlur\", \"onFocus\", \"onKeyup\", \"onKeydown\", \"inputTextChange\"] }], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i2.AsyncPipe }, animations: animations });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag-input', providers: [CUSTOM_ACCESSOR], animations: animations, template: \"<div\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"ng2-tag-input\\\"\\n    (click)=\\\"focus(true, false)\\\"\\n    [attr.tabindex]=\\\"-1\\\"\\n    (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\n    (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n    [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\n    [class.ng2-tag-input--disabled]=\\\"disable\\\"\\n    [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\n    [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\n    [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\"\\n>\\n\\n    <!-- TAGS -->\\n    <div class=\\\"ng2-tags-container\\\">\\n        <tag\\n            *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\n            (onSelect)=\\\"selectItem(item)\\\"\\n            (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\n            (onKeyDown)=\\\"handleKeydown($event)\\\"\\n            (onTagEdited)=\\\"updateEditedTag($event)\\\"\\n            (onBlur)=\\\"onTagBlurred($event, i)\\\"\\n            draggable=\\\"{{ editable }}\\\"\\n            (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\n            (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\n            (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n            (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\n            (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n            [canAddTag]=\\\"isTagValid\\\"\\n            [attr.tabindex]=\\\"0\\\"\\n            [disabled]=\\\"disable\\\"\\n            [@animation]=\\\"animationMetadata\\\"\\n            [hasRipple]=\\\"ripple\\\"\\n            [index]=\\\"i\\\"\\n            [removable]=\\\"removable\\\"\\n            [editable]=\\\"editable\\\"\\n            [displayBy]=\\\"displayBy\\\"\\n            [identifyBy]=\\\"identifyBy\\\"\\n            [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\n            [draggable]=\\\"dragZone\\\"\\n            [model]=\\\"item\\\"\\n        >\\n        </tag>\\n\\n        <tag-input-form\\n            (onSubmit)=\\\"onFormSubmit()\\\"\\n            (onBlur)=\\\"blur()\\\"\\n            (click)=\\\"dropdown ? dropdown.show() : undefined\\\"\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\n            [inputText]=\\\"inputText\\\"\\n            [disabled]=\\\"disable\\\"\\n            [validators]=\\\"validators\\\"\\n            [asyncValidators]=\\\"asyncValidators\\\"\\n            [hidden]=\\\"maxItemsReached\\\"\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\n            [inputClass]=\\\"inputClass\\\"\\n            [inputId]=\\\"inputId\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n        >\\n        </tag-input-form>\\n    </div>\\n\\n    <div\\n        class=\\\"progress-bar\\\"\\n        *ngIf=\\\"isProgressBarVisible$ | async\\\"\\n    ></div>\\n</div>\\n\\n<!-- ERRORS -->\\n<div\\n    *ngIf=\\\"hasErrors()\\\"\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"error-messages\\\"\\n>\\n    <p\\n        *ngFor=\\\"let error of errors\\\"\\n        class=\\\"error-message\\\"\\n    >\\n        <span>{{ error }}</span>\\n    </p>\\n</div>\\n<ng-content></ng-content>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: DragProvider }]; }, propDecorators: { separatorKeys: [{\n                type: Input\n            }], separatorKeyCodes: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], secondaryPlaceholder: [{\n                type: Input\n            }], maxItems: [{\n                type: Input\n            }], validators: [{\n                type: Input\n            }], asyncValidators: [{\n                type: Input\n            }], onlyFromAutocomplete: [{\n                type: Input\n            }], errorMessages: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], onTextChangeDebounce: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], clearOnBlur: [{\n                type: Input\n            }], hideForm: [{\n                type: Input\n            }], addOnBlur: [{\n                type: Input\n            }], addOnPaste: [{\n                type: Input\n            }], pasteSplitPattern: [{\n                type: Input\n            }], blinkIfDupe: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], allowDupes: [{\n                type: Input\n            }], modelAsStrings: [{\n                type: Input\n            }], trimTags: [{\n                type: Input\n            }], inputText: [{\n                type: Input\n            }], ripple: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], disable: [{\n                type: Input\n            }], dragZone: [{\n                type: Input\n            }], onRemoving: [{\n                type: Input\n            }], onAdding: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], onAdd: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onSelect: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onTextChange: [{\n                type: Output\n            }], onPaste: [{\n                type: Output\n            }], onValidationError: [{\n                type: Output\n            }], onTagEdited: [{\n                type: Output\n            }], dropdown: [{\n                type: ContentChild,\n                args: [TagInputDropdown]\n            }], templates: [{\n                type: ContentChildren,\n                args: [TemplateRef, { descendants: false }]\n            }], inputForm: [{\n                type: ViewChild,\n                args: [TagInputForm]\n            }], tags: [{\n                type: ViewChildren,\n                args: [TagComponent]\n            }], inputTextChange: [{\n                type: Output\n            }], tabindexAttr: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }] } });\n\nconst optionsProvider = new OptionsProvider();\nclass TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    static withDefaults(options) {\n        optionsProvider.setOptions(options);\n    }\n}\nTagInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTagInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, declarations: [TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule], exports: [TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple] });\nTagInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ], imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            FormsModule,\n            Ng2DropdownModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        FormsModule,\n                        Ng2DropdownModule\n                    ],\n                    declarations: [\n                        TagInputComponent,\n                        DeleteIconComponent,\n                        TagInputForm,\n                        TagComponent,\n                        HighlightPipe,\n                        TagInputDropdown,\n                        TagRipple\n                    ],\n                    exports: [\n                        TagInputComponent,\n                        DeleteIconComponent,\n                        TagInputForm,\n                        TagComponent,\n                        HighlightPipe,\n                        TagInputDropdown,\n                        TagRipple\n                    ],\n                    providers: [\n                        DragProvider,\n                        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeleteIconComponent, HighlightPipe, TagComponent, TagInputComponent, TagInputDropdown, TagInputForm, TagInputModule, TagRipple };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[1,2,3,4,5]}