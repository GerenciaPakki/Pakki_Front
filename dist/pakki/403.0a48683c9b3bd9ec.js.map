{"version":3,"file":"403.0a48683c9b3bd9ec.js","mappings":"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","names":["i0","CreateuserComponent","constructor","apiservice","sweetalertservice","this","FormGroup","name","FormControl","Validators","lastName","documentType","docu","mobil","address","email","city","citycode","country","countrycode","state","homephone","workphone","EventEmitter","value","viewValue","ngOnInit","onCountryChange","event","propiedad","usercreate","patchValue","valor","CountryName","CountryCode","sendData","post","subscribe","res","Swal","icon","title","msg","confirmButtonText","usuariocreado","emit","error","console","log","errorMessage","onCityChange","StateName","StateCode","selectors","ctx","UpdateuserComponent","ngOnChanges","changes","userdoc","getDataUserbyDoc","userupdate","put","userUpdate","DocumentID","removeData","FilterusersPipe","transform","arg","toLowerCase","filter","item","nombre","toString","includes","pure","user_r1","UsersRoutes","path","children","component","ViewallComponent","fb","route","router","getDataUsers","get","dataUser","data","openModal","modal","cc","$","deleteUser","document","showDenyButton","denyButtonText","then","result","isConfirmed","body","Usercreated","evento","closeModal","redirectTo","pathMatch","UsersModule","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","ComponentsModule","MaterialModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/users/pages/createuser/createuser.component.html","./src/app/pages/users/pages/createuser/createuser.component.ts","./src/app/pages/users/pages/updateuser/updateuser.component.html","./src/app/pages/users/pages/updateuser/updateuser.component.ts","./src/app/pipes/filterusers.pipe.ts","./src/app/pages/users/pages/viewall/viewall.component.html","./src/app/pages/users/users.routing.ts","./src/app/pages/users/pages/viewall/viewall.component.ts","./src/app/pages/users/users.module.ts"],"sourcesContent":["<div id=\"createuser\" data-backdrop=\"static\" data-keyboard=\"false\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog  modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Crear Usuario</h4>\r\n\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <form [formGroup]=\"usercreate\">\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Nombre\" formControlName=\"name\" type=\"text\" />\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Apellido\" formControlName=\"lastName\" type=\"text\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <mat-select placeholder=\"Tipo de Documento\" formControlName=\"documentType\">\r\n                    <mat-option *ngFor=\"let doc of tipo_doc\" [value]=\"doc.value\">\r\n                      {{ doc.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <app-inputnumerico [label]=\"'Documento'\" [control]=\"usercreate.get('docu')\"></app-inputnumerico>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <app-inputnumerico [label]=\"'Celular'\" [maxLength]=\"10\"\r\n                  [control]=\"usercreate.get('mobil')\"></app-inputnumerico>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Dirección\" formControlName=\"address\" type=\"text\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Correo\" formControlName=\"email\" type=\"text\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <app-inputnumerico [label]=\"'Télefono de Casa'\" [maxLength]=\"10\"\r\n                  [control]=\"usercreate.get('homephone')\"></app-inputnumerico>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <app-input-country (PaisCambiado)=\"onCountryChange($event)\" [stateCtrl]=\"usercreate.get('country')\"\r\n                  [label]=\"'Pais'\" [tipo]=\"1\"></app-input-country>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <app-inputciudad [label]=\"'Ciudad'\" [countrycode]=\"usercreate.get('countrycode')\"\r\n                  [ciudad]=\"usercreate.get('city')\" (ciudadCambiada)=\"onCityChange($event)\"></app-inputciudad>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <mat-form-field class=\"example-full-width has-label\">\r\n                  <input matInput placeholder=\"Estado\"\r\n                    [value]=\" usercreate?.get('city')?.value  + '-' + usercreate?.get('citycode')?.value \" type=\"text\"\r\n                    disabled>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <app-inputnumerico [label]=\"'Télefono de Trabajo'\"\r\n                  [control]=\"usercreate.get('workphone')\"></app-inputnumerico>\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-warning float-right\" (click)=\"sendData()\"\r\n              [disabled]=\"usercreate.invalid\">\r\n              Crear\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-createuser',\r\n  templateUrl: './createuser.component.html',\r\n  styleUrls: ['./createuser.component.css'],\r\n})\r\nexport class CreateuserComponent implements OnInit {\r\n  usercreate = new FormGroup({\r\n    name: new FormControl('', [Validators.required]), //\r\n    lastName: new FormControl('', [Validators.required]),\r\n    documentType: new FormControl('', [Validators.required]),\r\n    docu: new FormControl('', [Validators.required]), //\r\n    mobil: new FormControl('', [\r\n      Validators.minLength(10),\r\n      Validators.maxLength(10),\r\n      Validators.required,\r\n    ]),\r\n    address: new FormControl('', [Validators.required]),\r\n    email: new FormControl('', [\r\n      Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/),\r\n      Validators.required,\r\n    ]),\r\n    city: new FormControl('', [Validators.required]), // selector ciudad\r\n    citycode: new FormControl(''), //\r\n    country: new FormControl('', [Validators.required]), // selector pais\r\n    countrycode: new FormControl(''),\r\n    state: new FormControl(''), // estado (bogota DC)\r\n    homephone: new FormControl(''),\r\n    workphone: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  @Output() usuariocreado = new EventEmitter<any>();\r\n\r\n  tipo_doc = [\r\n    { value: 'cc', viewValue: 'cedula de ciudadania' },\r\n    { value: 'ce', viewValue: 'cedula de extranjeria' },\r\n    { value: 'nit', viewValue: 'numero de identificacion tributaria' },\r\n    { value: 'pap', viewValue: 'pasaporte' },\r\n  ];\r\n\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onCountryChange(event: any) {\r\n    /* console.log(event, 'padre'); */\r\n    if (event.propiedad === 'pais_seleccionado') {\r\n      this.usercreate.patchValue({ country: event.valor.CountryName });\r\n      this.usercreate.patchValue({ countrycode: event.valor.CountryCode });\r\n    }\r\n  }\r\n\r\n  public sendData() {\r\n    this.apiservice.post('rgs/r', this.usercreate.value).subscribe(\r\n      (res) => {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: res.msg,\r\n          confirmButtonText: 'Aceptar',\r\n        });\r\n\r\n        this.usuariocreado.emit(true);\r\n      },\r\n      (error) => {\r\n        console.log('error al crear usuario', error);\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error al crear usuario'\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  public onCityChange(event: any) {\r\n    this.usercreate.patchValue({ city: event.valor.StateName });\r\n    this.usercreate.patchValue({ citycode: event.valor.StateCode });\r\n    this.usercreate.patchValue({\r\n      state: event.valor.StateName + event.valor.StateCode,\r\n    });\r\n  }\r\n}\r\n","<div id=\"updateuser\" data-backdrop=\"static\" data-keyboard=\"false\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog  modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Actualizar Usuario</h4>\r\n\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"removeData()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"container-fluid\">\r\n                    <form [formGroup]=\"userupdate\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <mat-form-field>\r\n                                    <input matInput placeholder=\"Nombre\" formControlName=\"name\" type=\"text\" />\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <mat-form-field>\r\n                                    <input matInput placeholder=\"Apellido\" formControlName=\"lastName\" type=\"text\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <mat-form-field>\r\n                                    <mat-select placeholder=\"Tipo de Documento\" formControlName=\"documentType\">\r\n                                        <mat-option *ngFor=\"let doc of tipo_doc\" [value]=\"doc.value\">\r\n                                            {{ doc.viewValue }}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <app-inputnumerico [label]=\"'Celular'\" [control]=\"userupdate.get('mobil')\"\r\n                                    [maxLength]=\"10\"></app-inputnumerico>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <mat-form-field>\r\n                                    <input matInput placeholder=\"Dirección\" formControlName=\"address\" type=\"text\" />\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <app-inputnumerico [label]=\"'Télefono de Casa'\"\r\n                                    [control]=\"userupdate.get('homephone')\"></app-inputnumerico>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <app-input-country (PaisCambiado)=\"onCountryChange($event)\"\r\n                                    [stateCtrl]=\"userupdate.get('country')\" [label]=\"'Pais'\"\r\n                                    [tipo]=\"1\"></app-input-country>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <app-inputciudad [label]=\"'Ciudad'\" [countrycode]=\"userupdate.get('countrycode')\"\r\n                                    [ciudad]=\"userupdate.get('city')\"\r\n                                    (ciudadCambiada)=\"onCityChange($event)\"></app-inputciudad>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <mat-form-field class=\"example-full-width has-label\">\r\n                                    <input matInput placeholder=\"Estado\"\r\n                                        [value]=\" userupdate?.get('city')?.value  + '-' + userupdate?.get('citycode')?.value \"\r\n                                        type=\"text\" disabled>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <app-inputnumerico [label]=\"'Télefono de Trabajo'\"\r\n                                    [control]=\"userupdate.get('workphone')\"></app-inputnumerico>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" class=\"btn btn-warning float-right\" (click)=\"sendData()\"\r\n                            [disabled]=\"userupdate.invalid\">\r\n                            Actualizar Usuario\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-updateuser',\r\n  templateUrl: './updateuser.component.html',\r\n  styleUrls: ['./updateuser.component.css'],\r\n})\r\nexport class UpdateuserComponent implements OnInit, OnChanges {\r\n  @Input() userdoc: any;\r\n  @Output() userUpdate = new EventEmitter<any>();\r\n\r\n  userupdate = new FormGroup({\r\n    email: new FormControl(''), //\r\n    docu: new FormControl(''), //\r\n    name: new FormControl('', [Validators.required]), //\r\n    lastName: new FormControl('', [Validators.required]),\r\n    documentType: new FormControl(''),\r\n    mobil: new FormControl('', [\r\n      Validators.minLength(10),\r\n      Validators.maxLength(10),\r\n    ]),\r\n    address: new FormControl(''),\r\n    city: new FormControl(''), // selector ciudad\r\n    citycode: new FormControl(''), //\r\n    country: new FormControl(''), // selector pais\r\n    countrycode: new FormControl(''),\r\n    state: new FormControl(''), // estado (bogota DC)\r\n    homephone: new FormControl(''),\r\n    workphone: new FormControl(''),\r\n  });\r\n\r\n  tipo_doc = [\r\n    { value: 'cc', viewValue: 'cedula de ciudadania' },\r\n    { value: 'ce', viewValue: 'cedula de extranjeria' },\r\n    { value: 'nit', viewValue: 'numero de identificacion tributaria' },\r\n    { value: 'pap', viewValue: 'pasaporte' },\r\n  ];\r\n\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log('====================================');\r\n    console.log(changes);\r\n    console.log('====================================');\r\n    if (changes.userdoc) {\r\n      this.getDataUserbyDoc();\r\n    }\r\n  }\r\n\r\n  public onCountryChange(event: any) {\r\n    if (event.propiedad === 'pais_seleccionado') {\r\n      this.userupdate.patchValue({ country: event.valor.CountryName });\r\n      this.userupdate.patchValue({ countrycode: event.valor.CountryCode });\r\n    }\r\n  }\r\n\r\n  public sendData() {\r\n    this.apiservice.put('rgs/r', this.userupdate.value).subscribe(\r\n      (res) => {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: res.msg,\r\n          confirmButtonText: 'Aceptar',\r\n        });\r\n        this.userUpdate.emit(true);\r\n      },\r\n      (error) => {\r\n        console.log('error al actualizar usuario', error);\r\n        this.sweetalertservice.errorMessage('Error al actualizar usuario');\r\n      }\r\n    );\r\n  }\r\n\r\n  public onCityChange(event: any) {\r\n    this.userupdate.patchValue({ city: event.valor.StateName });\r\n    this.userupdate.patchValue({ citycode: event.valor.StateCode });\r\n    this.userupdate.patchValue({\r\n      state: event.valor.StateName + event.valor.StateCode,\r\n    });\r\n  }\r\n\r\n  getDataUserbyDoc() {\r\n    if (this.userdoc) {\r\n      let body = {\r\n        DocumentID: this.userdoc,\r\n      };\r\n\r\n      this.apiservice.post('cl/userxcc', body).subscribe(\r\n        (res) => {\r\n          this.userupdate.patchValue({\r\n            name: res.msg[0].name ? res.msg[0].name : '',\r\n          });\r\n          this.userupdate.patchValue({\r\n            lastName: res.msg[0].lastName ? res.msg[0].lastName : '',\r\n          });\r\n          this.userupdate.patchValue({\r\n            email: res.msg[0].email ? res.msg[0].email : '',\r\n          });\r\n          this.userupdate.patchValue({\r\n            docu: res.msg[0].docu ? res.msg[0].docu : '',\r\n          });\r\n          this.userupdate.patchValue({\r\n            city: res.msg[0].city ? res.msg[0].city : '',\r\n          });\r\n          this.userupdate.patchValue({\r\n            country: res.msg[0].country ? res.msg[0].country : '',\r\n          });\r\n          this.userupdate.patchValue({\r\n            state: res.msg[0].state ? res.msg[0].state : '',\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log('error al consultar usuarios', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public removeData() {\r\n    this.userdoc = '';\r\n    this.userupdate.patchValue({ email: '' });\r\n    this.userupdate.patchValue({ docu: '' });\r\n    this.userupdate.patchValue({ name: '' });\r\n    this.userupdate.patchValue({ lastName: '' });\r\n    this.userupdate.patchValue({ documentType: '' });\r\n    this.userupdate.patchValue({ mobil: '' });\r\n    this.userupdate.patchValue({ city: '' });\r\n    this.userupdate.patchValue({ citycode: '' });\r\n    this.userupdate.patchValue({ countrycode: '' });\r\n    this.userupdate.patchValue({ homephone: '' });\r\n    this.userupdate.patchValue({ workphone: '' });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterusers',\r\n})\r\nexport class FilterusersPipe implements PipeTransform {\r\n  transform(value: any, arg?: any): unknown {\r\n    if (!value || !arg) {\r\n      return value;\r\n    }\r\n    arg = arg.toLowerCase();\r\n\r\n    return value.filter((item) => {\r\n      const nombre = item.name.toLowerCase();\r\n      const docu = item.docu.toString();\r\n      const email = item.email.toLowerCase();\r\n      return nombre.includes(arg) || email.includes(arg) || docu.includes(arg);\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <input\r\n          class=\"form-control\"\r\n          name=\"filter\"\r\n          type=\"search\"\r\n          [(ngModel)]=\"filter\"\r\n          placeholder=\"Buscar...\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-icon card-header-warning\">\r\n            <div class=\"card-icon\">\r\n              <span class=\"material-symbols-outlined\"> groups </span>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <h4 class=\"card-title\">\r\n                  Información de Usuarios\r\n                  <button\r\n                    class=\"btn btn-warning btn-sm float-right\"\r\n                    (click)=\"openModal('createuser')\"\r\n                  >\r\n                    <span class=\"material-symbols-outlined\"> add </span>\r\n                  </button>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"text-black text-center\">\r\n                <tr>\r\n                  <th>Nombre</th>\r\n                  <th>email</th>\r\n                  <th>Documento</th>\r\n                  <th>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  *ngFor=\"\r\n                    let user of dataUser\r\n                      | filterusers : filter\r\n                      | paginate : { itemsPerPage: 5, currentPage: p }\r\n                  \"\r\n                  class=\"text-black text-center\"\r\n                >\r\n                  <td>{{ user.name + \" \" + user.lastName }}</td>\r\n                  <td>{{ user.email }}</td>\r\n                  <td>{{ user.docu }}</td>\r\n                  <td>\r\n                    <button\r\n                      class=\"btn btn-warning btn-sm\"\r\n                      (click)=\"openModal('updateuser', user.docu)\"\r\n                    >\r\n                      <span class=\"material-symbols-outlined\"> edit </span>\r\n                    </button>\r\n                    <button\r\n                      class=\"btn btn-warning btn-sm\"\r\n                      (click)=\"deleteUser(user.docu)\"\r\n                    >\r\n                      <span class=\"material-symbols-outlined\"> delete </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <pagination-controls\r\n              class=\"my-pagination text-center\"\r\n              (pageChange)=\"p = $event\"\r\n              previousLabel=\"Anterior\"\r\n              nextLabel=\"Siguiente\"\r\n            ></pagination-controls>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-createuser (usuariocreado)=\"Usercreated($event)\"></app-createuser>\r\n<app-updateuser\r\n  [userdoc]=\"userdoc\"\r\n  (userUpdate)=\"userUpdate($event)\"\r\n></app-updateuser>\r\n","import { Routes } from '@angular/router';\r\nimport { ViewallComponent } from './pages/viewall/viewall.component';\r\nimport { UpdateuserComponent } from './pages/updateuser/updateuser.component';\r\n\r\nexport const UsersRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'view',\r\n        component: ViewallComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\nimport Swal from 'sweetalert2';\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-viewall',\r\n  templateUrl: './viewall.component.html',\r\n  styleUrls: ['./viewall.component.css'],\r\n})\r\nexport class ViewallComponent implements OnInit {\r\n  dataUser: Array<any>;\r\n  filter = '';\r\n  p: number = 1;\r\n  userdoc: any;\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private apiservice: ApiService,\r\n    private sweetalertservice: SweetalertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getDataUsers();\r\n  }\r\n\r\n  public getDataUsers() {\r\n    this.apiservice.get('lg/allusr').subscribe(\r\n      (res) => {\r\n        console.log('res users', res);\r\n\r\n        this.dataUser = res.data;\r\n      },\r\n      (error) => {\r\n        console.log('error al consultar usuarios', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public openModal(modal: String, cc?: any) {\r\n    console.log('====================================');\r\n    console.log(cc);\r\n    console.log('====================================');\r\n    if (modal == 'updateuser') {\r\n      this.userdoc = cc;\r\n    }\r\n\r\n    $(`#${modal}`).modal('show');\r\n  }\r\n\r\n  public deleteUser(document: any) {\r\n    Swal.fire({\r\n      icon: 'info',\r\n      title: '¿Esta seguro que desea eliminar el usuario?',\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Aceptar',\r\n      denyButtonText: `Cancelar`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let body = { DocumentID: document };\r\n        console.log('====================================');\r\n        console.log(body);\r\n        console.log('====================================');\r\n        this.apiservice.post('lg/delusrs', body).subscribe(\r\n          (res) => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: res.msg,\r\n              confirmButtonText: 'Aceptar',\r\n            });\r\n            this.getDataUsers();\r\n          },\r\n          (error) => {\r\n            console.log('error al crear usuario', error);\r\n            this.sweetalertservice.errorMessage(\r\n              error?.error?.msg\r\n                ? error?.error?.msg\r\n                : 'Error al eliminar usuario'\r\n            );\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  Usercreated(evento: any) {\r\n    if (evento == true) {\r\n      this.closeModal('createuser');\r\n      this.getDataUsers();\r\n    }\r\n  }\r\n\r\n  userUpdate(evento: any) {\r\n    if (evento == true) {\r\n      this.closeModal('updateuser');\r\n      this.getDataUsers();\r\n    }\r\n  }\r\n\r\n  public closeModal(modal: String) {\r\n    $(`#${modal}`).modal('hide');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersRoutes } from './users.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from 'src/app/app.module';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ViewallComponent } from './pages/viewall/viewall.component';\r\nimport { FilterusersPipe } from 'src/app/pipes/filterusers.pipe';\r\n\r\nimport { CreateuserComponent } from './pages/createuser/createuser.component';\r\nimport { UpdateuserComponent } from './pages/updateuser/updateuser.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewallComponent,\r\n    FilterusersPipe,\r\n    CreateuserComponent,\r\n    UpdateuserComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(UsersRoutes),\r\n    ComponentsModule,\r\n    MaterialModule,\r\n    NgxPaginationModule,\r\n    ComponentsModule,\r\n  ],\r\n})\r\nexport class UsersModule {}\r\n"],"x_google_ignoreList":[]}