{"version":3,"file":"632.a8a41a98fb5d777b.js","mappings":"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","names":["i0","InputNameBranch","constructor","apiservice","this","EventEmitter","ngOnInit","onKeyUp","filterValue","nitctr","value","length","data_aliados","filteredAliados","of","post","brachOffice","guideNumber","subscribe","res","dataresponse","tradenames","forEach","element","push","name","error","console","AliadoSelect","aliadoCambiado","emit","propiedad","valor","selectors","ctx","GeneratecommentComponent","sweetalertservice","createComment","data","comment","status","estado","showNotification","msg","commentCreated","errorMessage","selectPickup","SeallcommentsComponent","closeModal","modal","$","SearchshipmentPipe","transform","arg","toLowerCase","filter","item","guia","shipment","ShipmentCode","destino","Destination","cityDestination","cityName","provider","Provider","partners","includes","pure","item_r2","ShipmentRoutes","path","children","component","ViewallshipmentsComponent","FormGroup","businessname","FormControl","Validators","businessnit","business","branchselected","branchid","Subject","searchcompany","get","valueChanges","pipe","takeUntil","unsubscribe$","businessNameChanged$","next","patchValue","ngOnDestroy","complete","BusinessSelect","event","SendData","body","log","dataShipments","onKeyUpGuia","clearTimeout","timeout","setTimeout","branchSelect","_id","downloadPdf","ShipmentID","carta","proforma","openModal","datashipmentopen","getComentarios","ok","comentarios","comments","openDocument","url","window","open","redirectTo","pathMatch","ShipmentsModule","CommonModule","RouterModule","FormsModule","MaterialModule","ReactiveFormsModule","ComponentsModule","NouisliderModule","TagInputModule","NgbModule","ModalModule","NgxPaginationModule","MatFormFieldModule"],"sourceRoot":"webpack:///","sources":["./src/app/components/inputs/inputNamebranch/inputNameBranch.component.html","./src/app/components/inputs/inputNamebranch/inputNameBranch.component.ts","./src/app/pages/shipments/components/modals/generatecomment/generatecomment.component.ts","./src/app/pages/shipments/components/modals/generatecomment/generatecomment.component.html","./src/app/pages/shipments/components/modals/seallcomments/seallcomments.component.html","./src/app/pages/shipments/components/modals/seallcomments/seallcomments.component.ts","./src/app/pipes/searchshipment.pipe.ts","./src/app/pages/shipments/viewallshipments/viewallshipments.component.html","./src/app/pages/shipments/shipments.routing.ts","./src/app/pages/shipments/viewallshipments/viewallshipments.component.ts","./src/app/pages/shipments/shipments.module.ts"],"sourcesContent":["<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>{{label}}</mat-label>\r\n        <input matInput aria-label=\"Envio\" [matAutocomplete]=\"auto\" (input)=\"onKeyUp()\" [formControl]=\"nitctr\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <mat-option *ngFor=\"let aliado of filteredAliados | async\" [value]=\"aliado.value\"\r\n                (click)=\"AliadoSelect(aliado)\">\r\n                <span class=\"ml-3\">{{ aliado.name }}</span>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field>\r\n</form>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable, filter, of } from 'rxjs';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-input-namebranch',\r\n  templateUrl: './inputNameBranch.component.html',\r\n})\r\nexport class InputNameBranch implements OnInit {\r\n  /** Componente que busca por nit el Negocio */\r\n  @Input() nitctr: FormControl;\r\n  @Input() label: string;\r\n  @Output() aliadoCambiado = new EventEmitter<any>();\r\n  filteredAliados: Observable<any>;\r\n  data_aliados: any[] = [];\r\n  dataresponse;\r\n  constructor(private apiservice: ApiService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onKeyUp() {\r\n    const filterValue = this.nitctr.value;\r\n    // console.log(filterValue);\r\n\r\n    if (filterValue.length > 3) {\r\n      this.data_aliados = [];\r\n      this.filteredAliados = of([]);\r\n\r\n      let body = {\r\n        brachOffice: filterValue,\r\n        guideNumber: '',\r\n      };\r\n      this.apiservice.post('bs/bussearch', body).subscribe(\r\n        (res: any) => {\r\n          this.dataresponse = res;\r\n          res.tradenames.forEach((element) => {\r\n            let obj = {\r\n              name: element,\r\n              value: element,\r\n            };\r\n            this.data_aliados.push(obj);\r\n          });\r\n\r\n          this.filteredAliados = of(this.data_aliados);\r\n        },\r\n        (error) => {\r\n          console.error('Error en la consulta de Nombre de Negocio:', error);\r\n          this.data_aliados = [];\r\n        }\r\n      );\r\n    } else {\r\n      this.data_aliados = [];\r\n      this.filteredAliados = of([]);\r\n    }\r\n  }\r\n\r\n  public AliadoSelect(value) {\r\n    this.filteredAliados = of([]);\r\n    /*  console.log(value); */\r\n    this.aliadoCambiado.emit({\r\n      propiedad: 'aliado_seleccionado',\r\n      valor: value,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\n\r\n@Component({\r\n  selector: 'app-generatecomment',\r\n  templateUrl: './generatecomment.component.html',\r\n  styleUrls: ['./generatecomment.component.css'],\r\n})\r\nexport class GeneratecommentComponent implements OnInit {\r\n  @Input() data: any = {};\r\n  comment: string = '';\r\n  @Output() commentCreated = new EventEmitter<any>();\r\n  @Input() estado = true;\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  public createComment() {\r\n    this.data.comment = this.comment;\r\n    this.data.status = this.estado == true ? 'Abierto' : 'Cerrado';\r\n    this.apiservice.post('sps/shipcomm', this.data).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.sweetalertservice.showNotification(res.msg);\r\n        this.comment = '';\r\n        this.commentCreated.emit({\r\n          propiedad: 'comment_created',\r\n          valor: true,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error('Error al crear comentario', error);\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error al crear comentario'\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  selectPickup(value?: boolean) {\r\n    this.estado = value;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div\r\n  id=\"generatecomment\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Generar Comentarios</h4>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-1 offset-11\">\r\n              <div class=\"togglebutton\">\r\n                <label>\r\n                  <input\r\n                    [checked]=\"estado\"\r\n                    (change)=\"selectPickup($event.target.checked)\"\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <span class=\"toggle\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Comentario\"\r\n                  [(ngModel)]=\"comment\"\r\n                  type=\"text\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            [disabled]=\"!comment\"\r\n            class=\"btn btn-warning float-right\"\r\n            (click)=\"createComment()\"\r\n          >\r\n            Generar Comentario\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div\r\n  id=\"seallcomment\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Ver Comentarios</h4>\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n          (click)=\"closeModal('seallcomment')\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\" *ngFor=\"let item of data; index as i\">\r\n                <h6>\r\n                  Comentario {{ i + 1 }}{{ \" \" }}-{{ item.name }}\r\n                  {{ item.lastname }} -{{ item.dateUpdate }}\r\n                </h6>\r\n\r\n                <mat-form-field appearance=\"fill\">\r\n                  <textarea\r\n                    matInput\r\n                    [value]=\"item.observation\"\r\n                    [rows]=\"item.observation.length > 50 ? '4' : '1'\"\r\n                    readonly\r\n                  ></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-seallcomments',\r\n  templateUrl: './seallcomments.component.html',\r\n  styleUrls: ['./seallcomments.component.css'],\r\n})\r\nexport class SeallcommentsComponent implements OnInit {\r\n  @Input() data: any = [];\r\n\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public closeModal(modal: String) {\r\n    $(`#${modal}`).modal('hide');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'searchshipment',\r\n})\r\nexport class SearchshipmentPipe implements PipeTransform {\r\n  transform(value: any, arg?: any): unknown {\r\n    if (!value || !arg) {\r\n      return value;\r\n    }\r\n    arg = arg.toLowerCase();\r\n\r\n    return value.filter((item) => {\r\n      const guia = item.shipment.ShipmentCode;\r\n      const destino = item.Destination.cityDestination.cityName.toLowerCase();\r\n      const provider = item.Provider?.partners.toLowerCase();\r\n      return (\r\n        guia.includes(arg) || destino.includes(arg) || provider.includes(arg)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"card\">\r\n      <div class=\"row p-3\">\r\n        <div class=\"col-12\">\r\n          <input\r\n            class=\"form-control\"\r\n            name=\"filtership\"\r\n            type=\"search\"\r\n            [(ngModel)]=\"filter\"\r\n            placeholder=\"Buscar...\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"searchcompany\">\r\n      <div class=\"card mt-1\">\r\n        <div class=\"row p-3\">\r\n          <div class=\"col-6\">\r\n            <!-- <form class=\"example-form\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Nombre del negocio</mat-label>\r\n                <input\r\n                  matInput\r\n                  aria-label=\"name_buss\"\r\n                  (input)=\"onKeyUpName($event)\"\r\n                  [formControl]=\"searchcompany.get('businessname')\"\r\n                />\r\n              </mat-form-field>\r\n            </form> -->\r\n            <app-input-namebranch\r\n              [nitctr]=\"searchcompany.get('businessname')\"\r\n              (aliadoCambiado)=\"BusinessSelect($event)\"\r\n              [label]=\"'Nombre del negocio'\"\r\n            ></app-input-namebranch>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <form class=\"example-form\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Numero de Guia</mat-label>\r\n                <input\r\n                  matInput\r\n                  aria-label=\"name_buss\"\r\n                  (input)=\"onKeyUpGuia($event)\"\r\n                  [formControl]=\"searchcompany.get('guideNumber')\"\r\n                />\r\n              </mat-form-field>\r\n            </form>\r\n            <!-- <app-searchbranchoffices\r\n              [nit]=\"searchcompany.get('businessnit').value\"\r\n              [label]=\"'Sucursal'\"\r\n              (branchSelected)=\"branchSelect($event)\"\r\n              [branchofficectr]=\"searchcompany.get('branchselected')\"\r\n            >\r\n            </app-searchbranchoffices> -->\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"dataShipments.length > 0\">\r\n          <div class=\"col-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"text-black text-center\">\r\n                  <tr>\r\n                    <th>Guia</th>\r\n                    <th>Nombre de Oficina</th>\r\n                    <th>Destino</th>\r\n                    <th>Proveedor</th>\r\n                    <th>Fecha Creación</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    *ngFor=\"\r\n                      let item of dataShipments\r\n                        | searchshipment : filter\r\n                        | paginate : { itemsPerPage: 10, currentPage: p };\r\n                      index as i\r\n                    \"\r\n                    class=\"text-black text-center\"\r\n                  >\r\n                    <td>{{ item?.shipment?.ShipmentCode }}</td>\r\n                    <td>{{ item?.business?.brachOffice }}</td>\r\n                    <td>{{ item?.Destination?.cityDestination?.cityName }}</td>\r\n                    <td>{{ item?.Provider?.partners }}</td>\r\n                    <td>{{ item?.dateCreate }}</td>\r\n\r\n                    <td>\r\n                      <button\r\n                        class=\"btn btn-warning mt-1 btn-sm\"\r\n                        (click)=\"openModal('generatecomment', item)\"\r\n                      >\r\n                        <span class=\"material-symbols-outlined\">\r\n                          post_add\r\n                        </span>\r\n                      </button>\r\n                      <button\r\n                        class=\"btn btn-warning mt-1 btn-sm\"\r\n                        (click)=\"getComentarios(item)\"\r\n                      >\r\n                        <span class=\"material-symbols-outlined\">\r\n                          visibility\r\n                        </span>\r\n                      </button>\r\n                      <button\r\n                        class=\"btn btn-warning btn-sm\"\r\n                        (click)=\"downloadPdf(item.ShipmentID)\"\r\n                      >\r\n                        <span class=\"material-symbols-outlined\">\r\n                          download\r\n                        </span>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <pagination-controls\r\n                class=\"my-pagination text-center\"\r\n                (pageChange)=\"p = $event\"\r\n                previousLabel=\"Anterior\"\r\n                nextLabel=\"Siguiente\"\r\n              ></pagination-controls>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  id=\"view_docu\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Descargar Documentos</h4>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-4 text-center\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                (click)=\"openDocument(guia)\"\r\n              >\r\n                Guía\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4 text-center\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                (click)=\"openDocument(carta)\"\r\n              >\r\n                carta\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4 text-center\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                (click)=\"openDocument(proforma)\"\r\n              >\r\n                Proforma\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-generatecomment\r\n  (commentCreated)=\"commentCreated($event)\"\r\n  [estado]=\"estado\"\r\n  [data]=\"datashipmentopen\"\r\n></app-generatecomment>\r\n<app-seallcomments [data]=\"comentarios\"></app-seallcomments>\r\n","import { Routes } from '@angular/router';\r\nimport { ViewallshipmentsComponent } from './viewallshipments/viewallshipments.component';\r\n\r\nexport const ShipmentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'viewall',\r\n        component: ViewallshipmentsComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'viewall',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n","import { Component, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-viewallshipments',\r\n  templateUrl: './viewallshipments.component.html',\r\n  styleUrls: ['./viewallshipments.component.css'],\r\n})\r\nexport class ViewallshipmentsComponent implements OnInit {\r\n  searchcompany = new FormGroup({\r\n    businessname: new FormControl('', [Validators.required]), //Nombre de negocio\r\n    guideNumber: new FormControl('', [Validators.required]), //Nombre de negocio\r\n    businessnit: new FormControl('', [Validators.required]), //nit empresa\r\n    business: new FormControl(''), // id del negocio\r\n    brachOffice: new FormControl('', [Validators.required]),\r\n\r\n    branchselected: new FormControl('', [Validators.required]),\r\n    branchid: new FormControl(''),\r\n  });\r\n\r\n  businessNameChanged$ = new Subject<string>();\r\n  private unsubscribe$ = new Subject<void>();\r\n  dataShipments: Array<any> = [];\r\n  filter = '';\r\n  p: number = 1;\r\n  carta = '';\r\n  guia = '';\r\n  proforma = '';\r\n  datashipmentopen = {};\r\n  comentarios: any = [];\r\n  private timeout: any = null;\r\n  estado: boolean = true;\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.SendData();\r\n\r\n    this.searchcompany\r\n      .get('businessname')!\r\n      .valueChanges.pipe(takeUntil(this.unsubscribe$)) // unsubscribe on component destruction\r\n      .subscribe((value) => {\r\n        this.businessNameChanged$.next(value);\r\n        if (value.length > 0) {\r\n          this.searchcompany.patchValue({ guideNumber: '' });\r\n        }\r\n      });\r\n  }\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  /** Sede Seleccionada */\r\n  public BusinessSelect(event: any) {\r\n    this.SendData();\r\n  }\r\n\r\n  public SendData() {\r\n    let body = {\r\n      brachOffice: this.searchcompany.get('businessname')?.value,\r\n      guideNumber: this.searchcompany.get('guideNumber')?.value,\r\n    };\r\n    this.apiservice.post('sps/viewshipments', body).subscribe(\r\n      (res: any) => {\r\n        console.log('envios', res);\r\n        if (res.msg.length == 0) {\r\n          this.sweetalertservice.showNotification(\r\n            'No se encontraron Coincidencias'\r\n          );\r\n        }\r\n        this.dataShipments = res.msg;\r\n      },\r\n      (error) => {\r\n        console.error('Error Al consultar Shipment', error);\r\n        this.sweetalertservice.showNotification(\r\n          error.error.msg ? error.error.msg : 'Error Al consultar Shipment '\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  onKeyUpGuia(event: any) {\r\n    this.searchcompany.patchValue({ businessname: '' });\r\n    if (this.searchcompany.get('guideNumber')?.value.length > 1) {\r\n      clearTimeout(this.timeout);\r\n\r\n      this.timeout = setTimeout(() => {\r\n        console.log(this.searchcompany.value);\r\n        this.SendData();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /** Sucursal Seleccionada */\r\n  public branchSelect(event: any) {\r\n    console.log(event.valor);\r\n    this.searchcompany.patchValue({\r\n      branchid: event.valor._id,\r\n    });\r\n    console.log(this.searchcompany.value);\r\n    this.SendData();\r\n  }\r\n\r\n  /** Sucursal Seleccionada */\r\n  public commentCreated(event: any) {\r\n    this.closeModal('generatecomment');\r\n    this.SendData();\r\n  }\r\n\r\n  downloadPdf(ShipmentID: string) {\r\n    let body = {\r\n      ShipmentID,\r\n    };\r\n    console.log('====================================');\r\n    console.log(body);\r\n    console.log('====================================');\r\n\r\n    this.apiservice.post('sps/viewpdf', body).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n        if (res.msg.carta) {\r\n          this.carta = res.msg.carta;\r\n        }\r\n        if (res.msg.guia) {\r\n          this.guia = res.msg.guia;\r\n        }\r\n        if (res.msg.proforma) {\r\n          this.proforma = res.msg.proforma;\r\n        }\r\n        this.openModal('view_docu');\r\n      },\r\n      (error) => {\r\n        console.error('Error al enviar informacion de crear Comercial', error);\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error Al Crear Comercial'\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  public openModal(modal: String, shipment?: any) {\r\n    if (shipment) {\r\n      this.datashipmentopen = shipment;\r\n    }\r\n    $(`#${modal}`).modal('show');\r\n  }\r\n\r\n  getComentarios(shipment?: any) {\r\n    // console.log('shipment', shipment);\r\n\r\n    let body = {\r\n      ShipmentID: shipment.ShipmentID,\r\n    };\r\n    this.apiservice.post('sps/vwshipcomm', body).subscribe(\r\n      (res: any) => {\r\n        // console.log('comentarios', res);\r\n        if (res.ok == true) {\r\n          this.comentarios = res.msg.comments;\r\n          this.estado = res.msg.status == 'Abierto' ? true : false;\r\n          this.openModal('seallcomment');\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error al consultar comentarios', error);\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error Al consultar comentarios'\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  public closeModal(modal: String) {\r\n    $(`#${modal}`).modal('hide');\r\n  }\r\n\r\n  openDocument(url: any) {\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShipmentRoutes } from './shipments.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NouisliderModule } from 'ng2-nouislider';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport { MaterialModule } from 'src/app/app.module';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ModalModule } from 'src/app/modals/modal.module';\r\nimport { ViewallshipmentsComponent } from './viewallshipments/viewallshipments.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { GeneratecommentComponent } from './components/modals/generatecomment/generatecomment.component';\r\nimport { SeallcommentsComponent } from './components/modals/seallcomments/seallcomments.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { SearchshipmentPipe } from 'src/app/pipes/searchshipment.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewallshipmentsComponent,\r\n    GeneratecommentComponent,\r\n    SeallcommentsComponent,\r\n    SearchshipmentPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ShipmentRoutes),\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule,\r\n    NouisliderModule,\r\n    TagInputModule,\r\n    NgbModule,\r\n    ModalModule,\r\n    NgxPaginationModule,\r\n    MatFormFieldModule,\r\n  ],\r\n})\r\nexport class ShipmentsModule {}\r\n"],"x_google_ignoreList":[]}