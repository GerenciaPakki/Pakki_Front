{"version":3,"file":"334.0e1f8c66054c10e7.js","mappings":"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","names":["ButtonpasswordComponent","constructor","this","ngOnInit","selectors","i0","SearchsedesComponent","FormControl","EventEmitter","console","log","sedes","filteredSedes","sede","valueChanges","pipe","map","value","_filterSedes","ngOnChanges","changes","startWith","filterValue","toLowerCase","filter","tradename","includes","sedeSelect","sedeCambiada","emit","propiedad","AuthRoutes","path","children","component","LoginComponent","element","apiservice","router","formBuilder","sweetalertservice","cookieService","userservice","Date","FormGroup","email","pass","nativeElement","sidebarVisible","get","window","history","go","$","toggleButton","getElementsByClassName","body","document","getElementsByTagName","classList","add","card","setTimeout","remove","formLogin","group","Validators","changepass","password","validatepassword","sidebarToggle","ngOnDestroy","login","localStorage","clear","loadingAlert","Swal","title","allowOutsideClick","didOpen","post","subscribe","res","close","set","token","validarSedes","error","errorMessage","msg","closeModal","modal","setItem","JSON","stringify","sedeselected","navigate","openModal","ischecked","ischeck","data","collaborator","changePass","setPass","data_collaborator","profile","getDataBusiness","getDataBusinessPakki","bodyBussiness","ViewBussPakki","length","forEach","item","branchofficesCount","business","businessname","branchoffices","push","_id","getAllInfoUser","nit","businessNit","collaborators","id","put","confirmButtonText","then","result","isConfirmed","location","reload","sedeChange","event","ctx","AuthModule","CommonModule","RouterModule","FormsModule","MaterialModule","ReactiveFormsModule","ComponentsModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/buttonpassword/buttonpassword.component.ts","./src/app/shared/buttonpassword/buttonpassword.component.html","./src/app/pages/auth/components/searchsedes/searchsedes.component.html","./src/app/pages/auth/components/searchsedes/searchsedes.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/auth.routing.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/auth.module.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-buttonpassword',\r\n  templateUrl: './buttonpassword.component.html',\r\n  styleUrls: ['./buttonpassword.component.css'],\r\n})\r\nexport class ButtonpasswordComponent implements OnInit {\r\n  showPass: boolean = false;\r\n  @Input() password: FormControl;\r\n  @Input() placeholder: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\">\r\n        <input type=\"{{ showPass ? 'text' : 'password' }}\" [formControl]=\"password\" matInput\r\n            [placeholder]=\"placeholder\">\r\n\r\n        <mat-icon matSuffix (click)=\"showPass = !showPass\"><i class=\"fa fa-{{ showPass ? 'eye' : 'eye-slash'}}\"\r\n                style=\"cursor: pointer;\"></i></mat-icon>\r\n\r\n    </mat-form-field>\r\n</form>","<mat-form-field>\r\n  <mat-label>{{ label }}</mat-label>\r\n  <input\r\n    matInput\r\n    aria-label=\"Envio\"\r\n    [matAutocomplete]=\"auto\"\r\n    [formControl]=\"sede\"\r\n    placeholder=\"Aliados\"\r\n  />\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <mat-option\r\n      *ngFor=\"let sede of filteredSedes | async\"\r\n      [value]=\"sede.tradename\"\r\n      (click)=\"sedeSelect(sede)\"\r\n    >\r\n      <span class=\"ml-3\">{{ sede.tradename }}</span>\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n</mat-form-field>\r\n\r\n<!-- <form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n        <mat-label>State</mat-label>\r\n        <input matInput aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"sede\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.tradename\">\r\n                <span>{{state.tradename}}</span>\r\n            </mat-option>\r\n        </mat-autocomplete>\r\n    </mat-form-field> -->\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, map, of, startWith } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-searchsedes',\r\n  templateUrl: './searchsedes.component.html',\r\n  styleUrls: ['./searchsedes.component.css'],\r\n})\r\nexport class SearchsedesComponent implements OnInit {\r\n  sede = new FormControl('');\r\n  @Input() label: string = '';\r\n  @Input() sedes: any[];\r\n  filteredSedes: Observable<any>;\r\n\r\n  @Output() sedeCambiada = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n    console.log('this.sedes:', this.sedes);\r\n    this.filteredSedes = this.sede.valueChanges.pipe(\r\n      map((value) => (value ? this._filterSedes(value) : this.sedes))\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // Este método se llama cada vez que cambia una propiedad de entrada, como 'sedes'.\r\n    // Puedes verificar si 'sedes' ha cambiado y realizar acciones en consecuencia.\r\n    if (changes.sedes) {\r\n      this.filteredSedes = this.sede.valueChanges.pipe(\r\n        startWith(''),\r\n        map((value) => this._filterSedes(value))\r\n      );\r\n    }\r\n  }\r\n\r\n  private _filterSedes(value: string) {\r\n    if (!this.sedes) {\r\n      return [];\r\n    }\r\n    const filterValue = value.toLowerCase();\r\n    return this.sedes.filter((sede) =>\r\n      sede.tradename.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n  public sedeSelect(value) {\r\n    this.sedeCambiada.emit({\r\n      propiedad: 'sede_seleccionada',\r\n      value: value,\r\n    });\r\n  }\r\n}\r\n","<div class=\"wrapper wrapper-full-page\">\r\n  <div\r\n    class=\"page-header login-page header-filter\"\r\n    style=\"\r\n      background-image: url('./assets/img/fondo-black.jpg');\r\n      background-size: cover;\r\n      background-position: top center;\r\n    \"\r\n  >\r\n    <!--   you can change the color of the filter page using: data-color=\"blue | purple | green | orange | red | rose \" -->\r\n\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto\">\r\n          <div class=\"text-center\">\r\n            <img src=\"/assets/img/logo_pakki.png\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto\">\r\n          <form class=\"form\" [formGroup]=\"formLogin\">\r\n            <div class=\"card card-login card-hidden\">\r\n              <div class=\"card-header card-header-warning text-center\">\r\n                <h4 class=\"card-title\">Log in</h4>\r\n                <!-- <div class=\"social-line\">\r\n                                    <a href=\"#pablo\" class=\"btn btn-just-icon btn-link btn-white\">\r\n                                        <i class=\"fa fa-facebook-square\"></i>\r\n                                    </a>\r\n\r\n                                    <a href=\"#pablo\" class=\"btn btn-just-icon btn-link btn-white\">\r\n                                        <i class=\"fa fa-google-plus\"></i>\r\n                                    </a>\r\n                                </div> -->\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <span class=\"bmd-form-group\">\r\n                  <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\">\r\n                        <i class=\"material-icons\">email</i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"email\"\r\n                      placeholder=\"Usuario...\"\r\n                    />\r\n                  </div>\r\n                </span>\r\n                <span class=\"bmd-form-group\">\r\n                  <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\">\r\n                        <i class=\"material-icons\">lock_outline</i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"password\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"pass\"\r\n                      placeholder=\"Password...\"\r\n                    />\r\n                  </div>\r\n                </span>\r\n\r\n                <div class=\"text-center mt-2\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-10 align-self-center\">\r\n                      <mat-checkbox\r\n                        class=\"\"\r\n                        (change)=\"ischecked()\"\r\n                        [checked]=\"ischeck\"\r\n                        >Acepta\r\n                        <a\r\n                          href=\"https://pakki.co/terminos.html\"\r\n                          style=\"color: blue\"\r\n                          target=\"_blank\"\r\n                          >términos y condiciones\r\n                        </a>\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-footer justify-content-center\">\r\n                <div class=\"card-footer\">\r\n                  <button\r\n                    [disabled]=\"!ischeck || formLogin.invalid\"\r\n                    (click)=\"login()\"\r\n                    mat-raised-button\r\n                    type=\"button\"\r\n                    class=\"btn btn-fill btn-primary\"\r\n                  >\r\n                    Acceder\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  id=\"myModal\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\"></h5>\r\n        <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button> -->\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"row mb-1\">\r\n          <div class=\"col-12 text-center\">\r\n            <h3 class=\"card-title\">\r\n              Bienvenido: <b>{{ data_collaborator?.name }}</b>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <p class=\"ml-3\">\r\n              <b>Por favor selecciona la compañia a Ingresar:</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col align-self-start\">\r\n          <app-searchsedes\r\n            class=\"\"\r\n            [sedes]=\"sedes\"\r\n            [label]=\"'Aliados'\"\r\n            (sedeCambiada)=\"sedeChange($event)\"\r\n          ></app-searchsedes>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-sm-2 text-center mt-3\"><i class=\"material-icons\">store</i></div>\r\n                    <div class=\"col-sm-10\">\r\n                        <mat-form-field>\r\n                            <mat-select placeholder=\"Sede\" [(ngModel)]=\"sedeselected\" name=\"Paris\"\r\n                                ariaLabel=\"cities[0]\">\r\n                                <mat-option *ngFor=\"let city of sedes\" [value]=\"city\">\r\n                                    {{ city.tradeName }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div> -->\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button\r\n          (click)=\"closeModal()\"\r\n          [disabled]=\"!sedeselected\"\r\n          type=\"button\"\r\n          class=\"btn btn-fill btn-primary\"\r\n        >\r\n          Continuar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  id=\"changepass\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Cambiar Contraseña</h5>\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"changepass\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12\">\r\n              <app-buttonpassword\r\n                [placeholder]=\"'Contraseña Anterior'\"\r\n                [password]=\"changepass.get('document')\"\r\n              ></app-buttonpassword>\r\n            </div>\r\n            <div class=\"col-xl-12\">\r\n              <app-buttonpassword\r\n                [placeholder]=\"'Contraseña'\"\r\n                [password]=\"changepass.controls.password\"\r\n              ></app-buttonpassword>\r\n            </div>\r\n            <div class=\"col-xl-12\">\r\n              <app-buttonpassword\r\n                [placeholder]=\"'Confirmar Contraseña'\"\r\n                [password]=\"changepass.controls.validatepassword\"\r\n              ></app-buttonpassword>\r\n            </div>\r\n\r\n            <div class=\"col-xl-12\">\r\n              <mat-error\r\n                *ngIf=\"\r\n                  changepass.get('password').value !=\r\n                    changepass.get('validatepassword').value &&\r\n                  changepass.get('password').touched &&\r\n                  changepass.get('validatepassword').touched\r\n                \"\r\n              >\r\n                Las contraseñas no <strong>coinciden</strong>\r\n              </mat-error>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button\r\n          (click)=\"changePass()\"\r\n          [disabled]=\"\r\n            changepass.invalid ||\r\n            changepass.get('password').value !==\r\n              changepass.get('validatepassword').value\r\n          \"\r\n          type=\"button\"\r\n          class=\"btn btn-fill btn-primary\"\r\n        >\r\n          Continuar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nexport const AuthRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { Component, OnInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { DialogAfterLoginComponent } from 'src/app/dialogs/dialog-after-login/dialog-after-login.component';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-login-cmp',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  test: Date = new Date();\r\n  private toggleButton: any;\r\n  private sidebarVisible: boolean;\r\n  private nativeElement: Node;\r\n  formLogin = new FormGroup({\r\n    email: new FormControl(''),\r\n    pass: new FormControl(''),\r\n  });\r\n\r\n  changepass: FormGroup;\r\n\r\n  ischeck: boolean = true;\r\n  sedeselected;\r\n  /**Sedes del Usuario */\r\n  sedes = [];\r\n  data_collaborator: any;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private apiservice: ApiService,\r\n    private router: Router,\r\n    public formBuilder: FormBuilder,\r\n    public sweetalertservice: SweetalertService,\r\n    private cookieService: CookieService,\r\n    private userservice: UserService\r\n  ) {\r\n    this.nativeElement = element.nativeElement;\r\n    this.sidebarVisible = false;\r\n\r\n    if (this.cookieService.get('token')) {\r\n      //this.router.navigate(['quotation']);\r\n      window.history.go(-1);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    (window as any).$ = $;\r\n    var navbar: HTMLElement = this.element.nativeElement;\r\n    this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.add('login-page');\r\n    body.classList.add('off-canvas-sidebar');\r\n    const card = document.getElementsByClassName('card')[0];\r\n    setTimeout(function () {\r\n      // after 1000 ms we add the class animated to the login/register card\r\n      card.classList.remove('card-hidden');\r\n    }, 700);\r\n\r\n    this.formLogin = this.formBuilder.group({\r\n      email: new FormControl('gerencia@yotraigo.com', [Validators.required]),\r\n      pass: new FormControl('80141205', [Validators.required]),\r\n    });\r\n\r\n    this.changepass = this.formBuilder.group({\r\n      document: ['', Validators.required],\r\n      password: ['', Validators.required, Validators.minLength(6)],\r\n      validatepassword: ['', Validators.required, Validators.minLength(6)],\r\n    });\r\n  }\r\n\r\n  sidebarToggle() {\r\n    var toggleButton = this.toggleButton;\r\n    var body = document.getElementsByTagName('body')[0];\r\n    var sidebar = document.getElementsByClassName('navbar-collapse')[0];\r\n    if (this.sidebarVisible == false) {\r\n      setTimeout(function () {\r\n        toggleButton.classList.add('toggled');\r\n      }, 500);\r\n      body.classList.add('nav-open');\r\n      this.sidebarVisible = true;\r\n    } else {\r\n      this.toggleButton.classList.remove('toggled');\r\n      this.sidebarVisible = false;\r\n      body.classList.remove('nav-open');\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.remove('login-page');\r\n    body.classList.remove('off-canvas-sidebar');\r\n  }\r\n\r\n  login() {\r\n    localStorage.clear();\r\n\r\n    const loadingAlert: any = Swal.fire({\r\n      title: 'Enviando Información...',\r\n      allowOutsideClick: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    this.apiservice.post('lg', this.formLogin.value).subscribe(\r\n      (res) => {\r\n        loadingAlert.close();\r\n        this.cookieService.set('token', res.token);\r\n        this.validarSedes();\r\n      },\r\n      (error) => {\r\n        console.log('error en el login', error);\r\n        loadingAlert.close();\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error en login'\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  closeModal() {\r\n    $('#myModal').modal('hide');\r\n\r\n    localStorage.setItem('changepass', 'false');\r\n    localStorage.setItem('selectsucursal', JSON.stringify(this.sedeselected));\r\n    this.router.navigate(['quoter/quotation']);\r\n    // this.router.navigate(['quote']);\r\n  }\r\n\r\n  openModal(modal: string) {\r\n    $(modal).modal('show');\r\n  }\r\n\r\n  ischecked() {\r\n    this.ischeck = !this.ischeck;\r\n  }\r\n\r\n  validarSedes() {\r\n    this.apiservice.post('rgs/token').subscribe(\r\n      (res) => {\r\n        if (res.data.collaborator.changePass == false) {\r\n          this.setPass('true');\r\n\r\n          this.openModal('#changepass');\r\n          return;\r\n        }\r\n        this.data_collaborator = res.data.collaborator;\r\n        localStorage.setItem('dataUser', JSON.stringify(res.data));\r\n        /**Validar Perfiles*/\r\n        if (this.data_collaborator.profile == 'Pakki') {\r\n          this.getDataBusinessPakki();\r\n          return;\r\n        }\r\n        if (this.data_collaborator.profile == 'Owner') {\r\n          this.getDataBusiness();\r\n          return;\r\n        }\r\n        if (this.data_collaborator.profile == 'CEI') {\r\n          this.setPass('false');\r\n          this.router.navigate(['quoter/quotation']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log('error en validar sedes', error);\r\n        this.sweetalertservice.errorMessage('Error en la validacion de sedes');\r\n      }\r\n    );\r\n  }\r\n\r\n  public getDataBusinessPakki() {\r\n    let body = this.bodyBussiness;\r\n    this.apiservice.post('bs/allbuspk', body).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        if (res.ViewBussPakki.length > 0) {\r\n          res.ViewBussPakki.forEach((item: any) => {\r\n            if (item.branchofficesCount <= 0) return;\r\n\r\n            if (item.business.businessname === 'Pakki') {\r\n              this.sedes = item.branchoffices;\r\n            } else {\r\n              item.branchoffices.forEach((sede) => {\r\n                let objsede = {\r\n                  tradename: `${item.business.businessname},${sede.tradename}`,\r\n                  _id: sede._id,\r\n                };\r\n                this.sedes.push(objsede);\r\n              });\r\n            }\r\n          });\r\n        }\r\n\r\n        console.log(this.sedes);\r\n\r\n        /**Validar si hay mas de una sede para seleccionar */\r\n\r\n        if (this.sedes.length > 1) {\r\n          $('#myModal').modal('show');\r\n        } else {\r\n          this.setPass('false');\r\n          this.router.navigate(['quoter/quotation']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log('Error al consultar sedes', error);\r\n        this.sweetalertservice.errorMessage('Error al consultar sedes');\r\n      }\r\n    );\r\n  }\r\n\r\n  public getDataBusiness() {\r\n    let body = this.bodyBussiness;\r\n\r\n    this.apiservice.post('bs/allbusali', body).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n\r\n        if (res.ViewBussPakki.length > 0) {\r\n          res.ViewBussPakki.forEach((item: any) => {\r\n            if (item.branchofficesCount <= 0) return;\r\n            this.sedes = item.branchoffices;\r\n          });\r\n        }\r\n\r\n        console.log(this.sedes);\r\n\r\n        /**Validar si hay mas de una sede para seleccionar */\r\n        if (this.sedes.length > 1) {\r\n          $('#myModal').modal('show');\r\n        } else {\r\n          this.setPass('false');\r\n          this.router.navigate(['quoter/quotation']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log('Error al consultar sedes Aliado', error);\r\n        this.sweetalertservice.errorMessage('Error al consultar sedes');\r\n      }\r\n    );\r\n  }\r\n\r\n  get bodyBussiness() {\r\n    let data = this.userservice.getAllInfoUser();\r\n    let body = {\r\n      nit: data.business.businessNit,\r\n      collaborators: data.collaborator.id,\r\n    };\r\n    return body;\r\n  }\r\n\r\n  changePass() {\r\n    this.apiservice.put('cl/changepass', this.changepass.value).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        Swal.fire({\r\n          title: res.msg,\r\n          /* showDenyButton: true, */\r\n          confirmButtonText: 'Aceptar',\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            localStorage.clear();\r\n            window.location.reload();\r\n            //localStorage.setItem('changepass', 'false');\r\n            //this.router.navigate(['login']);\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log('error en actualización de contraseña', error);\r\n        this.sweetalertservice.errorMessage(\r\n          'Error en actualización de contraseña'\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  public sedeChange(event: any) {\r\n    console.log('recibido en el padre', event);\r\n    this.sedeselected = event.value;\r\n    console.log(this.sedeselected);\r\n  }\r\n\r\n  public setPass(value: string) {\r\n    localStorage.setItem('changepass', value);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AuthRoutes } from './auth.routing';\r\nimport { MaterialModule } from 'src/app/app.module';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ButtonpasswordComponent } from 'src/app/shared/buttonpassword/buttonpassword.component';\r\nimport { SearchsedesComponent } from './components/searchsedes/searchsedes.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthRoutes),\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule,\r\n  ],\r\n  declarations: [LoginComponent, ButtonpasswordComponent, SearchsedesComponent],\r\n})\r\nexport class AuthModule {}\r\n"],"x_google_ignoreList":[]}