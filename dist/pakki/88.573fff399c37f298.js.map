{"version":3,"file":"88.573fff399c37f298.js","mappings":"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","names":["CreatepostalComponent","constructor","apiservice","sweetalertservice","this","FormGroup","CountryCode","FormControl","Validators","PostalCodeCity","CityName","StateName","StateCode","ngOnInit","ngOnChanges","changes","createPostalCode","patchValue","removeData","setValue","onCityChange","event","console","log","valor","sendData","value","post","subscribe","res","Swal","msg","error","errorMessage","i0","selectors","ctx","SearchbycodeComponent","EventEmitter","ngOnDestroy","onKeyUp","filterValue","postalcode","length","countrycode","ciudades","filteredresults","of","postalCodeDB","filteredCities","filter","state","toLowerCase","includes","citySelect","codigoCambiado","emit","propiedad","ClonepostalcodeComponent","data","clonePostalForm","closeModal","modal","$","clonepostal","newcity","title","icon","showDenyButton","showCancelButton","confirmButtonText","then","result","isConfirmed","SearchonepostalComponent","StateGuidance","StateNumber","Cam1","Cam2","Lat","Log","Cam3","viewPostalCode","codigoChange","openModal","CountrysearchPipe","transform","arg","item","CountryName","pure","country_r1","PostalRoutes","path","children","component","ViewpostalComponent","fb","route","router","getDataPostal","datacountry","redirectTo","pathMatch","PostalcodesModule","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","ComponentsModule","MaterialModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/postalcodes/pages/createpostal/createpostal.component.ts","./src/app/pages/postalcodes/pages/createpostal/createpostal.component.html","./src/app/pages/postalcodes/components/searchbycode/searchbycode.component.html","./src/app/pages/postalcodes/components/searchbycode/searchbycode.component.ts","./src/app/pages/postalcodes/components/clonepostalcode/clonepostalcode.component.ts","./src/app/pages/postalcodes/components/clonepostalcode/clonepostalcode.component.html","./src/app/pages/postalcodes/pages/searchonepostal/searchonepostal.component.ts","./src/app/pages/postalcodes/pages/searchonepostal/searchonepostal.component.html","./src/app/pipes/countrysearch.pipe.ts","./src/app/pages/postalcodes/pages/viewpostal/viewpostal.component.html","./src/app/pages/postalcodes/postal.routing.ts","./src/app/pages/postalcodes/pages/viewpostal/viewpostal.component.ts","./src/app/pages/postalcodes/postalcodes.module.ts"],"sourcesContent":["import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-createpostal',\r\n  templateUrl: './createpostal.component.html',\r\n  styleUrls: ['./createpostal.component.css'],\r\n})\r\nexport class CreatepostalComponent implements OnInit {\r\n  @Input() CountryCode: any;\r\n\r\n  createPostalCode = new FormGroup({\r\n    CountryCode: new FormControl('', [Validators.required]), //\r\n    PostalCodeCity: new FormControl('', [Validators.required]), //\r\n    CityName: new FormControl('', [Validators.required]), //\r\n    StateName: new FormControl(''),\r\n    StateCode: new FormControl('', [Validators.minLength(1)]),\r\n    /* StateGuidance: new FormControl('', [Validators.required]),\r\n    \r\n    Cam1: new FormControl('', [Validators.required]),\r\n    Cam2: new FormControl('', [Validators.required]),\r\n    Lat: new FormControl(''), //\r\n    Log: new FormControl('', [Validators.required]),\r\n    Cam3: new FormControl('', [Validators.required]), */\r\n  });\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.CountryCode) {\r\n      // console.log(this.CountryCode);\r\n      this.createPostalCode.patchValue({ CountryCode: this.CountryCode });\r\n      // this.getDataUserbyDoc();\r\n    }\r\n  }\r\n\r\n  public removeData() {\r\n    this.createPostalCode.setValue({\r\n      CountryCode: '',\r\n      PostalCodeCity: '',\r\n      CityName: '',\r\n      StateName: '',\r\n      StateCode: '',\r\n    });\r\n  }\r\n\r\n  public onCityChange(event: any) {\r\n    console.log('ciudad en el padre', event.valor);\r\n\r\n    this.createPostalCode.patchValue({ CityName: event.valor.CityName });\r\n    // this.createPostalCode.patchValue({ StateName: event.valor.StateName });\r\n    /* this.createPostalCode.patchValue({\r\n      StateCode: event.valor.StateCode,\r\n    }); */\r\n  }\r\n\r\n  public sendData() {\r\n    console.log(this.createPostalCode.value);\r\n\r\n    this.apiservice.post('dcc/pcone', this.createPostalCode.value).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n        Swal.fire(res.msg, '', 'success');\r\n      },\r\n      (error) => {\r\n        console.error(\r\n          'Error al enviar informacion de crear código postal',\r\n          error\r\n        );\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error Al Crear Código'\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div\r\n  id=\"createpostal\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Crear Código Postal</h4>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n          (click)=\"removeData()\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <form [formGroup]=\"createPostalCode\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Código postal\"\r\n                    formControlName=\"PostalCodeCity\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <app-inputciudad\r\n                  [countrycode]=\"createPostalCode.get('CountryCode')\"\r\n                  [ciudad]=\"createPostalCode.get('CityName')\"\r\n                  [label]=\"'Ciudad'\"\r\n                  (ciudadCambiada)=\"onCityChange($event)\"\r\n                ></app-inputciudad>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Nombre estado o departamento\"\r\n                    formControlName=\"StateName\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Número de Estado\"\r\n                    formControlName=\"StateCode\"\r\n                    type=\"text\"\r\n                    maxlength=\"10\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"row\">\r\n                \r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Cam1\"\r\n                    formControlName=\"Cam1\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Cam2\"\r\n                    formControlName=\"Cam2\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Lat\"\r\n                    formControlName=\"Lat\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Log\"\r\n                    formControlName=\"Log\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Cam3\"\r\n                    formControlName=\"Cam3\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div> -->\r\n\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-warning float-right\"\r\n              (click)=\"sendData()\"\r\n              [disabled]=\"createPostalCode.invalid\"\r\n            >\r\n              Crear Cógigo\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input\r\n      matInput\r\n      aria-label=\"Envio\"\r\n      [matAutocomplete]=\"auto\"\r\n      (input)=\"onKeyUp()\"\r\n      [formControl]=\"postalcode\"\r\n    />\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option\r\n        *ngFor=\"let city of filteredresults | async\"\r\n        [value]=\"city.PostalCodeCity\"\r\n        (click)=\"citySelect(city)\"\r\n      >\r\n        <span class=\"ml-3\"\r\n          >{{ city.StateName }} - {{ city.PostalCodeCity }}-{{\r\n            city.CityName\r\n          }}</span\r\n        >\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-searchbycode',\r\n  templateUrl: './searchbycode.component.html',\r\n  styleUrls: ['./searchbycode.component.css'],\r\n})\r\nexport class SearchbycodeComponent implements OnInit {\r\n  @Input() countrycode: FormControl; //codigo pais\r\n  @Input() postalcode: FormControl; //codigo postal\r\n  @Input() label: string;\r\n  filteredresults: Observable<any>;\r\n  @Output() codigoCambiado = new EventEmitter<any>();\r\n  ciudades: Array<any> = [];\r\n  constructor(private apiservice: ApiService) {}\r\n\r\n  ngOnInit(): void {}\r\n  ngOnDestroy() {}\r\n\r\n  onKeyUp() {\r\n    const filterValue = this.postalcode.value;\r\n    //console.log(filterValue);\r\n    // console.log('codigo pais en consulta', this.countrycode.value);\r\n\r\n    if (filterValue.length >= 3 && this.countrycode.value) {\r\n      this.ciudades = [];\r\n      this.filteredresults = of([]);\r\n      let body = {\r\n        CountryCode: this.countrycode.value,\r\n        postalcode: this.postalcode.value,\r\n      };\r\n\r\n      this.apiservice.post('dcc/ptal', body).subscribe(\r\n        (res: any) => {\r\n          this.ciudades = res.postalCodeDB;\r\n          const filteredCities = this.ciudades?.filter(\r\n            (state) => state.PostalCodeCity.toLowerCase().includes(filterValue)\r\n            // || state.StateName.toLowerCase().includes(filterValue)\r\n          );\r\n          this.filteredresults = of(filteredCities);\r\n        },\r\n        (error) => {\r\n          console.error('Error en la llamada al API:', error);\r\n          this.ciudades = [];\r\n        }\r\n      );\r\n    } else {\r\n      this.ciudades = [];\r\n      this.filteredresults = of([]);\r\n    }\r\n  }\r\n\r\n  public citySelect(value) {\r\n    this.filteredresults = of([]);\r\n    this.codigoCambiado.emit({\r\n      propiedad: 'codigo_seleccionado',\r\n      valor: value,\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\nimport Swal from 'sweetalert2';\r\nimport { ClonePostal } from '../../interfaces/clonepostal.interface';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-clonepostalcode',\r\n  templateUrl: './clonepostalcode.component.html',\r\n  styleUrls: ['./clonepostalcode.component.css'],\r\n})\r\nexport class ClonepostalcodeComponent implements OnInit {\r\n  @Input() data: ClonePostal;\r\n  clonePostalForm: any;\r\n  newcity: string = '';\r\n\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data) {\r\n      if (this.data.CountryCode) {\r\n        this.clonePostalForm = this.data; // crear copia del postalcode recibido\r\n        // console.log('clone', this.clonePostalForm);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public closeModal(modal: String) {\r\n    $(`#${modal}`).modal('hide');\r\n  }\r\n\r\n  public clonepostal() {\r\n    this.clonePostalForm.CityName = this.newcity;\r\n    console.log('body', this.clonePostalForm);\r\n\r\n    this.apiservice.post('cpc/clopc', this.clonePostalForm).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n        Swal.fire({\r\n          title: res.msg,\r\n          icon: 'success',\r\n          showDenyButton: false,\r\n          showCancelButton: false,\r\n          confirmButtonText: 'Ok',\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.closeModal('clonepostal');\r\n            this.newcity = '';\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error('Error al enviar en clonar código postal', error);\r\n        this.sweetalertservice.errorMessage(\r\n          error.error.msg ? error.error.msg : 'Error Al Clonar Código Postal'\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div\r\n  id=\"clonepostal\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Clonar Código Postal</h4>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Ciudad\"\r\n                  [(ngModel)]=\"newcity\"\r\n                  type=\"text\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-warning float-right\"\r\n            (click)=\"clonepostal()\"\r\n            [disabled]=\"newcity.length == 0\"\r\n          >\r\n            Clonar Cógigo\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-searchonepostal',\r\n  templateUrl: './searchonepostal.component.html',\r\n  styleUrls: ['./searchonepostal.component.css'],\r\n})\r\nexport class SearchonepostalComponent implements OnInit {\r\n  @Input() CountryCode: any;\r\n\r\n  viewPostalCode: FormGroup = new FormGroup({\r\n    CountryCode: new FormControl('', [Validators.required]), //\r\n    PostalCodeCity: new FormControl(''), //\r\n    CityName: new FormControl('', [Validators.required]), //\r\n    StateName: new FormControl('', [Validators.required]), //\r\n    StateCode: new FormControl('', [Validators.required]),\r\n    StateGuidance: new FormControl('', [Validators.required]),\r\n    StateNumber: new FormControl('', [\r\n      Validators.minLength(10),\r\n      Validators.maxLength(10),\r\n    ]),\r\n    Cam1: new FormControl('', [Validators.required]),\r\n    Cam2: new FormControl('', [Validators.required]),\r\n    Lat: new FormControl(''), //\r\n    Log: new FormControl('', [Validators.required]),\r\n    Cam3: new FormControl('', [Validators.required]),\r\n  });\r\n  constructor(\r\n    private apiservice: ApiService,\r\n    public sweetalertservice: SweetalertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.CountryCode) {\r\n      // console.log('cambio codigo postal', this.CountryCode);\r\n      this.viewPostalCode.patchValue({ CountryCode: this.CountryCode });\r\n    }\r\n  }\r\n\r\n  public removeData() {\r\n    this.viewPostalCode.patchValue({ PostalCodeCity: '' });\r\n    this.viewPostalCode.patchValue({ CityName: '' });\r\n    this.viewPostalCode.patchValue({ StateName: '' });\r\n    this.viewPostalCode.patchValue({ StateCode: '' });\r\n    this.viewPostalCode.patchValue({\r\n      StateGuidance: '',\r\n    });\r\n    this.viewPostalCode.patchValue({ StateNumber: '' });\r\n    this.viewPostalCode.patchValue({ Cam1: '' });\r\n    this.viewPostalCode.patchValue({ Cam2: '' });\r\n    this.viewPostalCode.patchValue({ Lat: '' });\r\n    this.viewPostalCode.patchValue({ Log: '' });\r\n    this.viewPostalCode.patchValue({ Cam3: '' });\r\n  }\r\n\r\n  /** buscador de código postal */\r\n  public codigoChange(event: any) {\r\n    console.log(event);\r\n    this.viewPostalCode.patchValue({ CityName: event.valor.CityName });\r\n    this.viewPostalCode.patchValue({ StateName: event.valor.StateName });\r\n    this.viewPostalCode.patchValue({ StateCode: event.valor.StateCode });\r\n    this.viewPostalCode.patchValue({\r\n      StateGuidance: event.valor.StateGuidance,\r\n    });\r\n    this.viewPostalCode.patchValue({ StateNumber: event.valor.StateNumber });\r\n    this.viewPostalCode.patchValue({ Cam1: event.valor.Cam1 });\r\n    this.viewPostalCode.patchValue({ Cam2: event.valor.Cam2 });\r\n    this.viewPostalCode.patchValue({ Lat: event.valor.Lat });\r\n    this.viewPostalCode.patchValue({ Log: event.valor.Log });\r\n    this.viewPostalCode.patchValue({ Cam3: event.valor.Cam3 });\r\n    console.log(this.viewPostalCode.value);\r\n  }\r\n\r\n  public openModal(modal: String) {\r\n    $(`#${modal}`).modal('show');\r\n  }\r\n}\r\n","<div\r\n  id=\"search\"\r\n  data-backdrop=\"static\"\r\n  data-keyboard=\"false\"\r\n  class=\"modal fade\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Buscar Código Postal</h4>\r\n\r\n        <button\r\n          class=\"btn btn-warning btn-sm\"\r\n          (click)=\"openModal('clonepostal')\"\r\n        >\r\n          Clonar Código\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n          (click)=\"removeData()\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-fluid\">\r\n          <form [formGroup]=\"viewPostalCode\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <app-searchbycode\r\n                  [label]=\"'Código Postal'\"\r\n                  [countrycode]=\"viewPostalCode.get('CountryCode')\"\r\n                  [postalcode]=\"viewPostalCode.get('PostalCodeCity')\"\r\n                  (codigoCambiado)=\"codigoChange($event)\"\r\n                ></app-searchbycode>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Ciudad\"\r\n                    formControlName=\"CityName\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Orientación estatal\"\r\n                    formControlName=\"StateGuidance\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Número de Estado\"\r\n                    formControlName=\"StateNumber\"\r\n                    type=\"text\"\r\n                    maxlength=\"10\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Cam1\"\r\n                    formControlName=\"Cam1\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Cam2\"\r\n                    formControlName=\"Cam2\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Lat\"\r\n                    formControlName=\"Lat\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Log\"\r\n                    formControlName=\"Log\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Cam3\"\r\n                    formControlName=\"Cam3\"\r\n                    type=\"text\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-clonepostalcode [data]=\"viewPostalCode.value\"></app-clonepostalcode>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'countrysearch',\r\n})\r\nexport class CountrysearchPipe implements PipeTransform {\r\n  transform(value: any, arg?: any): unknown {\r\n    if (!value || !arg) {\r\n      return value;\r\n    }\r\n    arg = arg.toLowerCase();\r\n\r\n    return value.filter((item) => {\r\n      const CountryName = item.CountryName?.toLowerCase();\r\n      return CountryName.includes(arg);\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <input class=\"form-control\" name=\"filter\" type=\"search\" [(ngModel)]=\"filter\" placeholder=\"Buscar...\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-icon card-header-warning\">\r\n            <div class=\"card-icon\">\r\n              <span class=\"material-symbols-outlined\">\r\n                public\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"text-black text-center\">\r\n                <tr>\r\n                  <th>Nombre Pais</th>\r\n                  <th>Código Postal</th>\r\n                  <th>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  *ngFor=\"let country of datacountry | countrysearch : filter   | paginate: { itemsPerPage: 5, currentPage: p }\"\r\n                  class=\"text-black text-center\">\r\n                  <td>{{country.CountryName}}</td>\r\n                  <td>{{country.CountryCode}}</td>\r\n\r\n                  <td>\r\n\r\n                    <button class=\"btn btn-warning btn-sm\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                      title=\"Crear Código postal\" (click)=\"openModal('createpostal', country.CountryCode)\">\r\n                      <span class=\"material-symbols-outlined\">\r\n                        add\r\n                      </span>\r\n                    </button>\r\n\r\n                    <button class=\"btn btn-warning btn-sm\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                      title=\"Buscar Código postal\" (click)=\"openModal('search', country.CountryCode)\">\r\n                      <span class=\"material-symbols-outlined\">\r\n                        search\r\n                      </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <pagination-controls class=\"my-pagination text-center\" (pageChange)=\"p = $event\" previousLabel=\"Anterior\"\r\n              nextLabel=\"Siguiente\"></pagination-controls>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-createpostal [CountryCode]=\"countrycode\"></app-createpostal>\r\n<app-searchonepostal [CountryCode]=\"countrycode\"></app-searchonepostal>","import { Routes } from '@angular/router';\r\nimport { ViewpostalComponent } from './pages/viewpostal/viewpostal.component';\r\n\r\n\r\n\r\nexport const PostalRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'view',\r\n        component: ViewpostalComponent ,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SweetalertService } from 'src/app/services/sweetalert.service';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-viewpostal',\r\n  templateUrl: './viewpostal.component.html',\r\n  styleUrls: ['./viewpostal.component.css'],\r\n})\r\nexport class ViewpostalComponent implements OnInit {\r\n  datacountry: any;\r\n  filter: string = '';\r\n  p = 1;\r\n  countrycode: any;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private apiservice: ApiService,\r\n    private sweetalertservice: SweetalertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getDataPostal();\r\n  }\r\n\r\n  public getDataPostal() {\r\n    this.apiservice.post('cpc/allco').subscribe(\r\n      (res) => {\r\n        this.datacountry = res.msg;\r\n      },\r\n      (error) => {\r\n        console.log('error al consultar usuarios', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public openModal(modal: String, countrycode?: any) {\r\n    // console.log(modal, countrycode);\r\n    this.countrycode = countrycode;\r\n\r\n    $(`#${modal}`).modal('show');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewpostalComponent } from './pages/viewpostal/viewpostal.component';\r\nimport { PostalRoutes } from './postal.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MaterialModule } from 'src/app/app.module';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { CountrysearchPipe } from 'src/app/pipes/countrysearch.pipe';\r\nimport { CreatepostalComponent } from './pages/createpostal/createpostal.component';\r\nimport { SearchonepostalComponent } from './pages/searchonepostal/searchonepostal.component';\r\nimport { SearchbycodeComponent } from './components/searchbycode/searchbycode.component';\r\nimport { ClonepostalcodeComponent } from './components/clonepostalcode/clonepostalcode.component';\r\n\r\n@NgModule({\r\n  declarations: [ViewpostalComponent, CountrysearchPipe, CreatepostalComponent, SearchonepostalComponent, SearchbycodeComponent, ClonepostalcodeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(PostalRoutes),\r\n    ComponentsModule,\r\n    MaterialModule,\r\n    NgxPaginationModule,\r\n    ComponentsModule,\r\n  ],\r\n})\r\nexport class PostalcodesModule {}\r\n"],"x_google_ignoreList":[]}